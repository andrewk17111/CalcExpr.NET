### YamlMime:ManagedReference
items:
- uid: CalcExpr.Expressions.Terminals.Number
  commentId: T:CalcExpr.Expressions.Terminals.Number
  id: Number
  parent: CalcExpr.Expressions.Terminals
  children:
  - CalcExpr.Expressions.Terminals.Number.#ctor(System.Double)
  - CalcExpr.Expressions.Terminals.Number.BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  - CalcExpr.Expressions.Terminals.Number.BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  - CalcExpr.Expressions.Terminals.Number.Equals(System.Object)
  - CalcExpr.Expressions.Terminals.Number.GetHashCode
  - CalcExpr.Expressions.Terminals.Number.IsEven
  - CalcExpr.Expressions.Terminals.Number.IsInteger
  - CalcExpr.Expressions.Terminals.Number.IsNegative
  - CalcExpr.Expressions.Terminals.Number.IsOdd
  - CalcExpr.Expressions.Terminals.Number.IsPositive
  - CalcExpr.Expressions.Terminals.Number.ONE
  - CalcExpr.Expressions.Terminals.Number.PostfixOperate(System.String,CalcExpr.Context.ExpressionContext)
  - CalcExpr.Expressions.Terminals.Number.PrefixOperate(System.String,CalcExpr.Context.ExpressionContext)
  - CalcExpr.Expressions.Terminals.Number.ToLogical
  - CalcExpr.Expressions.Terminals.Number.ToString(System.String)
  - CalcExpr.Expressions.Terminals.Number.Value
  - CalcExpr.Expressions.Terminals.Number.ZERO
  - CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Byte
  - CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Decimal
  - CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Double
  - CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Int16
  - CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Int32
  - CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Int64
  - CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.SByte
  - CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Single
  - CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.UInt16
  - CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.UInt32
  - CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.UInt64
  - CalcExpr.Expressions.Terminals.Number.op_Explicit(System.Byte)~CalcExpr.Expressions.Terminals.Number
  - CalcExpr.Expressions.Terminals.Number.op_Explicit(System.Decimal)~CalcExpr.Expressions.Terminals.Number
  - CalcExpr.Expressions.Terminals.Number.op_Explicit(System.Double)~CalcExpr.Expressions.Terminals.Number
  - CalcExpr.Expressions.Terminals.Number.op_Explicit(System.Int16)~CalcExpr.Expressions.Terminals.Number
  - CalcExpr.Expressions.Terminals.Number.op_Explicit(System.Int32)~CalcExpr.Expressions.Terminals.Number
  - CalcExpr.Expressions.Terminals.Number.op_Explicit(System.Int64)~CalcExpr.Expressions.Terminals.Number
  - CalcExpr.Expressions.Terminals.Number.op_Explicit(System.SByte)~CalcExpr.Expressions.Terminals.Number
  - CalcExpr.Expressions.Terminals.Number.op_Explicit(System.Single)~CalcExpr.Expressions.Terminals.Number
  - CalcExpr.Expressions.Terminals.Number.op_Explicit(System.UInt16)~CalcExpr.Expressions.Terminals.Number
  - CalcExpr.Expressions.Terminals.Number.op_Explicit(System.UInt32)~CalcExpr.Expressions.Terminals.Number
  - CalcExpr.Expressions.Terminals.Number.op_Explicit(System.UInt64)~CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: Number
  nameWithType: Number
  fullName: CalcExpr.Expressions.Terminals.Number
  type: Class
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Number
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 10
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  summary: Initializes a new instance of the <xref href="CalcExpr.Expressions.Terminals.Number" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: 'public class Number : Terminal, ILogicalConvertible, IExpression, IPrefixOperable, IPostfixOperable, IBinaryOperable'
    content.vb: Public Class Number Inherits Terminal Implements ILogicalConvertible, IExpression, IPrefixOperable, IPostfixOperable, IBinaryOperable
  inheritance:
  - System.Object
  - CalcExpr.Expressions.Terminals.Terminal
  implements:
  - CalcExpr.Expressions.Interfaces.ILogicalConvertible
  - CalcExpr.Expressions.IExpression
  - CalcExpr.Expressions.Interfaces.IPrefixOperable
  - CalcExpr.Expressions.Interfaces.IPostfixOperable
  - CalcExpr.Expressions.Interfaces.IBinaryOperable
  inheritedMembers:
  - CalcExpr.Expressions.Terminals.Terminal.Evaluate
  - CalcExpr.Expressions.Terminals.Terminal.Evaluate(CalcExpr.Context.ExpressionContext)
  - CalcExpr.Expressions.Terminals.Terminal.StepEvaluate
  - CalcExpr.Expressions.Terminals.Terminal.StepEvaluate(CalcExpr.Context.ExpressionContext)
  - CalcExpr.Expressions.Terminals.Terminal.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: CalcExpr.Expressions.Terminals.Number.#ctor(System.Double)
  commentId: M:CalcExpr.Expressions.Terminals.Number.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: Number(double)
  nameWithType: Number.Number(double)
  fullName: CalcExpr.Expressions.Terminals.Number.Number(double)
  type: Constructor
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: .ctor
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 10
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  summary: Initializes a new instance of the <xref href="CalcExpr.Expressions.Terminals.Number" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public Number(double value)
    parameters:
    - id: value
      type: System.Double
      description: The numeric value.
    content.vb: Public Sub New(value As Double)
  overload: CalcExpr.Expressions.Terminals.Number.#ctor*
  nameWithType.vb: Number.New(Double)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.New(Double)
  name.vb: New(Double)
- uid: CalcExpr.Expressions.Terminals.Number.ZERO
  commentId: F:CalcExpr.Expressions.Terminals.Number.ZERO
  id: ZERO
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: ZERO
  nameWithType: Number.ZERO
  fullName: CalcExpr.Expressions.Terminals.Number.ZERO
  type: Field
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: ZERO
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 12
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public static readonly Number ZERO
    return:
      type: CalcExpr.Expressions.Terminals.Number
    content.vb: Public Shared ReadOnly ZERO As Number
- uid: CalcExpr.Expressions.Terminals.Number.ONE
  commentId: F:CalcExpr.Expressions.Terminals.Number.ONE
  id: ONE
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: ONE
  nameWithType: Number.ONE
  fullName: CalcExpr.Expressions.Terminals.Number.ONE
  type: Field
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: ONE
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 13
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public static readonly Number ONE
    return:
      type: CalcExpr.Expressions.Terminals.Number
    content.vb: Public Shared ReadOnly ONE As Number
- uid: CalcExpr.Expressions.Terminals.Number.Value
  commentId: P:CalcExpr.Expressions.Terminals.Number.Value
  id: Value
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Number.Value
  fullName: CalcExpr.Expressions.Terminals.Number.Value
  type: Property
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Value
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 15
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public double Value { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Value As Double
  overload: CalcExpr.Expressions.Terminals.Number.Value*
- uid: CalcExpr.Expressions.Terminals.Number.IsInteger
  commentId: P:CalcExpr.Expressions.Terminals.Number.IsInteger
  id: IsInteger
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: IsInteger
  nameWithType: Number.IsInteger
  fullName: CalcExpr.Expressions.Terminals.Number.IsInteger
  type: Property
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: IsInteger
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 17
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public bool IsInteger { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsInteger As Boolean
  overload: CalcExpr.Expressions.Terminals.Number.IsInteger*
- uid: CalcExpr.Expressions.Terminals.Number.IsEven
  commentId: P:CalcExpr.Expressions.Terminals.Number.IsEven
  id: IsEven
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: IsEven
  nameWithType: Number.IsEven
  fullName: CalcExpr.Expressions.Terminals.Number.IsEven
  type: Property
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: IsEven
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 19
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public bool IsEven { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsEven As Boolean
  overload: CalcExpr.Expressions.Terminals.Number.IsEven*
- uid: CalcExpr.Expressions.Terminals.Number.IsOdd
  commentId: P:CalcExpr.Expressions.Terminals.Number.IsOdd
  id: IsOdd
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: IsOdd
  nameWithType: Number.IsOdd
  fullName: CalcExpr.Expressions.Terminals.Number.IsOdd
  type: Property
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: IsOdd
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 21
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public bool IsOdd { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsOdd As Boolean
  overload: CalcExpr.Expressions.Terminals.Number.IsOdd*
- uid: CalcExpr.Expressions.Terminals.Number.IsPositive
  commentId: P:CalcExpr.Expressions.Terminals.Number.IsPositive
  id: IsPositive
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: IsPositive
  nameWithType: Number.IsPositive
  fullName: CalcExpr.Expressions.Terminals.Number.IsPositive
  type: Property
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: IsPositive
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 23
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public bool IsPositive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsPositive As Boolean
  overload: CalcExpr.Expressions.Terminals.Number.IsPositive*
- uid: CalcExpr.Expressions.Terminals.Number.IsNegative
  commentId: P:CalcExpr.Expressions.Terminals.Number.IsNegative
  id: IsNegative
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: IsNegative
  nameWithType: Number.IsNegative
  fullName: CalcExpr.Expressions.Terminals.Number.IsNegative
  type: Property
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: IsNegative
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 25
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public bool IsNegative { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsNegative As Boolean
  overload: CalcExpr.Expressions.Terminals.Number.IsNegative*
- uid: CalcExpr.Expressions.Terminals.Number.ToLogical
  commentId: M:CalcExpr.Expressions.Terminals.Number.ToLogical
  id: ToLogical
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: ToLogical()
  nameWithType: Number.ToLogical()
  fullName: CalcExpr.Expressions.Terminals.Number.ToLogical()
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: ToLogical
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 27
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  example: []
  syntax:
    content: public Logical ToLogical()
    return:
      type: CalcExpr.Expressions.Terminals.Logical
    content.vb: Public Function ToLogical() As Logical
  overload: CalcExpr.Expressions.Terminals.Number.ToLogical*
  implements:
  - CalcExpr.Expressions.Interfaces.ILogicalConvertible.ToLogical
- uid: CalcExpr.Expressions.Terminals.Number.PrefixOperate(System.String,CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Terminals.Number.PrefixOperate(System.String,CalcExpr.Context.ExpressionContext)
  id: PrefixOperate(System.String,CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: PrefixOperate(string, ExpressionContext)
  nameWithType: Number.PrefixOperate(string, ExpressionContext)
  fullName: CalcExpr.Expressions.Terminals.Number.PrefixOperate(string, CalcExpr.Context.ExpressionContext)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: PrefixOperate
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 34
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  example: []
  syntax:
    content: public Terminal PrefixOperate(string identifier, ExpressionContext _)
    parameters:
    - id: identifier
      type: System.String
    - id: _
      type: CalcExpr.Context.ExpressionContext
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
    content.vb: Public Function PrefixOperate(identifier As String, _ As ExpressionContext) As Terminal
  overload: CalcExpr.Expressions.Terminals.Number.PrefixOperate*
  implements:
  - CalcExpr.Expressions.Interfaces.IPrefixOperable.PrefixOperate(System.String,CalcExpr.Context.ExpressionContext)
  nameWithType.vb: Number.PrefixOperate(String, ExpressionContext)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.PrefixOperate(String, CalcExpr.Context.ExpressionContext)
  name.vb: PrefixOperate(String, ExpressionContext)
- uid: CalcExpr.Expressions.Terminals.Number.PostfixOperate(System.String,CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Terminals.Number.PostfixOperate(System.String,CalcExpr.Context.ExpressionContext)
  id: PostfixOperate(System.String,CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: PostfixOperate(string, ExpressionContext)
  nameWithType: Number.PostfixOperate(string, ExpressionContext)
  fullName: CalcExpr.Expressions.Terminals.Number.PostfixOperate(string, CalcExpr.Context.ExpressionContext)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: PostfixOperate
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 48
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  example: []
  syntax:
    content: public Terminal PostfixOperate(string identifier, ExpressionContext _)
    parameters:
    - id: identifier
      type: System.String
    - id: _
      type: CalcExpr.Context.ExpressionContext
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
    content.vb: Public Function PostfixOperate(identifier As String, _ As ExpressionContext) As Terminal
  overload: CalcExpr.Expressions.Terminals.Number.PostfixOperate*
  implements:
  - CalcExpr.Expressions.Interfaces.IPostfixOperable.PostfixOperate(System.String,CalcExpr.Context.ExpressionContext)
  nameWithType.vb: Number.PostfixOperate(String, ExpressionContext)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.PostfixOperate(String, CalcExpr.Context.ExpressionContext)
  name.vb: PostfixOperate(String, ExpressionContext)
- uid: CalcExpr.Expressions.Terminals.Number.BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Terminals.Number.BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  id: BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: BinaryLeftOperate(string, IExpression, ExpressionContext)
  nameWithType: Number.BinaryLeftOperate(string, IExpression, ExpressionContext)
  fullName: CalcExpr.Expressions.Terminals.Number.BinaryLeftOperate(string, CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: BinaryLeftOperate
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 61
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  example: []
  syntax:
    content: public Terminal? BinaryLeftOperate(string identifier, IExpression right, ExpressionContext context)
    parameters:
    - id: identifier
      type: System.String
    - id: right
      type: CalcExpr.Expressions.IExpression
    - id: context
      type: CalcExpr.Context.ExpressionContext
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
    content.vb: Public Function BinaryLeftOperate(identifier As String, right As IExpression, context As ExpressionContext) As Terminal
  overload: CalcExpr.Expressions.Terminals.Number.BinaryLeftOperate*
  implements:
  - CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  nameWithType.vb: Number.BinaryLeftOperate(String, IExpression, ExpressionContext)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.BinaryLeftOperate(String, CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  name.vb: BinaryLeftOperate(String, IExpression, ExpressionContext)
- uid: CalcExpr.Expressions.Terminals.Number.BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Terminals.Number.BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  id: BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: BinaryRightOperate(string, IExpression, ExpressionContext)
  nameWithType: Number.BinaryRightOperate(string, IExpression, ExpressionContext)
  fullName: CalcExpr.Expressions.Terminals.Number.BinaryRightOperate(string, CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: BinaryRightOperate
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 91
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  example: []
  syntax:
    content: public Terminal? BinaryRightOperate(string _, IExpression __, ExpressionContext ___)
    parameters:
    - id: _
      type: System.String
    - id: __
      type: CalcExpr.Expressions.IExpression
    - id: ___
      type: CalcExpr.Context.ExpressionContext
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
    content.vb: Public Function BinaryRightOperate(_ As String, __ As IExpression, ___ As ExpressionContext) As Terminal
  overload: CalcExpr.Expressions.Terminals.Number.BinaryRightOperate*
  implements:
  - CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  nameWithType.vb: Number.BinaryRightOperate(String, IExpression, ExpressionContext)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.BinaryRightOperate(String, CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  name.vb: BinaryRightOperate(String, IExpression, ExpressionContext)
- uid: CalcExpr.Expressions.Terminals.Number.Equals(System.Object)
  commentId: M:CalcExpr.Expressions.Terminals.Number.Equals(System.Object)
  id: Equals(System.Object)
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: Number.Equals(object?)
  fullName: CalcExpr.Expressions.Terminals.Number.Equals(object?)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Equals
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 96
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: CalcExpr.Expressions.Terminals.Number.Equals*
  nameWithType.vb: Number.Equals(Object)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.Equals(Object)
  name.vb: Equals(Object)
- uid: CalcExpr.Expressions.Terminals.Number.GetHashCode
  commentId: M:CalcExpr.Expressions.Terminals.Number.GetHashCode
  id: GetHashCode
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Number.GetHashCode()
  fullName: CalcExpr.Expressions.Terminals.Number.GetHashCode()
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: GetHashCode
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 99
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: CalcExpr.Expressions.Terminals.Number.GetHashCode*
- uid: CalcExpr.Expressions.Terminals.Number.ToString(System.String)
  commentId: M:CalcExpr.Expressions.Terminals.Number.ToString(System.String)
  id: ToString(System.String)
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: ToString(string?)
  nameWithType: Number.ToString(string?)
  fullName: CalcExpr.Expressions.Terminals.Number.ToString(string?)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: ToString
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 102
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  summary: >-
    Returns a <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref> using the specified 

    format <xref href="System.String" data-throw-if-not-resolved="false"></xref> for number formats.
  example: []
  syntax:
    content: public override string ToString(string? format)
    parameters:
    - id: format
      type: System.String
      description: ''
    return:
      type: System.String
      description: >-
        A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref> using the specified format 

        <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function ToString(format As String) As String
  overridden: CalcExpr.Expressions.Terminals.Terminal.ToString(System.String)
  overload: CalcExpr.Expressions.Terminals.Number.ToString*
  implements:
  - CalcExpr.Expressions.IExpression.ToString(System.String)
  nameWithType.vb: Number.ToString(String)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.ToString(String)
  name.vb: ToString(String)
- uid: CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Decimal
  commentId: M:CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Decimal
  id: op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Decimal
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: explicit operator decimal(Number)
  nameWithType: Number.explicit operator decimal(Number)
  fullName: CalcExpr.Expressions.Terminals.Number.explicit operator decimal(CalcExpr.Expressions.Terminals.Number)
  type: Operator
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: op_Explicit
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 105
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public static explicit operator decimal(Number n)
    parameters:
    - id: n
      type: CalcExpr.Expressions.Terminals.Number
    return:
      type: System.Decimal
    content.vb: Public Shared Narrowing Operator CType(n As Number) As Decimal
  overload: CalcExpr.Expressions.Terminals.Number.op_Explicit*
  nameWithType.vb: Number.CType(Number)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.CType(CalcExpr.Expressions.Terminals.Number)
  name.vb: CType(Number)
- uid: CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Double
  commentId: M:CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Double
  id: op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Double
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: explicit operator double(Number)
  nameWithType: Number.explicit operator double(Number)
  fullName: CalcExpr.Expressions.Terminals.Number.explicit operator double(CalcExpr.Expressions.Terminals.Number)
  type: Operator
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: op_Explicit
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 108
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public static explicit operator double(Number n)
    parameters:
    - id: n
      type: CalcExpr.Expressions.Terminals.Number
    return:
      type: System.Double
    content.vb: Public Shared Narrowing Operator CType(n As Number) As Double
  overload: CalcExpr.Expressions.Terminals.Number.op_Explicit*
  nameWithType.vb: Number.CType(Number)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.CType(CalcExpr.Expressions.Terminals.Number)
  name.vb: CType(Number)
- uid: CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Single
  commentId: M:CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Single
  id: op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Single
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: explicit operator float(Number)
  nameWithType: Number.explicit operator float(Number)
  fullName: CalcExpr.Expressions.Terminals.Number.explicit operator float(CalcExpr.Expressions.Terminals.Number)
  type: Operator
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: op_Explicit
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 111
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public static explicit operator float(Number n)
    parameters:
    - id: n
      type: CalcExpr.Expressions.Terminals.Number
    return:
      type: System.Single
    content.vb: Public Shared Narrowing Operator CType(n As Number) As Single
  overload: CalcExpr.Expressions.Terminals.Number.op_Explicit*
  nameWithType.vb: Number.CType(Number)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.CType(CalcExpr.Expressions.Terminals.Number)
  name.vb: CType(Number)
- uid: CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Int64
  commentId: M:CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Int64
  id: op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Int64
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: explicit operator long(Number)
  nameWithType: Number.explicit operator long(Number)
  fullName: CalcExpr.Expressions.Terminals.Number.explicit operator long(CalcExpr.Expressions.Terminals.Number)
  type: Operator
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: op_Explicit
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 114
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public static explicit operator long(Number n)
    parameters:
    - id: n
      type: CalcExpr.Expressions.Terminals.Number
    return:
      type: System.Int64
    content.vb: Public Shared Narrowing Operator CType(n As Number) As Long
  overload: CalcExpr.Expressions.Terminals.Number.op_Explicit*
  nameWithType.vb: Number.CType(Number)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.CType(CalcExpr.Expressions.Terminals.Number)
  name.vb: CType(Number)
- uid: CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Int32
  commentId: M:CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Int32
  id: op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Int32
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: explicit operator int(Number)
  nameWithType: Number.explicit operator int(Number)
  fullName: CalcExpr.Expressions.Terminals.Number.explicit operator int(CalcExpr.Expressions.Terminals.Number)
  type: Operator
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: op_Explicit
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 117
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public static explicit operator int(Number n)
    parameters:
    - id: n
      type: CalcExpr.Expressions.Terminals.Number
    return:
      type: System.Int32
    content.vb: Public Shared Narrowing Operator CType(n As Number) As Integer
  overload: CalcExpr.Expressions.Terminals.Number.op_Explicit*
  nameWithType.vb: Number.CType(Number)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.CType(CalcExpr.Expressions.Terminals.Number)
  name.vb: CType(Number)
- uid: CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Int16
  commentId: M:CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Int16
  id: op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Int16
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: explicit operator short(Number)
  nameWithType: Number.explicit operator short(Number)
  fullName: CalcExpr.Expressions.Terminals.Number.explicit operator short(CalcExpr.Expressions.Terminals.Number)
  type: Operator
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: op_Explicit
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 120
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public static explicit operator short(Number n)
    parameters:
    - id: n
      type: CalcExpr.Expressions.Terminals.Number
    return:
      type: System.Int16
    content.vb: Public Shared Narrowing Operator CType(n As Number) As Short
  overload: CalcExpr.Expressions.Terminals.Number.op_Explicit*
  nameWithType.vb: Number.CType(Number)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.CType(CalcExpr.Expressions.Terminals.Number)
  name.vb: CType(Number)
- uid: CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.SByte
  commentId: M:CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.SByte
  id: op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.SByte
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: explicit operator sbyte(Number)
  nameWithType: Number.explicit operator sbyte(Number)
  fullName: CalcExpr.Expressions.Terminals.Number.explicit operator sbyte(CalcExpr.Expressions.Terminals.Number)
  type: Operator
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: op_Explicit
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 123
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public static explicit operator sbyte(Number n)
    parameters:
    - id: n
      type: CalcExpr.Expressions.Terminals.Number
    return:
      type: System.SByte
    content.vb: Public Shared Narrowing Operator CType(n As Number) As SByte
  overload: CalcExpr.Expressions.Terminals.Number.op_Explicit*
  nameWithType.vb: Number.CType(Number)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.CType(CalcExpr.Expressions.Terminals.Number)
  name.vb: CType(Number)
- uid: CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.UInt64
  commentId: M:CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.UInt64
  id: op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.UInt64
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: explicit operator ulong(Number)
  nameWithType: Number.explicit operator ulong(Number)
  fullName: CalcExpr.Expressions.Terminals.Number.explicit operator ulong(CalcExpr.Expressions.Terminals.Number)
  type: Operator
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: op_Explicit
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 126
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public static explicit operator ulong(Number n)
    parameters:
    - id: n
      type: CalcExpr.Expressions.Terminals.Number
    return:
      type: System.UInt64
    content.vb: Public Shared Narrowing Operator CType(n As Number) As ULong
  overload: CalcExpr.Expressions.Terminals.Number.op_Explicit*
  nameWithType.vb: Number.CType(Number)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.CType(CalcExpr.Expressions.Terminals.Number)
  name.vb: CType(Number)
- uid: CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.UInt32
  commentId: M:CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.UInt32
  id: op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.UInt32
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: explicit operator uint(Number)
  nameWithType: Number.explicit operator uint(Number)
  fullName: CalcExpr.Expressions.Terminals.Number.explicit operator uint(CalcExpr.Expressions.Terminals.Number)
  type: Operator
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: op_Explicit
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 129
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public static explicit operator uint(Number n)
    parameters:
    - id: n
      type: CalcExpr.Expressions.Terminals.Number
    return:
      type: System.UInt32
    content.vb: Public Shared Narrowing Operator CType(n As Number) As UInteger
  overload: CalcExpr.Expressions.Terminals.Number.op_Explicit*
  nameWithType.vb: Number.CType(Number)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.CType(CalcExpr.Expressions.Terminals.Number)
  name.vb: CType(Number)
- uid: CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.UInt16
  commentId: M:CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.UInt16
  id: op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.UInt16
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: explicit operator ushort(Number)
  nameWithType: Number.explicit operator ushort(Number)
  fullName: CalcExpr.Expressions.Terminals.Number.explicit operator ushort(CalcExpr.Expressions.Terminals.Number)
  type: Operator
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: op_Explicit
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 132
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public static explicit operator ushort(Number n)
    parameters:
    - id: n
      type: CalcExpr.Expressions.Terminals.Number
    return:
      type: System.UInt16
    content.vb: Public Shared Narrowing Operator CType(n As Number) As UShort
  overload: CalcExpr.Expressions.Terminals.Number.op_Explicit*
  nameWithType.vb: Number.CType(Number)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.CType(CalcExpr.Expressions.Terminals.Number)
  name.vb: CType(Number)
- uid: CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Byte
  commentId: M:CalcExpr.Expressions.Terminals.Number.op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Byte
  id: op_Explicit(CalcExpr.Expressions.Terminals.Number)~System.Byte
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: explicit operator byte(Number)
  nameWithType: Number.explicit operator byte(Number)
  fullName: CalcExpr.Expressions.Terminals.Number.explicit operator byte(CalcExpr.Expressions.Terminals.Number)
  type: Operator
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: op_Explicit
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 135
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public static explicit operator byte(Number n)
    parameters:
    - id: n
      type: CalcExpr.Expressions.Terminals.Number
    return:
      type: System.Byte
    content.vb: Public Shared Narrowing Operator CType(n As Number) As Byte
  overload: CalcExpr.Expressions.Terminals.Number.op_Explicit*
  nameWithType.vb: Number.CType(Number)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.CType(CalcExpr.Expressions.Terminals.Number)
  name.vb: CType(Number)
- uid: CalcExpr.Expressions.Terminals.Number.op_Explicit(System.Decimal)~CalcExpr.Expressions.Terminals.Number
  commentId: M:CalcExpr.Expressions.Terminals.Number.op_Explicit(System.Decimal)~CalcExpr.Expressions.Terminals.Number
  id: op_Explicit(System.Decimal)~CalcExpr.Expressions.Terminals.Number
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: explicit operator Number(decimal)
  nameWithType: Number.explicit operator Number(decimal)
  fullName: CalcExpr.Expressions.Terminals.Number.explicit operator CalcExpr.Expressions.Terminals.Number(decimal)
  type: Operator
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: op_Explicit
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 138
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public static explicit operator Number(decimal n)
    parameters:
    - id: n
      type: System.Decimal
    return:
      type: CalcExpr.Expressions.Terminals.Number
    content.vb: Public Shared Narrowing Operator CType(n As Decimal) As Number
  overload: CalcExpr.Expressions.Terminals.Number.op_Explicit*
  nameWithType.vb: Number.CType(Decimal)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.CType(Decimal)
  name.vb: CType(Decimal)
- uid: CalcExpr.Expressions.Terminals.Number.op_Explicit(System.Double)~CalcExpr.Expressions.Terminals.Number
  commentId: M:CalcExpr.Expressions.Terminals.Number.op_Explicit(System.Double)~CalcExpr.Expressions.Terminals.Number
  id: op_Explicit(System.Double)~CalcExpr.Expressions.Terminals.Number
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: explicit operator Number(double)
  nameWithType: Number.explicit operator Number(double)
  fullName: CalcExpr.Expressions.Terminals.Number.explicit operator CalcExpr.Expressions.Terminals.Number(double)
  type: Operator
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: op_Explicit
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 141
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public static explicit operator Number(double n)
    parameters:
    - id: n
      type: System.Double
    return:
      type: CalcExpr.Expressions.Terminals.Number
    content.vb: Public Shared Narrowing Operator CType(n As Double) As Number
  overload: CalcExpr.Expressions.Terminals.Number.op_Explicit*
  nameWithType.vb: Number.CType(Double)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.CType(Double)
  name.vb: CType(Double)
- uid: CalcExpr.Expressions.Terminals.Number.op_Explicit(System.Single)~CalcExpr.Expressions.Terminals.Number
  commentId: M:CalcExpr.Expressions.Terminals.Number.op_Explicit(System.Single)~CalcExpr.Expressions.Terminals.Number
  id: op_Explicit(System.Single)~CalcExpr.Expressions.Terminals.Number
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: explicit operator Number(float)
  nameWithType: Number.explicit operator Number(float)
  fullName: CalcExpr.Expressions.Terminals.Number.explicit operator CalcExpr.Expressions.Terminals.Number(float)
  type: Operator
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: op_Explicit
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 144
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public static explicit operator Number(float n)
    parameters:
    - id: n
      type: System.Single
    return:
      type: CalcExpr.Expressions.Terminals.Number
    content.vb: Public Shared Narrowing Operator CType(n As Single) As Number
  overload: CalcExpr.Expressions.Terminals.Number.op_Explicit*
  nameWithType.vb: Number.CType(Single)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.CType(Single)
  name.vb: CType(Single)
- uid: CalcExpr.Expressions.Terminals.Number.op_Explicit(System.Int64)~CalcExpr.Expressions.Terminals.Number
  commentId: M:CalcExpr.Expressions.Terminals.Number.op_Explicit(System.Int64)~CalcExpr.Expressions.Terminals.Number
  id: op_Explicit(System.Int64)~CalcExpr.Expressions.Terminals.Number
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: explicit operator Number(long)
  nameWithType: Number.explicit operator Number(long)
  fullName: CalcExpr.Expressions.Terminals.Number.explicit operator CalcExpr.Expressions.Terminals.Number(long)
  type: Operator
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: op_Explicit
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 147
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public static explicit operator Number(long n)
    parameters:
    - id: n
      type: System.Int64
    return:
      type: CalcExpr.Expressions.Terminals.Number
    content.vb: Public Shared Narrowing Operator CType(n As Long) As Number
  overload: CalcExpr.Expressions.Terminals.Number.op_Explicit*
  nameWithType.vb: Number.CType(Long)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.CType(Long)
  name.vb: CType(Long)
- uid: CalcExpr.Expressions.Terminals.Number.op_Explicit(System.Int32)~CalcExpr.Expressions.Terminals.Number
  commentId: M:CalcExpr.Expressions.Terminals.Number.op_Explicit(System.Int32)~CalcExpr.Expressions.Terminals.Number
  id: op_Explicit(System.Int32)~CalcExpr.Expressions.Terminals.Number
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: explicit operator Number(int)
  nameWithType: Number.explicit operator Number(int)
  fullName: CalcExpr.Expressions.Terminals.Number.explicit operator CalcExpr.Expressions.Terminals.Number(int)
  type: Operator
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: op_Explicit
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 150
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public static explicit operator Number(int n)
    parameters:
    - id: n
      type: System.Int32
    return:
      type: CalcExpr.Expressions.Terminals.Number
    content.vb: Public Shared Narrowing Operator CType(n As Integer) As Number
  overload: CalcExpr.Expressions.Terminals.Number.op_Explicit*
  nameWithType.vb: Number.CType(Integer)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.CType(Integer)
  name.vb: CType(Integer)
- uid: CalcExpr.Expressions.Terminals.Number.op_Explicit(System.Int16)~CalcExpr.Expressions.Terminals.Number
  commentId: M:CalcExpr.Expressions.Terminals.Number.op_Explicit(System.Int16)~CalcExpr.Expressions.Terminals.Number
  id: op_Explicit(System.Int16)~CalcExpr.Expressions.Terminals.Number
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: explicit operator Number(short)
  nameWithType: Number.explicit operator Number(short)
  fullName: CalcExpr.Expressions.Terminals.Number.explicit operator CalcExpr.Expressions.Terminals.Number(short)
  type: Operator
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: op_Explicit
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 153
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public static explicit operator Number(short n)
    parameters:
    - id: n
      type: System.Int16
    return:
      type: CalcExpr.Expressions.Terminals.Number
    content.vb: Public Shared Narrowing Operator CType(n As Short) As Number
  overload: CalcExpr.Expressions.Terminals.Number.op_Explicit*
  nameWithType.vb: Number.CType(Short)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.CType(Short)
  name.vb: CType(Short)
- uid: CalcExpr.Expressions.Terminals.Number.op_Explicit(System.SByte)~CalcExpr.Expressions.Terminals.Number
  commentId: M:CalcExpr.Expressions.Terminals.Number.op_Explicit(System.SByte)~CalcExpr.Expressions.Terminals.Number
  id: op_Explicit(System.SByte)~CalcExpr.Expressions.Terminals.Number
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: explicit operator Number(sbyte)
  nameWithType: Number.explicit operator Number(sbyte)
  fullName: CalcExpr.Expressions.Terminals.Number.explicit operator CalcExpr.Expressions.Terminals.Number(sbyte)
  type: Operator
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: op_Explicit
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 156
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public static explicit operator Number(sbyte n)
    parameters:
    - id: n
      type: System.SByte
    return:
      type: CalcExpr.Expressions.Terminals.Number
    content.vb: Public Shared Narrowing Operator CType(n As SByte) As Number
  overload: CalcExpr.Expressions.Terminals.Number.op_Explicit*
  nameWithType.vb: Number.CType(SByte)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.CType(SByte)
  name.vb: CType(SByte)
- uid: CalcExpr.Expressions.Terminals.Number.op_Explicit(System.UInt64)~CalcExpr.Expressions.Terminals.Number
  commentId: M:CalcExpr.Expressions.Terminals.Number.op_Explicit(System.UInt64)~CalcExpr.Expressions.Terminals.Number
  id: op_Explicit(System.UInt64)~CalcExpr.Expressions.Terminals.Number
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: explicit operator Number(ulong)
  nameWithType: Number.explicit operator Number(ulong)
  fullName: CalcExpr.Expressions.Terminals.Number.explicit operator CalcExpr.Expressions.Terminals.Number(ulong)
  type: Operator
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: op_Explicit
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 159
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public static explicit operator Number(ulong n)
    parameters:
    - id: n
      type: System.UInt64
    return:
      type: CalcExpr.Expressions.Terminals.Number
    content.vb: Public Shared Narrowing Operator CType(n As ULong) As Number
  overload: CalcExpr.Expressions.Terminals.Number.op_Explicit*
  nameWithType.vb: Number.CType(ULong)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.CType(ULong)
  name.vb: CType(ULong)
- uid: CalcExpr.Expressions.Terminals.Number.op_Explicit(System.UInt32)~CalcExpr.Expressions.Terminals.Number
  commentId: M:CalcExpr.Expressions.Terminals.Number.op_Explicit(System.UInt32)~CalcExpr.Expressions.Terminals.Number
  id: op_Explicit(System.UInt32)~CalcExpr.Expressions.Terminals.Number
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: explicit operator Number(uint)
  nameWithType: Number.explicit operator Number(uint)
  fullName: CalcExpr.Expressions.Terminals.Number.explicit operator CalcExpr.Expressions.Terminals.Number(uint)
  type: Operator
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: op_Explicit
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 162
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public static explicit operator Number(uint n)
    parameters:
    - id: n
      type: System.UInt32
    return:
      type: CalcExpr.Expressions.Terminals.Number
    content.vb: Public Shared Narrowing Operator CType(n As UInteger) As Number
  overload: CalcExpr.Expressions.Terminals.Number.op_Explicit*
  nameWithType.vb: Number.CType(UInteger)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.CType(UInteger)
  name.vb: CType(UInteger)
- uid: CalcExpr.Expressions.Terminals.Number.op_Explicit(System.UInt16)~CalcExpr.Expressions.Terminals.Number
  commentId: M:CalcExpr.Expressions.Terminals.Number.op_Explicit(System.UInt16)~CalcExpr.Expressions.Terminals.Number
  id: op_Explicit(System.UInt16)~CalcExpr.Expressions.Terminals.Number
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: explicit operator Number(ushort)
  nameWithType: Number.explicit operator Number(ushort)
  fullName: CalcExpr.Expressions.Terminals.Number.explicit operator CalcExpr.Expressions.Terminals.Number(ushort)
  type: Operator
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: op_Explicit
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 165
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public static explicit operator Number(ushort n)
    parameters:
    - id: n
      type: System.UInt16
    return:
      type: CalcExpr.Expressions.Terminals.Number
    content.vb: Public Shared Narrowing Operator CType(n As UShort) As Number
  overload: CalcExpr.Expressions.Terminals.Number.op_Explicit*
  nameWithType.vb: Number.CType(UShort)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.CType(UShort)
  name.vb: CType(UShort)
- uid: CalcExpr.Expressions.Terminals.Number.op_Explicit(System.Byte)~CalcExpr.Expressions.Terminals.Number
  commentId: M:CalcExpr.Expressions.Terminals.Number.op_Explicit(System.Byte)~CalcExpr.Expressions.Terminals.Number
  id: op_Explicit(System.Byte)~CalcExpr.Expressions.Terminals.Number
  parent: CalcExpr.Expressions.Terminals.Number
  langs:
  - csharp
  - vb
  name: explicit operator Number(byte)
  nameWithType: Number.explicit operator Number(byte)
  fullName: CalcExpr.Expressions.Terminals.Number.explicit operator CalcExpr.Expressions.Terminals.Number(byte)
  type: Operator
  source:
    remote:
      path: src/CalcExpr/Expressions/Terminals/Number.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: op_Explicit
    path: ../src/CalcExpr/Expressions/Terminals/Number.cs
    startLine: 168
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Terminals
  syntax:
    content: public static explicit operator Number(byte n)
    parameters:
    - id: n
      type: System.Byte
    return:
      type: CalcExpr.Expressions.Terminals.Number
    content.vb: Public Shared Narrowing Operator CType(n As Byte) As Number
  overload: CalcExpr.Expressions.Terminals.Number.op_Explicit*
  nameWithType.vb: Number.CType(Byte)
  fullName.vb: CalcExpr.Expressions.Terminals.Number.CType(Byte)
  name.vb: CType(Byte)
references:
- uid: CalcExpr.Expressions.Terminals.Number
  commentId: T:CalcExpr.Expressions.Terminals.Number
  parent: CalcExpr.Expressions.Terminals
  href: CalcExpr.Expressions.Terminals.Number.html
  name: Number
  nameWithType: Number
  fullName: CalcExpr.Expressions.Terminals.Number
- uid: CalcExpr.Expressions.Terminals
  commentId: N:CalcExpr.Expressions.Terminals
  href: CalcExpr.html
  name: CalcExpr.Expressions.Terminals
  nameWithType: CalcExpr.Expressions.Terminals
  fullName: CalcExpr.Expressions.Terminals
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Terminals
    name: Terminals
    href: CalcExpr.Expressions.Terminals.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Terminals
    name: Terminals
    href: CalcExpr.Expressions.Terminals.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: CalcExpr.Expressions.Terminals.Terminal
  commentId: T:CalcExpr.Expressions.Terminals.Terminal
  parent: CalcExpr.Expressions.Terminals
  href: CalcExpr.Expressions.Terminals.Terminal.html
  name: Terminal
  nameWithType: Terminal
  fullName: CalcExpr.Expressions.Terminals.Terminal
- uid: CalcExpr.Expressions.Interfaces.ILogicalConvertible
  commentId: T:CalcExpr.Expressions.Interfaces.ILogicalConvertible
  parent: CalcExpr.Expressions.Interfaces
  href: CalcExpr.Expressions.Interfaces.ILogicalConvertible.html
  name: ILogicalConvertible
  nameWithType: ILogicalConvertible
  fullName: CalcExpr.Expressions.Interfaces.ILogicalConvertible
- uid: CalcExpr.Expressions.IExpression
  commentId: T:CalcExpr.Expressions.IExpression
  parent: CalcExpr.Expressions
  href: CalcExpr.Expressions.IExpression.html
  name: IExpression
  nameWithType: IExpression
  fullName: CalcExpr.Expressions.IExpression
- uid: CalcExpr.Expressions.Interfaces.IPrefixOperable
  commentId: T:CalcExpr.Expressions.Interfaces.IPrefixOperable
  parent: CalcExpr.Expressions.Interfaces
  href: CalcExpr.Expressions.Interfaces.IPrefixOperable.html
  name: IPrefixOperable
  nameWithType: IPrefixOperable
  fullName: CalcExpr.Expressions.Interfaces.IPrefixOperable
- uid: CalcExpr.Expressions.Interfaces.IPostfixOperable
  commentId: T:CalcExpr.Expressions.Interfaces.IPostfixOperable
  parent: CalcExpr.Expressions.Interfaces
  href: CalcExpr.Expressions.Interfaces.IPostfixOperable.html
  name: IPostfixOperable
  nameWithType: IPostfixOperable
  fullName: CalcExpr.Expressions.Interfaces.IPostfixOperable
- uid: CalcExpr.Expressions.Interfaces.IBinaryOperable
  commentId: T:CalcExpr.Expressions.Interfaces.IBinaryOperable
  parent: CalcExpr.Expressions.Interfaces
  href: CalcExpr.Expressions.Interfaces.IBinaryOperable.html
  name: IBinaryOperable
  nameWithType: IBinaryOperable
  fullName: CalcExpr.Expressions.Interfaces.IBinaryOperable
- uid: CalcExpr.Expressions.Terminals.Terminal.Evaluate
  commentId: M:CalcExpr.Expressions.Terminals.Terminal.Evaluate
  parent: CalcExpr.Expressions.Terminals.Terminal
  href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_Evaluate
  name: Evaluate()
  nameWithType: Terminal.Evaluate()
  fullName: CalcExpr.Expressions.Terminals.Terminal.Evaluate()
  spec.csharp:
  - uid: CalcExpr.Expressions.Terminals.Terminal.Evaluate
    name: Evaluate
    href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_Evaluate
  - name: (
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Terminals.Terminal.Evaluate
    name: Evaluate
    href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_Evaluate
  - name: (
  - name: )
- uid: CalcExpr.Expressions.Terminals.Terminal.Evaluate(CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Terminals.Terminal.Evaluate(CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Terminals.Terminal
  href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_Evaluate_CalcExpr_Context_ExpressionContext_
  name: Evaluate(ExpressionContext)
  nameWithType: Terminal.Evaluate(ExpressionContext)
  fullName: CalcExpr.Expressions.Terminals.Terminal.Evaluate(CalcExpr.Context.ExpressionContext)
  spec.csharp:
  - uid: CalcExpr.Expressions.Terminals.Terminal.Evaluate(CalcExpr.Context.ExpressionContext)
    name: Evaluate
    href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_Evaluate_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Terminals.Terminal.Evaluate(CalcExpr.Context.ExpressionContext)
    name: Evaluate
    href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_Evaluate_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
- uid: CalcExpr.Expressions.Terminals.Terminal.StepEvaluate
  commentId: M:CalcExpr.Expressions.Terminals.Terminal.StepEvaluate
  parent: CalcExpr.Expressions.Terminals.Terminal
  href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_StepEvaluate
  name: StepEvaluate()
  nameWithType: Terminal.StepEvaluate()
  fullName: CalcExpr.Expressions.Terminals.Terminal.StepEvaluate()
  spec.csharp:
  - uid: CalcExpr.Expressions.Terminals.Terminal.StepEvaluate
    name: StepEvaluate
    href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_StepEvaluate
  - name: (
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Terminals.Terminal.StepEvaluate
    name: StepEvaluate
    href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_StepEvaluate
  - name: (
  - name: )
- uid: CalcExpr.Expressions.Terminals.Terminal.StepEvaluate(CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Terminals.Terminal.StepEvaluate(CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Terminals.Terminal
  href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_StepEvaluate_CalcExpr_Context_ExpressionContext_
  name: StepEvaluate(ExpressionContext)
  nameWithType: Terminal.StepEvaluate(ExpressionContext)
  fullName: CalcExpr.Expressions.Terminals.Terminal.StepEvaluate(CalcExpr.Context.ExpressionContext)
  spec.csharp:
  - uid: CalcExpr.Expressions.Terminals.Terminal.StepEvaluate(CalcExpr.Context.ExpressionContext)
    name: StepEvaluate
    href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_StepEvaluate_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Terminals.Terminal.StepEvaluate(CalcExpr.Context.ExpressionContext)
    name: StepEvaluate
    href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_StepEvaluate_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
- uid: CalcExpr.Expressions.Terminals.Terminal.ToString
  commentId: M:CalcExpr.Expressions.Terminals.Terminal.ToString
  parent: CalcExpr.Expressions.Terminals.Terminal
  href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_ToString
  name: ToString()
  nameWithType: Terminal.ToString()
  fullName: CalcExpr.Expressions.Terminals.Terminal.ToString()
  spec.csharp:
  - uid: CalcExpr.Expressions.Terminals.Terminal.ToString
    name: ToString
    href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Terminals.Terminal.ToString
    name: ToString
    href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_ToString
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CalcExpr.Expressions.Interfaces
  commentId: N:CalcExpr.Expressions.Interfaces
  href: CalcExpr.html
  name: CalcExpr.Expressions.Interfaces
  nameWithType: CalcExpr.Expressions.Interfaces
  fullName: CalcExpr.Expressions.Interfaces
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Interfaces
    name: Interfaces
    href: CalcExpr.Expressions.Interfaces.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Interfaces
    name: Interfaces
    href: CalcExpr.Expressions.Interfaces.html
- uid: CalcExpr.Expressions
  commentId: N:CalcExpr.Expressions
  href: CalcExpr.html
  name: CalcExpr.Expressions
  nameWithType: CalcExpr.Expressions
  fullName: CalcExpr.Expressions
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
- uid: CalcExpr.Expressions.Terminals.Number.#ctor*
  commentId: Overload:CalcExpr.Expressions.Terminals.Number.#ctor
  href: CalcExpr.Expressions.Terminals.Number.html#CalcExpr_Expressions_Terminals_Number__ctor_System_Double_
  name: Number
  nameWithType: Number.Number
  fullName: CalcExpr.Expressions.Terminals.Number.Number
  nameWithType.vb: Number.New
  fullName.vb: CalcExpr.Expressions.Terminals.Number.New
  name.vb: New
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: CalcExpr.Expressions.Terminals.Number.Value*
  commentId: Overload:CalcExpr.Expressions.Terminals.Number.Value
  href: CalcExpr.Expressions.Terminals.Number.html#CalcExpr_Expressions_Terminals_Number_Value
  name: Value
  nameWithType: Number.Value
  fullName: CalcExpr.Expressions.Terminals.Number.Value
- uid: CalcExpr.Expressions.Terminals.Number.IsInteger*
  commentId: Overload:CalcExpr.Expressions.Terminals.Number.IsInteger
  href: CalcExpr.Expressions.Terminals.Number.html#CalcExpr_Expressions_Terminals_Number_IsInteger
  name: IsInteger
  nameWithType: Number.IsInteger
  fullName: CalcExpr.Expressions.Terminals.Number.IsInteger
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: CalcExpr.Expressions.Terminals.Number.IsEven*
  commentId: Overload:CalcExpr.Expressions.Terminals.Number.IsEven
  href: CalcExpr.Expressions.Terminals.Number.html#CalcExpr_Expressions_Terminals_Number_IsEven
  name: IsEven
  nameWithType: Number.IsEven
  fullName: CalcExpr.Expressions.Terminals.Number.IsEven
- uid: CalcExpr.Expressions.Terminals.Number.IsOdd*
  commentId: Overload:CalcExpr.Expressions.Terminals.Number.IsOdd
  href: CalcExpr.Expressions.Terminals.Number.html#CalcExpr_Expressions_Terminals_Number_IsOdd
  name: IsOdd
  nameWithType: Number.IsOdd
  fullName: CalcExpr.Expressions.Terminals.Number.IsOdd
- uid: CalcExpr.Expressions.Terminals.Number.IsPositive*
  commentId: Overload:CalcExpr.Expressions.Terminals.Number.IsPositive
  href: CalcExpr.Expressions.Terminals.Number.html#CalcExpr_Expressions_Terminals_Number_IsPositive
  name: IsPositive
  nameWithType: Number.IsPositive
  fullName: CalcExpr.Expressions.Terminals.Number.IsPositive
- uid: CalcExpr.Expressions.Terminals.Number.IsNegative*
  commentId: Overload:CalcExpr.Expressions.Terminals.Number.IsNegative
  href: CalcExpr.Expressions.Terminals.Number.html#CalcExpr_Expressions_Terminals_Number_IsNegative
  name: IsNegative
  nameWithType: Number.IsNegative
  fullName: CalcExpr.Expressions.Terminals.Number.IsNegative
- uid: CalcExpr.Expressions.Terminals.Number.ToLogical*
  commentId: Overload:CalcExpr.Expressions.Terminals.Number.ToLogical
  href: CalcExpr.Expressions.Terminals.Number.html#CalcExpr_Expressions_Terminals_Number_ToLogical
  name: ToLogical
  nameWithType: Number.ToLogical
  fullName: CalcExpr.Expressions.Terminals.Number.ToLogical
- uid: CalcExpr.Expressions.Interfaces.ILogicalConvertible.ToLogical
  commentId: M:CalcExpr.Expressions.Interfaces.ILogicalConvertible.ToLogical
  parent: CalcExpr.Expressions.Interfaces.ILogicalConvertible
  href: CalcExpr.Expressions.Interfaces.ILogicalConvertible.html#CalcExpr_Expressions_Interfaces_ILogicalConvertible_ToLogical
  name: ToLogical()
  nameWithType: ILogicalConvertible.ToLogical()
  fullName: CalcExpr.Expressions.Interfaces.ILogicalConvertible.ToLogical()
  spec.csharp:
  - uid: CalcExpr.Expressions.Interfaces.ILogicalConvertible.ToLogical
    name: ToLogical
    href: CalcExpr.Expressions.Interfaces.ILogicalConvertible.html#CalcExpr_Expressions_Interfaces_ILogicalConvertible_ToLogical
  - name: (
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Interfaces.ILogicalConvertible.ToLogical
    name: ToLogical
    href: CalcExpr.Expressions.Interfaces.ILogicalConvertible.html#CalcExpr_Expressions_Interfaces_ILogicalConvertible_ToLogical
  - name: (
  - name: )
- uid: CalcExpr.Expressions.Terminals.Logical
  commentId: T:CalcExpr.Expressions.Terminals.Logical
  parent: CalcExpr.Expressions.Terminals
  href: CalcExpr.Expressions.Terminals.Logical.html
  name: Logical
  nameWithType: Logical
  fullName: CalcExpr.Expressions.Terminals.Logical
- uid: CalcExpr.Expressions.Terminals.Number.PrefixOperate*
  commentId: Overload:CalcExpr.Expressions.Terminals.Number.PrefixOperate
  href: CalcExpr.Expressions.Terminals.Number.html#CalcExpr_Expressions_Terminals_Number_PrefixOperate_System_String_CalcExpr_Context_ExpressionContext_
  name: PrefixOperate
  nameWithType: Number.PrefixOperate
  fullName: CalcExpr.Expressions.Terminals.Number.PrefixOperate
- uid: CalcExpr.Expressions.Interfaces.IPrefixOperable.PrefixOperate(System.String,CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Interfaces.IPrefixOperable.PrefixOperate(System.String,CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Interfaces.IPrefixOperable
  isExternal: true
  href: CalcExpr.Expressions.Interfaces.IPrefixOperable.html#CalcExpr_Expressions_Interfaces_IPrefixOperable_PrefixOperate_System_String_CalcExpr_Context_ExpressionContext_
  name: PrefixOperate(string, ExpressionContext)
  nameWithType: IPrefixOperable.PrefixOperate(string, ExpressionContext)
  fullName: CalcExpr.Expressions.Interfaces.IPrefixOperable.PrefixOperate(string, CalcExpr.Context.ExpressionContext)
  nameWithType.vb: IPrefixOperable.PrefixOperate(String, ExpressionContext)
  fullName.vb: CalcExpr.Expressions.Interfaces.IPrefixOperable.PrefixOperate(String, CalcExpr.Context.ExpressionContext)
  name.vb: PrefixOperate(String, ExpressionContext)
  spec.csharp:
  - uid: CalcExpr.Expressions.Interfaces.IPrefixOperable.PrefixOperate(System.String,CalcExpr.Context.ExpressionContext)
    name: PrefixOperate
    href: CalcExpr.Expressions.Interfaces.IPrefixOperable.html#CalcExpr_Expressions_Interfaces_IPrefixOperable_PrefixOperate_System_String_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Interfaces.IPrefixOperable.PrefixOperate(System.String,CalcExpr.Context.ExpressionContext)
    name: PrefixOperate
    href: CalcExpr.Expressions.Interfaces.IPrefixOperable.html#CalcExpr_Expressions_Interfaces_IPrefixOperable_PrefixOperate_System_String_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: CalcExpr.Context.ExpressionContext
  commentId: T:CalcExpr.Context.ExpressionContext
  parent: CalcExpr.Context
  href: CalcExpr.Context.ExpressionContext.html
  name: ExpressionContext
  nameWithType: ExpressionContext
  fullName: CalcExpr.Context.ExpressionContext
- uid: CalcExpr.Context
  commentId: N:CalcExpr.Context
  href: CalcExpr.html
  name: CalcExpr.Context
  nameWithType: CalcExpr.Context
  fullName: CalcExpr.Context
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Context
    name: Context
    href: CalcExpr.Context.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Context
    name: Context
    href: CalcExpr.Context.html
- uid: CalcExpr.Expressions.Terminals.Number.PostfixOperate*
  commentId: Overload:CalcExpr.Expressions.Terminals.Number.PostfixOperate
  href: CalcExpr.Expressions.Terminals.Number.html#CalcExpr_Expressions_Terminals_Number_PostfixOperate_System_String_CalcExpr_Context_ExpressionContext_
  name: PostfixOperate
  nameWithType: Number.PostfixOperate
  fullName: CalcExpr.Expressions.Terminals.Number.PostfixOperate
- uid: CalcExpr.Expressions.Interfaces.IPostfixOperable.PostfixOperate(System.String,CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Interfaces.IPostfixOperable.PostfixOperate(System.String,CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Interfaces.IPostfixOperable
  isExternal: true
  href: CalcExpr.Expressions.Interfaces.IPostfixOperable.html#CalcExpr_Expressions_Interfaces_IPostfixOperable_PostfixOperate_System_String_CalcExpr_Context_ExpressionContext_
  name: PostfixOperate(string, ExpressionContext)
  nameWithType: IPostfixOperable.PostfixOperate(string, ExpressionContext)
  fullName: CalcExpr.Expressions.Interfaces.IPostfixOperable.PostfixOperate(string, CalcExpr.Context.ExpressionContext)
  nameWithType.vb: IPostfixOperable.PostfixOperate(String, ExpressionContext)
  fullName.vb: CalcExpr.Expressions.Interfaces.IPostfixOperable.PostfixOperate(String, CalcExpr.Context.ExpressionContext)
  name.vb: PostfixOperate(String, ExpressionContext)
  spec.csharp:
  - uid: CalcExpr.Expressions.Interfaces.IPostfixOperable.PostfixOperate(System.String,CalcExpr.Context.ExpressionContext)
    name: PostfixOperate
    href: CalcExpr.Expressions.Interfaces.IPostfixOperable.html#CalcExpr_Expressions_Interfaces_IPostfixOperable_PostfixOperate_System_String_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Interfaces.IPostfixOperable.PostfixOperate(System.String,CalcExpr.Context.ExpressionContext)
    name: PostfixOperate
    href: CalcExpr.Expressions.Interfaces.IPostfixOperable.html#CalcExpr_Expressions_Interfaces_IPostfixOperable_PostfixOperate_System_String_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
- uid: CalcExpr.Expressions.Terminals.Number.BinaryLeftOperate*
  commentId: Overload:CalcExpr.Expressions.Terminals.Number.BinaryLeftOperate
  href: CalcExpr.Expressions.Terminals.Number.html#CalcExpr_Expressions_Terminals_Number_BinaryLeftOperate_System_String_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  name: BinaryLeftOperate
  nameWithType: Number.BinaryLeftOperate
  fullName: CalcExpr.Expressions.Terminals.Number.BinaryLeftOperate
- uid: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Interfaces.IBinaryOperable
  isExternal: true
  href: CalcExpr.Expressions.Interfaces.IBinaryOperable.html#CalcExpr_Expressions_Interfaces_IBinaryOperable_BinaryLeftOperate_System_String_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  name: BinaryLeftOperate(string, IExpression, ExpressionContext)
  nameWithType: IBinaryOperable.BinaryLeftOperate(string, IExpression, ExpressionContext)
  fullName: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryLeftOperate(string, CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  nameWithType.vb: IBinaryOperable.BinaryLeftOperate(String, IExpression, ExpressionContext)
  fullName.vb: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryLeftOperate(String, CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  name.vb: BinaryLeftOperate(String, IExpression, ExpressionContext)
  spec.csharp:
  - uid: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
    name: BinaryLeftOperate
    href: CalcExpr.Expressions.Interfaces.IBinaryOperable.html#CalcExpr_Expressions_Interfaces_IBinaryOperable_BinaryLeftOperate_System_String_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
    name: BinaryLeftOperate
    href: CalcExpr.Expressions.Interfaces.IBinaryOperable.html#CalcExpr_Expressions_Interfaces_IBinaryOperable_BinaryLeftOperate_System_String_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
- uid: CalcExpr.Expressions.Terminals.Number.BinaryRightOperate*
  commentId: Overload:CalcExpr.Expressions.Terminals.Number.BinaryRightOperate
  href: CalcExpr.Expressions.Terminals.Number.html#CalcExpr_Expressions_Terminals_Number_BinaryRightOperate_System_String_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  name: BinaryRightOperate
  nameWithType: Number.BinaryRightOperate
  fullName: CalcExpr.Expressions.Terminals.Number.BinaryRightOperate
- uid: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Interfaces.IBinaryOperable
  isExternal: true
  href: CalcExpr.Expressions.Interfaces.IBinaryOperable.html#CalcExpr_Expressions_Interfaces_IBinaryOperable_BinaryRightOperate_System_String_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  name: BinaryRightOperate(string, IExpression, ExpressionContext)
  nameWithType: IBinaryOperable.BinaryRightOperate(string, IExpression, ExpressionContext)
  fullName: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryRightOperate(string, CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  nameWithType.vb: IBinaryOperable.BinaryRightOperate(String, IExpression, ExpressionContext)
  fullName.vb: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryRightOperate(String, CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  name.vb: BinaryRightOperate(String, IExpression, ExpressionContext)
  spec.csharp:
  - uid: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
    name: BinaryRightOperate
    href: CalcExpr.Expressions.Interfaces.IBinaryOperable.html#CalcExpr_Expressions_Interfaces_IBinaryOperable_BinaryRightOperate_System_String_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
    name: BinaryRightOperate
    href: CalcExpr.Expressions.Interfaces.IBinaryOperable.html#CalcExpr_Expressions_Interfaces_IBinaryOperable_BinaryRightOperate_System_String_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: CalcExpr.Expressions.Terminals.Number.Equals*
  commentId: Overload:CalcExpr.Expressions.Terminals.Number.Equals
  href: CalcExpr.Expressions.Terminals.Number.html#CalcExpr_Expressions_Terminals_Number_Equals_System_Object_
  name: Equals
  nameWithType: Number.Equals
  fullName: CalcExpr.Expressions.Terminals.Number.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: CalcExpr.Expressions.Terminals.Number.GetHashCode*
  commentId: Overload:CalcExpr.Expressions.Terminals.Number.GetHashCode
  href: CalcExpr.Expressions.Terminals.Number.html#CalcExpr_Expressions_Terminals_Number_GetHashCode
  name: GetHashCode
  nameWithType: Number.GetHashCode
  fullName: CalcExpr.Expressions.Terminals.Number.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: CalcExpr.Expressions.Terminals.Terminal.ToString(System.String)
  commentId: M:CalcExpr.Expressions.Terminals.Terminal.ToString(System.String)
  parent: CalcExpr.Expressions.Terminals.Terminal
  isExternal: true
  href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_ToString_System_String_
  name: ToString(string)
  nameWithType: Terminal.ToString(string)
  fullName: CalcExpr.Expressions.Terminals.Terminal.ToString(string)
  nameWithType.vb: Terminal.ToString(String)
  fullName.vb: CalcExpr.Expressions.Terminals.Terminal.ToString(String)
  name.vb: ToString(String)
  spec.csharp:
  - uid: CalcExpr.Expressions.Terminals.Terminal.ToString(System.String)
    name: ToString
    href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_ToString_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Terminals.Terminal.ToString(System.String)
    name: ToString
    href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_ToString_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: CalcExpr.Expressions.Terminals.Number.ToString*
  commentId: Overload:CalcExpr.Expressions.Terminals.Number.ToString
  href: CalcExpr.Expressions.Terminals.Number.html#CalcExpr_Expressions_Terminals_Number_ToString_System_String_
  name: ToString
  nameWithType: Number.ToString
  fullName: CalcExpr.Expressions.Terminals.Number.ToString
- uid: CalcExpr.Expressions.IExpression.ToString(System.String)
  commentId: M:CalcExpr.Expressions.IExpression.ToString(System.String)
  parent: CalcExpr.Expressions.IExpression
  isExternal: true
  href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_ToString_System_String_
  name: ToString(string)
  nameWithType: IExpression.ToString(string)
  fullName: CalcExpr.Expressions.IExpression.ToString(string)
  nameWithType.vb: IExpression.ToString(String)
  fullName.vb: CalcExpr.Expressions.IExpression.ToString(String)
  name.vb: ToString(String)
  spec.csharp:
  - uid: CalcExpr.Expressions.IExpression.ToString(System.String)
    name: ToString
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_ToString_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.IExpression.ToString(System.String)
    name: ToString
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_ToString_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: CalcExpr.Expressions.Terminals.Number.op_Explicit*
  commentId: Overload:CalcExpr.Expressions.Terminals.Number.op_Explicit
  name: explicit operator
  nameWithType: Number.explicit operator
  fullName: CalcExpr.Expressions.Terminals.Number.explicit operator
  nameWithType.vb: Number.CType
  fullName.vb: CalcExpr.Expressions.Terminals.Number.CType
  name.vb: CType
  spec.csharp:
  - name: explicit
  - name: " "
  - name: operator
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal
  nameWithType: decimal
  fullName: decimal
  nameWithType.vb: Decimal
  fullName.vb: Decimal
  name.vb: Decimal
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: short
  nameWithType: short
  fullName: short
  nameWithType.vb: Short
  fullName.vb: Short
  name.vb: Short
- uid: System.SByte
  commentId: T:System.SByte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.sbyte
  name: sbyte
  nameWithType: sbyte
  fullName: sbyte
  nameWithType.vb: SByte
  fullName.vb: SByte
  name.vb: SByte
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
