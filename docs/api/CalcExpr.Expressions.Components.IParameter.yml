### YamlMime:ManagedReference
items:
- uid: CalcExpr.Expressions.Components.IParameter
  commentId: T:CalcExpr.Expressions.Components.IParameter
  id: IParameter
  parent: CalcExpr.Expressions.Components
  children:
  - CalcExpr.Expressions.Components.IParameter.AllowNull
  - CalcExpr.Expressions.Components.IParameter.ApplyAttributes(CalcExpr.Expressions.IExpression,System.Collections.Generic.IEnumerable{CalcExpr.FunctionAttributes.FunctionAttribute})
  - CalcExpr.Expressions.Components.IParameter.Attributes
  - CalcExpr.Expressions.Components.IParameter.ProcessArgument(CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  langs:
  - csharp
  - vb
  name: IParameter
  nameWithType: IParameter
  fullName: CalcExpr.Expressions.Components.IParameter
  type: Interface
  source:
    remote:
      path: src/CalcExpr/Expressions/Components/Parameter.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: IParameter
    path: ../src/CalcExpr/Expressions/Components/Parameter.cs
    startLine: 102
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Components
  syntax:
    content: public interface IParameter
    content.vb: Public Interface IParameter
- uid: CalcExpr.Expressions.Components.IParameter.Attributes
  commentId: P:CalcExpr.Expressions.Components.IParameter.Attributes
  id: Attributes
  parent: CalcExpr.Expressions.Components.IParameter
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: IParameter.Attributes
  fullName: CalcExpr.Expressions.Components.IParameter.Attributes
  type: Property
  source:
    remote:
      path: src/CalcExpr/Expressions/Components/Parameter.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Attributes
    path: ../src/CalcExpr/Expressions/Components/Parameter.cs
    startLine: 104
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Components
  syntax:
    content: FunctionAttribute[] Attributes { get; }
    parameters: []
    return:
      type: CalcExpr.FunctionAttributes.FunctionAttribute[]
    content.vb: ReadOnly Property Attributes As FunctionAttribute()
  overload: CalcExpr.Expressions.Components.IParameter.Attributes*
- uid: CalcExpr.Expressions.Components.IParameter.AllowNull
  commentId: P:CalcExpr.Expressions.Components.IParameter.AllowNull
  id: AllowNull
  parent: CalcExpr.Expressions.Components.IParameter
  langs:
  - csharp
  - vb
  name: AllowNull
  nameWithType: IParameter.AllowNull
  fullName: CalcExpr.Expressions.Components.IParameter.AllowNull
  type: Property
  source:
    remote:
      path: src/CalcExpr/Expressions/Components/Parameter.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: AllowNull
    path: ../src/CalcExpr/Expressions/Components/Parameter.cs
    startLine: 106
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Components
  syntax:
    content: bool AllowNull { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property AllowNull As Boolean
  overload: CalcExpr.Expressions.Components.IParameter.AllowNull*
- uid: CalcExpr.Expressions.Components.IParameter.ProcessArgument(CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Components.IParameter.ProcessArgument(CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  id: ProcessArgument(CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Components.IParameter
  langs:
  - csharp
  - vb
  name: ProcessArgument(IExpression, ExpressionContext)
  nameWithType: IParameter.ProcessArgument(IExpression, ExpressionContext)
  fullName: CalcExpr.Expressions.Components.IParameter.ProcessArgument(CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Components/Parameter.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: ProcessArgument
    path: ../src/CalcExpr/Expressions/Components/Parameter.cs
    startLine: 108
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Components
  syntax:
    content: object? ProcessArgument(IExpression argument, ExpressionContext context)
    parameters:
    - id: argument
      type: CalcExpr.Expressions.IExpression
    - id: context
      type: CalcExpr.Context.ExpressionContext
    return:
      type: System.Object
    content.vb: Function ProcessArgument(argument As IExpression, context As ExpressionContext) As Object
  overload: CalcExpr.Expressions.Components.IParameter.ProcessArgument*
- uid: CalcExpr.Expressions.Components.IParameter.ApplyAttributes(CalcExpr.Expressions.IExpression,System.Collections.Generic.IEnumerable{CalcExpr.FunctionAttributes.FunctionAttribute})
  commentId: M:CalcExpr.Expressions.Components.IParameter.ApplyAttributes(CalcExpr.Expressions.IExpression,System.Collections.Generic.IEnumerable{CalcExpr.FunctionAttributes.FunctionAttribute})
  id: ApplyAttributes(CalcExpr.Expressions.IExpression,System.Collections.Generic.IEnumerable{CalcExpr.FunctionAttributes.FunctionAttribute})
  parent: CalcExpr.Expressions.Components.IParameter
  langs:
  - csharp
  - vb
  name: ApplyAttributes(IExpression, IEnumerable<FunctionAttribute>)
  nameWithType: IParameter.ApplyAttributes(IExpression, IEnumerable<FunctionAttribute>)
  fullName: CalcExpr.Expressions.Components.IParameter.ApplyAttributes(CalcExpr.Expressions.IExpression, System.Collections.Generic.IEnumerable<CalcExpr.FunctionAttributes.FunctionAttribute>)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Components/Parameter.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: ApplyAttributes
    path: ../src/CalcExpr/Expressions/Components/Parameter.cs
    startLine: 110
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Components
  syntax:
    content: public static IExpression? ApplyAttributes(IExpression argument, IEnumerable<FunctionAttribute> attributes)
    parameters:
    - id: argument
      type: CalcExpr.Expressions.IExpression
    - id: attributes
      type: System.Collections.Generic.IEnumerable{CalcExpr.FunctionAttributes.FunctionAttribute}
    return:
      type: CalcExpr.Expressions.IExpression
    content.vb: Public Shared Function ApplyAttributes(argument As IExpression, attributes As IEnumerable(Of FunctionAttribute)) As IExpression
  overload: CalcExpr.Expressions.Components.IParameter.ApplyAttributes*
  nameWithType.vb: IParameter.ApplyAttributes(IExpression, IEnumerable(Of FunctionAttribute))
  fullName.vb: CalcExpr.Expressions.Components.IParameter.ApplyAttributes(CalcExpr.Expressions.IExpression, System.Collections.Generic.IEnumerable(Of CalcExpr.FunctionAttributes.FunctionAttribute))
  name.vb: ApplyAttributes(IExpression, IEnumerable(Of FunctionAttribute))
references:
- uid: CalcExpr.Expressions.Components
  commentId: N:CalcExpr.Expressions.Components
  href: CalcExpr.html
  name: CalcExpr.Expressions.Components
  nameWithType: CalcExpr.Expressions.Components
  fullName: CalcExpr.Expressions.Components
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Components
    name: Components
    href: CalcExpr.Expressions.Components.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Components
    name: Components
    href: CalcExpr.Expressions.Components.html
- uid: CalcExpr.Expressions.Components.IParameter.Attributes*
  commentId: Overload:CalcExpr.Expressions.Components.IParameter.Attributes
  href: CalcExpr.Expressions.Components.IParameter.html#CalcExpr_Expressions_Components_IParameter_Attributes
  name: Attributes
  nameWithType: IParameter.Attributes
  fullName: CalcExpr.Expressions.Components.IParameter.Attributes
- uid: CalcExpr.FunctionAttributes.FunctionAttribute[]
  isExternal: true
  href: CalcExpr.FunctionAttributes.FunctionAttribute.html
  name: FunctionAttribute[]
  nameWithType: FunctionAttribute[]
  fullName: CalcExpr.FunctionAttributes.FunctionAttribute[]
  nameWithType.vb: FunctionAttribute()
  fullName.vb: CalcExpr.FunctionAttributes.FunctionAttribute()
  name.vb: FunctionAttribute()
  spec.csharp:
  - uid: CalcExpr.FunctionAttributes.FunctionAttribute
    name: FunctionAttribute
    href: CalcExpr.FunctionAttributes.FunctionAttribute.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: CalcExpr.FunctionAttributes.FunctionAttribute
    name: FunctionAttribute
    href: CalcExpr.FunctionAttributes.FunctionAttribute.html
  - name: (
  - name: )
- uid: CalcExpr.Expressions.Components.IParameter.AllowNull*
  commentId: Overload:CalcExpr.Expressions.Components.IParameter.AllowNull
  href: CalcExpr.Expressions.Components.IParameter.html#CalcExpr_Expressions_Components_IParameter_AllowNull
  name: AllowNull
  nameWithType: IParameter.AllowNull
  fullName: CalcExpr.Expressions.Components.IParameter.AllowNull
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CalcExpr.Expressions.Components.IParameter.ProcessArgument*
  commentId: Overload:CalcExpr.Expressions.Components.IParameter.ProcessArgument
  href: CalcExpr.Expressions.Components.IParameter.html#CalcExpr_Expressions_Components_IParameter_ProcessArgument_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  name: ProcessArgument
  nameWithType: IParameter.ProcessArgument
  fullName: CalcExpr.Expressions.Components.IParameter.ProcessArgument
- uid: CalcExpr.Expressions.IExpression
  commentId: T:CalcExpr.Expressions.IExpression
  parent: CalcExpr.Expressions
  href: CalcExpr.Expressions.IExpression.html
  name: IExpression
  nameWithType: IExpression
  fullName: CalcExpr.Expressions.IExpression
- uid: CalcExpr.Context.ExpressionContext
  commentId: T:CalcExpr.Context.ExpressionContext
  parent: CalcExpr.Context
  href: CalcExpr.Context.ExpressionContext.html
  name: ExpressionContext
  nameWithType: ExpressionContext
  fullName: CalcExpr.Context.ExpressionContext
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: CalcExpr.Expressions
  commentId: N:CalcExpr.Expressions
  href: CalcExpr.html
  name: CalcExpr.Expressions
  nameWithType: CalcExpr.Expressions
  fullName: CalcExpr.Expressions
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
- uid: CalcExpr.Context
  commentId: N:CalcExpr.Context
  href: CalcExpr.html
  name: CalcExpr.Context
  nameWithType: CalcExpr.Context
  fullName: CalcExpr.Context
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Context
    name: Context
    href: CalcExpr.Context.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Context
    name: Context
    href: CalcExpr.Context.html
- uid: CalcExpr.Expressions.Components.IParameter.ApplyAttributes*
  commentId: Overload:CalcExpr.Expressions.Components.IParameter.ApplyAttributes
  href: CalcExpr.Expressions.Components.IParameter.html#CalcExpr_Expressions_Components_IParameter_ApplyAttributes_CalcExpr_Expressions_IExpression_System_Collections_Generic_IEnumerable_CalcExpr_FunctionAttributes_FunctionAttribute__
  name: ApplyAttributes
  nameWithType: IParameter.ApplyAttributes
  fullName: CalcExpr.Expressions.Components.IParameter.ApplyAttributes
- uid: System.Collections.Generic.IEnumerable{CalcExpr.FunctionAttributes.FunctionAttribute}
  commentId: T:System.Collections.Generic.IEnumerable{CalcExpr.FunctionAttributes.FunctionAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<FunctionAttribute>
  nameWithType: IEnumerable<FunctionAttribute>
  fullName: System.Collections.Generic.IEnumerable<CalcExpr.FunctionAttributes.FunctionAttribute>
  nameWithType.vb: IEnumerable(Of FunctionAttribute)
  fullName.vb: System.Collections.Generic.IEnumerable(Of CalcExpr.FunctionAttributes.FunctionAttribute)
  name.vb: IEnumerable(Of FunctionAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: CalcExpr.FunctionAttributes.FunctionAttribute
    name: FunctionAttribute
    href: CalcExpr.FunctionAttributes.FunctionAttribute.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: CalcExpr.FunctionAttributes.FunctionAttribute
    name: FunctionAttribute
    href: CalcExpr.FunctionAttributes.FunctionAttribute.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
