### YamlMime:ManagedReference
items:
- uid: CalcExpr.Expressions.Components.TypeParameter
  commentId: T:CalcExpr.Expressions.Components.TypeParameter
  id: TypeParameter
  parent: CalcExpr.Expressions.Components
  children:
  - CalcExpr.Expressions.Components.TypeParameter.ConvertFromExpression(System.Collections.Generic.IEnumerable{CalcExpr.TypeConverters.ITypeConverter},CalcExpr.Expressions.IExpression)
  - CalcExpr.Expressions.Components.TypeParameter.ConvertToExpression(System.Collections.Generic.IEnumerable{CalcExpr.TypeConverters.ITypeConverter},System.Object)
  - CalcExpr.Expressions.Components.TypeParameter.InitializeTypeParameter(System.Type,System.Collections.Generic.IEnumerable{CalcExpr.FunctionAttributes.FunctionAttribute},System.Boolean)
  langs:
  - csharp
  - vb
  name: TypeParameter
  nameWithType: TypeParameter
  fullName: CalcExpr.Expressions.Components.TypeParameter
  type: Class
  source:
    remote:
      path: src/CalcExpr/Expressions/Components/TypeParameter.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: TypeParameter
    path: ../src/CalcExpr/Expressions/Components/TypeParameter.cs
    startLine: 33
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Components
  syntax:
    content: public static class TypeParameter
    content.vb: Public Module TypeParameter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: CalcExpr.Expressions.Components.TypeParameter.InitializeTypeParameter(System.Type,System.Collections.Generic.IEnumerable{CalcExpr.FunctionAttributes.FunctionAttribute},System.Boolean)
  commentId: M:CalcExpr.Expressions.Components.TypeParameter.InitializeTypeParameter(System.Type,System.Collections.Generic.IEnumerable{CalcExpr.FunctionAttributes.FunctionAttribute},System.Boolean)
  id: InitializeTypeParameter(System.Type,System.Collections.Generic.IEnumerable{CalcExpr.FunctionAttributes.FunctionAttribute},System.Boolean)
  parent: CalcExpr.Expressions.Components.TypeParameter
  langs:
  - csharp
  - vb
  name: InitializeTypeParameter(Type, IEnumerable<FunctionAttribute>, bool)
  nameWithType: TypeParameter.InitializeTypeParameter(Type, IEnumerable<FunctionAttribute>, bool)
  fullName: CalcExpr.Expressions.Components.TypeParameter.InitializeTypeParameter(System.Type, System.Collections.Generic.IEnumerable<CalcExpr.FunctionAttributes.FunctionAttribute>, bool)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Components/TypeParameter.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: InitializeTypeParameter
    path: ../src/CalcExpr/Expressions/Components/TypeParameter.cs
    startLine: 42
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Components
  summary: Initializes a new instance of the <xref href="CalcExpr.Expressions.Components.TypeParameter%601" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public static object? InitializeTypeParameter(Type type, IEnumerable<FunctionAttribute> attributes, bool allow_null)
    parameters:
    - id: type
      type: System.Type
      description: The type of the parameter.
    - id: attributes
      type: System.Collections.Generic.IEnumerable{CalcExpr.FunctionAttributes.FunctionAttribute}
      description: The attributes of the parameter.
    - id: allow_null
      type: System.Boolean
      description: Whether the parameter allows null values.
    return:
      type: System.Object
      description: A new instance of the <xref href="CalcExpr.Expressions.Components.TypeParameter%601" data-throw-if-not-resolved="false"></xref> struct.
    content.vb: Public Shared Function InitializeTypeParameter(type As Type, attributes As IEnumerable(Of FunctionAttribute), allow_null As Boolean) As Object
  overload: CalcExpr.Expressions.Components.TypeParameter.InitializeTypeParameter*
  nameWithType.vb: TypeParameter.InitializeTypeParameter(Type, IEnumerable(Of FunctionAttribute), Boolean)
  fullName.vb: CalcExpr.Expressions.Components.TypeParameter.InitializeTypeParameter(System.Type, System.Collections.Generic.IEnumerable(Of CalcExpr.FunctionAttributes.FunctionAttribute), Boolean)
  name.vb: InitializeTypeParameter(Type, IEnumerable(Of FunctionAttribute), Boolean)
- uid: CalcExpr.Expressions.Components.TypeParameter.ConvertFromExpression(System.Collections.Generic.IEnumerable{CalcExpr.TypeConverters.ITypeConverter},CalcExpr.Expressions.IExpression)
  commentId: M:CalcExpr.Expressions.Components.TypeParameter.ConvertFromExpression(System.Collections.Generic.IEnumerable{CalcExpr.TypeConverters.ITypeConverter},CalcExpr.Expressions.IExpression)
  id: ConvertFromExpression(System.Collections.Generic.IEnumerable{CalcExpr.TypeConverters.ITypeConverter},CalcExpr.Expressions.IExpression)
  isExtensionMethod: true
  parent: CalcExpr.Expressions.Components.TypeParameter
  langs:
  - csharp
  - vb
  name: ConvertFromExpression(IEnumerable<ITypeConverter>, IExpression)
  nameWithType: TypeParameter.ConvertFromExpression(IEnumerable<ITypeConverter>, IExpression)
  fullName: CalcExpr.Expressions.Components.TypeParameter.ConvertFromExpression(System.Collections.Generic.IEnumerable<CalcExpr.TypeConverters.ITypeConverter>, CalcExpr.Expressions.IExpression)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Components/TypeParameter.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: ConvertFromExpression
    path: ../src/CalcExpr/Expressions/Components/TypeParameter.cs
    startLine: 55
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Components
  summary: Processes the argument with the specified context.
  example: []
  syntax:
    content: public static object? ConvertFromExpression(this IEnumerable<ITypeConverter> converters, IExpression expression)
    parameters:
    - id: converters
      type: System.Collections.Generic.IEnumerable{CalcExpr.TypeConverters.ITypeConverter}
      description: The <xref href="CalcExpr.TypeConverters.ITypeConverter" data-throw-if-not-resolved="false"></xref>s to use.
    - id: expression
      type: CalcExpr.Expressions.IExpression
      description: The expression to convert.
    return:
      type: System.Object
      description: The converted object.
    content.vb: Public Shared Function ConvertFromExpression(converters As IEnumerable(Of ITypeConverter), expression As IExpression) As Object
  overload: CalcExpr.Expressions.Components.TypeParameter.ConvertFromExpression*
  nameWithType.vb: TypeParameter.ConvertFromExpression(IEnumerable(Of ITypeConverter), IExpression)
  fullName.vb: CalcExpr.Expressions.Components.TypeParameter.ConvertFromExpression(System.Collections.Generic.IEnumerable(Of CalcExpr.TypeConverters.ITypeConverter), CalcExpr.Expressions.IExpression)
  name.vb: ConvertFromExpression(IEnumerable(Of ITypeConverter), IExpression)
- uid: CalcExpr.Expressions.Components.TypeParameter.ConvertToExpression(System.Collections.Generic.IEnumerable{CalcExpr.TypeConverters.ITypeConverter},System.Object)
  commentId: M:CalcExpr.Expressions.Components.TypeParameter.ConvertToExpression(System.Collections.Generic.IEnumerable{CalcExpr.TypeConverters.ITypeConverter},System.Object)
  id: ConvertToExpression(System.Collections.Generic.IEnumerable{CalcExpr.TypeConverters.ITypeConverter},System.Object)
  isExtensionMethod: true
  parent: CalcExpr.Expressions.Components.TypeParameter
  langs:
  - csharp
  - vb
  name: ConvertToExpression(IEnumerable<ITypeConverter>, object?)
  nameWithType: TypeParameter.ConvertToExpression(IEnumerable<ITypeConverter>, object?)
  fullName: CalcExpr.Expressions.Components.TypeParameter.ConvertToExpression(System.Collections.Generic.IEnumerable<CalcExpr.TypeConverters.ITypeConverter>, object?)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Components/TypeParameter.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: ConvertToExpression
    path: ../src/CalcExpr/Expressions/Components/TypeParameter.cs
    startLine: 74
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Components
  summary: Converts the specified value to an <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>;
  example: []
  syntax:
    content: public static Terminal? ConvertToExpression(this IEnumerable<ITypeConverter> converters, object? value)
    parameters:
    - id: converters
      type: System.Collections.Generic.IEnumerable{CalcExpr.TypeConverters.ITypeConverter}
      description: The <xref href="CalcExpr.TypeConverters.ITypeConverter" data-throw-if-not-resolved="false"></xref>s to use.
    - id: value
      type: System.Object
      description: The value to convert.
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
      description: An <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref> representing the value.
    content.vb: Public Shared Function ConvertToExpression(converters As IEnumerable(Of ITypeConverter), value As Object) As Terminal
  overload: CalcExpr.Expressions.Components.TypeParameter.ConvertToExpression*
  nameWithType.vb: TypeParameter.ConvertToExpression(IEnumerable(Of ITypeConverter), Object)
  fullName.vb: CalcExpr.Expressions.Components.TypeParameter.ConvertToExpression(System.Collections.Generic.IEnumerable(Of CalcExpr.TypeConverters.ITypeConverter), Object)
  name.vb: ConvertToExpression(IEnumerable(Of ITypeConverter), Object)
references:
- uid: CalcExpr.Expressions.Components
  commentId: N:CalcExpr.Expressions.Components
  href: CalcExpr.html
  name: CalcExpr.Expressions.Components
  nameWithType: CalcExpr.Expressions.Components
  fullName: CalcExpr.Expressions.Components
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Components
    name: Components
    href: CalcExpr.Expressions.Components.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Components
    name: Components
    href: CalcExpr.Expressions.Components.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CalcExpr.Expressions.Components.TypeParameter`1
  commentId: T:CalcExpr.Expressions.Components.TypeParameter`1
  href: CalcExpr.Expressions.Components.TypeParameter-1.html
  name: TypeParameter<T>
  nameWithType: TypeParameter<T>
  fullName: CalcExpr.Expressions.Components.TypeParameter<T>
  nameWithType.vb: TypeParameter(Of T)
  fullName.vb: CalcExpr.Expressions.Components.TypeParameter(Of T)
  name.vb: TypeParameter(Of T)
  spec.csharp:
  - uid: CalcExpr.Expressions.Components.TypeParameter`1
    name: TypeParameter
    href: CalcExpr.Expressions.Components.TypeParameter-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: CalcExpr.Expressions.Components.TypeParameter`1
    name: TypeParameter
    href: CalcExpr.Expressions.Components.TypeParameter-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: CalcExpr.Expressions.Components.TypeParameter.InitializeTypeParameter*
  commentId: Overload:CalcExpr.Expressions.Components.TypeParameter.InitializeTypeParameter
  href: CalcExpr.Expressions.Components.TypeParameter.html#CalcExpr_Expressions_Components_TypeParameter_InitializeTypeParameter_System_Type_System_Collections_Generic_IEnumerable_CalcExpr_FunctionAttributes_FunctionAttribute__System_Boolean_
  name: InitializeTypeParameter
  nameWithType: TypeParameter.InitializeTypeParameter
  fullName: CalcExpr.Expressions.Components.TypeParameter.InitializeTypeParameter
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.IEnumerable{CalcExpr.FunctionAttributes.FunctionAttribute}
  commentId: T:System.Collections.Generic.IEnumerable{CalcExpr.FunctionAttributes.FunctionAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<FunctionAttribute>
  nameWithType: IEnumerable<FunctionAttribute>
  fullName: System.Collections.Generic.IEnumerable<CalcExpr.FunctionAttributes.FunctionAttribute>
  nameWithType.vb: IEnumerable(Of FunctionAttribute)
  fullName.vb: System.Collections.Generic.IEnumerable(Of CalcExpr.FunctionAttributes.FunctionAttribute)
  name.vb: IEnumerable(Of FunctionAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: CalcExpr.FunctionAttributes.FunctionAttribute
    name: FunctionAttribute
    href: CalcExpr.FunctionAttributes.FunctionAttribute.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: CalcExpr.FunctionAttributes.FunctionAttribute
    name: FunctionAttribute
    href: CalcExpr.FunctionAttributes.FunctionAttribute.html
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: CalcExpr.TypeConverters.ITypeConverter
  commentId: T:CalcExpr.TypeConverters.ITypeConverter
  parent: CalcExpr.TypeConverters
  href: CalcExpr.TypeConverters.ITypeConverter.html
  name: ITypeConverter
  nameWithType: ITypeConverter
  fullName: CalcExpr.TypeConverters.ITypeConverter
- uid: CalcExpr.Expressions.Components.TypeParameter.ConvertFromExpression*
  commentId: Overload:CalcExpr.Expressions.Components.TypeParameter.ConvertFromExpression
  href: CalcExpr.Expressions.Components.TypeParameter.html#CalcExpr_Expressions_Components_TypeParameter_ConvertFromExpression_System_Collections_Generic_IEnumerable_CalcExpr_TypeConverters_ITypeConverter__CalcExpr_Expressions_IExpression_
  name: ConvertFromExpression
  nameWithType: TypeParameter.ConvertFromExpression
  fullName: CalcExpr.Expressions.Components.TypeParameter.ConvertFromExpression
- uid: System.Collections.Generic.IEnumerable{CalcExpr.TypeConverters.ITypeConverter}
  commentId: T:System.Collections.Generic.IEnumerable{CalcExpr.TypeConverters.ITypeConverter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ITypeConverter>
  nameWithType: IEnumerable<ITypeConverter>
  fullName: System.Collections.Generic.IEnumerable<CalcExpr.TypeConverters.ITypeConverter>
  nameWithType.vb: IEnumerable(Of ITypeConverter)
  fullName.vb: System.Collections.Generic.IEnumerable(Of CalcExpr.TypeConverters.ITypeConverter)
  name.vb: IEnumerable(Of ITypeConverter)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: CalcExpr.TypeConverters.ITypeConverter
    name: ITypeConverter
    href: CalcExpr.TypeConverters.ITypeConverter.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: CalcExpr.TypeConverters.ITypeConverter
    name: ITypeConverter
    href: CalcExpr.TypeConverters.ITypeConverter.html
  - name: )
- uid: CalcExpr.Expressions.IExpression
  commentId: T:CalcExpr.Expressions.IExpression
  parent: CalcExpr.Expressions
  href: CalcExpr.Expressions.IExpression.html
  name: IExpression
  nameWithType: IExpression
  fullName: CalcExpr.Expressions.IExpression
- uid: CalcExpr.TypeConverters
  commentId: N:CalcExpr.TypeConverters
  href: CalcExpr.html
  name: CalcExpr.TypeConverters
  nameWithType: CalcExpr.TypeConverters
  fullName: CalcExpr.TypeConverters
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.TypeConverters
    name: TypeConverters
    href: CalcExpr.TypeConverters.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.TypeConverters
    name: TypeConverters
    href: CalcExpr.TypeConverters.html
- uid: CalcExpr.Expressions
  commentId: N:CalcExpr.Expressions
  href: CalcExpr.html
  name: CalcExpr.Expressions
  nameWithType: CalcExpr.Expressions
  fullName: CalcExpr.Expressions
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
- uid: CalcExpr.Expressions.Components.TypeParameter.ConvertToExpression*
  commentId: Overload:CalcExpr.Expressions.Components.TypeParameter.ConvertToExpression
  href: CalcExpr.Expressions.Components.TypeParameter.html#CalcExpr_Expressions_Components_TypeParameter_ConvertToExpression_System_Collections_Generic_IEnumerable_CalcExpr_TypeConverters_ITypeConverter__System_Object_
  name: ConvertToExpression
  nameWithType: TypeParameter.ConvertToExpression
  fullName: CalcExpr.Expressions.Components.TypeParameter.ConvertToExpression
- uid: CalcExpr.Expressions.Terminals.Terminal
  commentId: T:CalcExpr.Expressions.Terminals.Terminal
  parent: CalcExpr.Expressions.Terminals
  href: CalcExpr.Expressions.Terminals.Terminal.html
  name: Terminal
  nameWithType: Terminal
  fullName: CalcExpr.Expressions.Terminals.Terminal
- uid: CalcExpr.Expressions.Terminals
  commentId: N:CalcExpr.Expressions.Terminals
  href: CalcExpr.html
  name: CalcExpr.Expressions.Terminals
  nameWithType: CalcExpr.Expressions.Terminals
  fullName: CalcExpr.Expressions.Terminals
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Terminals
    name: Terminals
    href: CalcExpr.Expressions.Terminals.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Terminals
    name: Terminals
    href: CalcExpr.Expressions.Terminals.html
