### YamlMime:ManagedReference
items:
- uid: CalcExpr.Expressions.IExpression
  commentId: T:CalcExpr.Expressions.IExpression
  id: IExpression
  parent: CalcExpr.Expressions
  children:
  - CalcExpr.Expressions.IExpression.CompareTo(System.Object)
  - CalcExpr.Expressions.IExpression.Evaluate
  - CalcExpr.Expressions.IExpression.Evaluate(CalcExpr.Context.ExpressionContext)
  - CalcExpr.Expressions.IExpression.StepEvaluate
  - CalcExpr.Expressions.IExpression.StepEvaluate(CalcExpr.Context.ExpressionContext)
  - CalcExpr.Expressions.IExpression.ToString
  - CalcExpr.Expressions.IExpression.ToString(System.String)
  langs:
  - csharp
  - vb
  name: IExpression
  nameWithType: IExpression
  fullName: CalcExpr.Expressions.IExpression
  type: Interface
  source:
    remote:
      path: src/CalcExpr/Expressions/IExpression.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: IExpression
    path: ../src/CalcExpr/Expressions/IExpression.cs
    startLine: 5
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions
  syntax:
    content: public interface IExpression
    content.vb: Public Interface IExpression
- uid: CalcExpr.Expressions.IExpression.Evaluate
  commentId: M:CalcExpr.Expressions.IExpression.Evaluate
  id: Evaluate
  parent: CalcExpr.Expressions.IExpression
  langs:
  - csharp
  - vb
  name: Evaluate()
  nameWithType: IExpression.Evaluate()
  fullName: CalcExpr.Expressions.IExpression.Evaluate()
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/IExpression.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Evaluate
    path: ../src/CalcExpr/Expressions/IExpression.cs
    startLine: 13
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions
  summary: Evaluates and calculates the value of the <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: Terminal Evaluate()
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
      description: A new <xref href="CalcExpr.Expressions.Terminals.Terminal" data-throw-if-not-resolved="false"></xref> containing the value of the current <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function Evaluate() As Terminal
  overload: CalcExpr.Expressions.IExpression.Evaluate*
- uid: CalcExpr.Expressions.IExpression.Evaluate(CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.IExpression.Evaluate(CalcExpr.Context.ExpressionContext)
  id: Evaluate(CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.IExpression
  langs:
  - csharp
  - vb
  name: Evaluate(ExpressionContext)
  nameWithType: IExpression.Evaluate(ExpressionContext)
  fullName: CalcExpr.Expressions.IExpression.Evaluate(CalcExpr.Context.ExpressionContext)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/IExpression.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Evaluate
    path: ../src/CalcExpr/Expressions/IExpression.cs
    startLine: 22
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions
  summary: Evaluates and calculates the value of the <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: Terminal Evaluate(ExpressionContext context)
    parameters:
    - id: context
      type: CalcExpr.Context.ExpressionContext
      description: The values for each variable that could appear in the <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
      description: A new <xref href="CalcExpr.Expressions.Terminals.Terminal" data-throw-if-not-resolved="false"></xref> containing the value of the current <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function Evaluate(context As ExpressionContext) As Terminal
  overload: CalcExpr.Expressions.IExpression.Evaluate*
- uid: CalcExpr.Expressions.IExpression.StepEvaluate
  commentId: M:CalcExpr.Expressions.IExpression.StepEvaluate
  id: StepEvaluate
  parent: CalcExpr.Expressions.IExpression
  langs:
  - csharp
  - vb
  name: StepEvaluate()
  nameWithType: IExpression.StepEvaluate()
  fullName: CalcExpr.Expressions.IExpression.StepEvaluate()
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/IExpression.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: StepEvaluate
    path: ../src/CalcExpr/Expressions/IExpression.cs
    startLine: 31
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions
  summary: Evaluates and calculates one step towards the value of the <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: IExpression StepEvaluate()
    return:
      type: CalcExpr.Expressions.IExpression
      description: >-
        A new <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref> containing the partially evaluated value of the current 

        <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function StepEvaluate() As IExpression
  overload: CalcExpr.Expressions.IExpression.StepEvaluate*
- uid: CalcExpr.Expressions.IExpression.StepEvaluate(CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.IExpression.StepEvaluate(CalcExpr.Context.ExpressionContext)
  id: StepEvaluate(CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.IExpression
  langs:
  - csharp
  - vb
  name: StepEvaluate(ExpressionContext)
  nameWithType: IExpression.StepEvaluate(ExpressionContext)
  fullName: CalcExpr.Expressions.IExpression.StepEvaluate(CalcExpr.Context.ExpressionContext)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/IExpression.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: StepEvaluate
    path: ../src/CalcExpr/Expressions/IExpression.cs
    startLine: 41
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions
  summary: Evaluates and calculates one step towards the value of the <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: IExpression StepEvaluate(ExpressionContext context)
    parameters:
    - id: context
      type: CalcExpr.Context.ExpressionContext
      description: The values for each variable that could appear in the <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
    return:
      type: CalcExpr.Expressions.IExpression
      description: >-
        A new <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref> containing the partially evaluated value of the current 

        <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function StepEvaluate(context As ExpressionContext) As IExpression
  overload: CalcExpr.Expressions.IExpression.StepEvaluate*
- uid: CalcExpr.Expressions.IExpression.ToString
  commentId: M:CalcExpr.Expressions.IExpression.ToString
  id: ToString
  parent: CalcExpr.Expressions.IExpression
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: IExpression.ToString()
  fullName: CalcExpr.Expressions.IExpression.ToString()
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/IExpression.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: ToString
    path: ../src/CalcExpr/Expressions/IExpression.cs
    startLine: 47
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions
  summary: Returns a <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: string ToString()
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function ToString() As String
  overload: CalcExpr.Expressions.IExpression.ToString*
- uid: CalcExpr.Expressions.IExpression.ToString(System.String)
  commentId: M:CalcExpr.Expressions.IExpression.ToString(System.String)
  id: ToString(System.String)
  parent: CalcExpr.Expressions.IExpression
  langs:
  - csharp
  - vb
  name: ToString(string?)
  nameWithType: IExpression.ToString(string?)
  fullName: CalcExpr.Expressions.IExpression.ToString(string?)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/IExpression.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: ToString
    path: ../src/CalcExpr/Expressions/IExpression.cs
    startLine: 58
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions
  summary: >-
    Returns a <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref> using the specified 

    format <xref href="System.String" data-throw-if-not-resolved="false"></xref> for number formats.
  example: []
  syntax:
    content: string ToString(string? format)
    parameters:
    - id: format
      type: System.String
      description: ''
    return:
      type: System.String
      description: >-
        A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref> using the specified format 

        <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function ToString(format As String) As String
  overload: CalcExpr.Expressions.IExpression.ToString*
  nameWithType.vb: IExpression.ToString(String)
  fullName.vb: CalcExpr.Expressions.IExpression.ToString(String)
  name.vb: ToString(String)
- uid: CalcExpr.Expressions.IExpression.CompareTo(System.Object)
  commentId: M:CalcExpr.Expressions.IExpression.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: CalcExpr.Expressions.IExpression
  langs:
  - csharp
  - vb
  name: CompareTo(object?)
  nameWithType: IExpression.CompareTo(object?)
  fullName: CalcExpr.Expressions.IExpression.CompareTo(object?)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/IExpression.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: CompareTo
    path: ../src/CalcExpr/Expressions/IExpression.cs
    startLine: 74
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions
  summary: >-
    Compares the current instance with another object of the same type and returns an integer that indicates

    whether the current instance precedes, follows, or occurs in the same position in the sort order as the other

    object.
  example: []
  syntax:
    content: int CompareTo(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with this instance.
    return:
      type: System.Int32
      description: >-
        A value that indicates the relative order of the objects being compared. The return value has these meanings:

        <p>Value – Meaning</p><p>Less than zero – This instance precedes obj in the sort order.</p><p>Zero – This instance occurs in the same position in the sort order as obj.</p><p>Greater than zero – This instance follows obj in the sort order.</p>
    content.vb: Function CompareTo(obj As Object) As Integer
  overload: CalcExpr.Expressions.IExpression.CompareTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: obj is not the same type as this instance.
  nameWithType.vb: IExpression.CompareTo(Object)
  fullName.vb: CalcExpr.Expressions.IExpression.CompareTo(Object)
  name.vb: CompareTo(Object)
references:
- uid: CalcExpr.Expressions
  commentId: N:CalcExpr.Expressions
  href: CalcExpr.html
  name: CalcExpr.Expressions
  nameWithType: CalcExpr.Expressions
  fullName: CalcExpr.Expressions
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
- uid: CalcExpr.Expressions.IExpression
  commentId: T:CalcExpr.Expressions.IExpression
  parent: CalcExpr.Expressions
  href: CalcExpr.Expressions.IExpression.html
  name: IExpression
  nameWithType: IExpression
  fullName: CalcExpr.Expressions.IExpression
- uid: CalcExpr.Expressions.Terminals.Terminal
  commentId: T:CalcExpr.Expressions.Terminals.Terminal
  parent: CalcExpr.Expressions.Terminals
  href: CalcExpr.Expressions.Terminals.Terminal.html
  name: Terminal
  nameWithType: Terminal
  fullName: CalcExpr.Expressions.Terminals.Terminal
- uid: CalcExpr.Expressions.IExpression.Evaluate*
  commentId: Overload:CalcExpr.Expressions.IExpression.Evaluate
  href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_Evaluate
  name: Evaluate
  nameWithType: IExpression.Evaluate
  fullName: CalcExpr.Expressions.IExpression.Evaluate
- uid: CalcExpr.Expressions.Terminals
  commentId: N:CalcExpr.Expressions.Terminals
  href: CalcExpr.html
  name: CalcExpr.Expressions.Terminals
  nameWithType: CalcExpr.Expressions.Terminals
  fullName: CalcExpr.Expressions.Terminals
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Terminals
    name: Terminals
    href: CalcExpr.Expressions.Terminals.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Terminals
    name: Terminals
    href: CalcExpr.Expressions.Terminals.html
- uid: CalcExpr.Context.ExpressionContext
  commentId: T:CalcExpr.Context.ExpressionContext
  parent: CalcExpr.Context
  href: CalcExpr.Context.ExpressionContext.html
  name: ExpressionContext
  nameWithType: ExpressionContext
  fullName: CalcExpr.Context.ExpressionContext
- uid: CalcExpr.Context
  commentId: N:CalcExpr.Context
  href: CalcExpr.html
  name: CalcExpr.Context
  nameWithType: CalcExpr.Context
  fullName: CalcExpr.Context
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Context
    name: Context
    href: CalcExpr.Context.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Context
    name: Context
    href: CalcExpr.Context.html
- uid: CalcExpr.Expressions.IExpression.StepEvaluate*
  commentId: Overload:CalcExpr.Expressions.IExpression.StepEvaluate
  href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_StepEvaluate
  name: StepEvaluate
  nameWithType: IExpression.StepEvaluate
  fullName: CalcExpr.Expressions.IExpression.StepEvaluate
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: CalcExpr.Expressions.IExpression.ToString*
  commentId: Overload:CalcExpr.Expressions.IExpression.ToString
  href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_ToString
  name: ToString
  nameWithType: IExpression.ToString
  fullName: CalcExpr.Expressions.IExpression.ToString
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: CalcExpr.Expressions.IExpression.CompareTo*
  commentId: Overload:CalcExpr.Expressions.IExpression.CompareTo
  href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_CompareTo_System_Object_
  name: CompareTo
  nameWithType: IExpression.CompareTo
  fullName: CalcExpr.Expressions.IExpression.CompareTo
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
