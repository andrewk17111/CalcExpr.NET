### YamlMime:ManagedReference
items:
- uid: CalcExpr.NativeFunctions.StatisticalFunctions
  commentId: T:CalcExpr.NativeFunctions.StatisticalFunctions
  id: StatisticalFunctions
  parent: CalcExpr.NativeFunctions
  children:
  - CalcExpr.NativeFunctions.StatisticalFunctions.Count(CalcExpr.Expressions.IExpression)
  - CalcExpr.NativeFunctions.StatisticalFunctions.Max(CalcExpr.Expressions.IExpression)
  - CalcExpr.NativeFunctions.StatisticalFunctions.Mean(CalcExpr.Expressions.IExpression)
  - CalcExpr.NativeFunctions.StatisticalFunctions.Median(CalcExpr.Expressions.IExpression)
  - CalcExpr.NativeFunctions.StatisticalFunctions.Min(CalcExpr.Expressions.IExpression)
  - CalcExpr.NativeFunctions.StatisticalFunctions.Mode(CalcExpr.Expressions.IExpression)
  - CalcExpr.NativeFunctions.StatisticalFunctions.Percentile(CalcExpr.Expressions.IExpression,System.Double)
  - CalcExpr.NativeFunctions.StatisticalFunctions.PopulationStandardDeviation(CalcExpr.Expressions.IExpression)
  - CalcExpr.NativeFunctions.StatisticalFunctions.Quartile(CalcExpr.Expressions.IExpression,System.Double)
  - CalcExpr.NativeFunctions.StatisticalFunctions.SampleStandardDeviation(CalcExpr.Expressions.IExpression)
  - CalcExpr.NativeFunctions.StatisticalFunctions.Sum(CalcExpr.Expressions.IExpression)
  langs:
  - csharp
  - vb
  name: StatisticalFunctions
  nameWithType: StatisticalFunctions
  fullName: CalcExpr.NativeFunctions.StatisticalFunctions
  type: Class
  source:
    remote:
      path: src/CalcExpr/NativeFunctions/StatisticalFunctions.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: StatisticalFunctions
    path: ../src/CalcExpr/NativeFunctions/StatisticalFunctions.cs
    startLine: 8
  assemblies:
  - CalcExpr
  namespace: CalcExpr.NativeFunctions
  syntax:
    content: public static class StatisticalFunctions
    content.vb: Public Module StatisticalFunctions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: CalcExpr.NativeFunctions.StatisticalFunctions.Count(CalcExpr.Expressions.IExpression)
  commentId: M:CalcExpr.NativeFunctions.StatisticalFunctions.Count(CalcExpr.Expressions.IExpression)
  id: Count(CalcExpr.Expressions.IExpression)
  parent: CalcExpr.NativeFunctions.StatisticalFunctions
  langs:
  - csharp
  - vb
  name: Count(IExpression)
  nameWithType: StatisticalFunctions.Count(IExpression)
  fullName: CalcExpr.NativeFunctions.StatisticalFunctions.Count(CalcExpr.Expressions.IExpression)
  type: Method
  source:
    remote:
      path: src/CalcExpr/NativeFunctions/StatisticalFunctions.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Count
    path: ../src/CalcExpr/NativeFunctions/StatisticalFunctions.cs
    startLine: 10
  assemblies:
  - CalcExpr
  namespace: CalcExpr.NativeFunctions
  syntax:
    content: >-
      [NativeFunction(new string[] { "count", "length", "len" })]

      public static int Count(IExpression expressions)
    parameters:
    - id: expressions
      type: CalcExpr.Expressions.IExpression
    return:
      type: System.Int32
    content.vb: >-
      <NativeFunction(New String() { "count", "length", "len" })>

      Public Shared Function Count(expressions As IExpression) As Integer
  overload: CalcExpr.NativeFunctions.StatisticalFunctions.Count*
- uid: CalcExpr.NativeFunctions.StatisticalFunctions.Max(CalcExpr.Expressions.IExpression)
  commentId: M:CalcExpr.NativeFunctions.StatisticalFunctions.Max(CalcExpr.Expressions.IExpression)
  id: Max(CalcExpr.Expressions.IExpression)
  parent: CalcExpr.NativeFunctions.StatisticalFunctions
  langs:
  - csharp
  - vb
  name: Max(IExpression)
  nameWithType: StatisticalFunctions.Max(IExpression)
  fullName: CalcExpr.NativeFunctions.StatisticalFunctions.Max(CalcExpr.Expressions.IExpression)
  type: Method
  source:
    remote:
      path: src/CalcExpr/NativeFunctions/StatisticalFunctions.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Max
    path: ../src/CalcExpr/NativeFunctions/StatisticalFunctions.cs
    startLine: 18
  assemblies:
  - CalcExpr
  namespace: CalcExpr.NativeFunctions
  syntax:
    content: >-
      [NativeFunction(new string[] { "max", "maximum" })]

      public static Terminal Max(IExpression expressions)
    parameters:
    - id: expressions
      type: CalcExpr.Expressions.IExpression
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
    content.vb: >-
      <NativeFunction(New String() { "max", "maximum" })>

      Public Shared Function Max(expressions As IExpression) As Terminal
  overload: CalcExpr.NativeFunctions.StatisticalFunctions.Max*
- uid: CalcExpr.NativeFunctions.StatisticalFunctions.Mean(CalcExpr.Expressions.IExpression)
  commentId: M:CalcExpr.NativeFunctions.StatisticalFunctions.Mean(CalcExpr.Expressions.IExpression)
  id: Mean(CalcExpr.Expressions.IExpression)
  parent: CalcExpr.NativeFunctions.StatisticalFunctions
  langs:
  - csharp
  - vb
  name: Mean(IExpression)
  nameWithType: StatisticalFunctions.Mean(IExpression)
  fullName: CalcExpr.NativeFunctions.StatisticalFunctions.Mean(CalcExpr.Expressions.IExpression)
  type: Method
  source:
    remote:
      path: src/CalcExpr/NativeFunctions/StatisticalFunctions.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Mean
    path: ../src/CalcExpr/NativeFunctions/StatisticalFunctions.cs
    startLine: 26
  assemblies:
  - CalcExpr
  namespace: CalcExpr.NativeFunctions
  syntax:
    content: >-
      [NativeFunction(new string[] { "average", "mean" })]

      public static Terminal Mean(IExpression expressions)
    parameters:
    - id: expressions
      type: CalcExpr.Expressions.IExpression
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
    content.vb: >-
      <NativeFunction(New String() { "average", "mean" })>

      Public Shared Function Mean(expressions As IExpression) As Terminal
  overload: CalcExpr.NativeFunctions.StatisticalFunctions.Mean*
- uid: CalcExpr.NativeFunctions.StatisticalFunctions.Median(CalcExpr.Expressions.IExpression)
  commentId: M:CalcExpr.NativeFunctions.StatisticalFunctions.Median(CalcExpr.Expressions.IExpression)
  id: Median(CalcExpr.Expressions.IExpression)
  parent: CalcExpr.NativeFunctions.StatisticalFunctions
  langs:
  - csharp
  - vb
  name: Median(IExpression)
  nameWithType: StatisticalFunctions.Median(IExpression)
  fullName: CalcExpr.NativeFunctions.StatisticalFunctions.Median(CalcExpr.Expressions.IExpression)
  type: Method
  source:
    remote:
      path: src/CalcExpr/NativeFunctions/StatisticalFunctions.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Median
    path: ../src/CalcExpr/NativeFunctions/StatisticalFunctions.cs
    startLine: 37
  assemblies:
  - CalcExpr
  namespace: CalcExpr.NativeFunctions
  syntax:
    content: >-
      [NativeFunction(new string[] { "median" })]

      public static Terminal Median(IExpression expressions)
    parameters:
    - id: expressions
      type: CalcExpr.Expressions.IExpression
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
    content.vb: >-
      <NativeFunction(New String() { "median" })>

      Public Shared Function Median(expressions As IExpression) As Terminal
  overload: CalcExpr.NativeFunctions.StatisticalFunctions.Median*
- uid: CalcExpr.NativeFunctions.StatisticalFunctions.Min(CalcExpr.Expressions.IExpression)
  commentId: M:CalcExpr.NativeFunctions.StatisticalFunctions.Min(CalcExpr.Expressions.IExpression)
  id: Min(CalcExpr.Expressions.IExpression)
  parent: CalcExpr.NativeFunctions.StatisticalFunctions
  langs:
  - csharp
  - vb
  name: Min(IExpression)
  nameWithType: StatisticalFunctions.Min(IExpression)
  fullName: CalcExpr.NativeFunctions.StatisticalFunctions.Min(CalcExpr.Expressions.IExpression)
  type: Method
  source:
    remote:
      path: src/CalcExpr/NativeFunctions/StatisticalFunctions.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Min
    path: ../src/CalcExpr/NativeFunctions/StatisticalFunctions.cs
    startLine: 57
  assemblies:
  - CalcExpr
  namespace: CalcExpr.NativeFunctions
  syntax:
    content: >-
      [NativeFunction(new string[] { "min", "minimum" })]

      public static Terminal Min(IExpression expressions)
    parameters:
    - id: expressions
      type: CalcExpr.Expressions.IExpression
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
    content.vb: >-
      <NativeFunction(New String() { "min", "minimum" })>

      Public Shared Function Min(expressions As IExpression) As Terminal
  overload: CalcExpr.NativeFunctions.StatisticalFunctions.Min*
- uid: CalcExpr.NativeFunctions.StatisticalFunctions.Mode(CalcExpr.Expressions.IExpression)
  commentId: M:CalcExpr.NativeFunctions.StatisticalFunctions.Mode(CalcExpr.Expressions.IExpression)
  id: Mode(CalcExpr.Expressions.IExpression)
  parent: CalcExpr.NativeFunctions.StatisticalFunctions
  langs:
  - csharp
  - vb
  name: Mode(IExpression)
  nameWithType: StatisticalFunctions.Mode(IExpression)
  fullName: CalcExpr.NativeFunctions.StatisticalFunctions.Mode(CalcExpr.Expressions.IExpression)
  type: Method
  source:
    remote:
      path: src/CalcExpr/NativeFunctions/StatisticalFunctions.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Mode
    path: ../src/CalcExpr/NativeFunctions/StatisticalFunctions.cs
    startLine: 65
  assemblies:
  - CalcExpr
  namespace: CalcExpr.NativeFunctions
  syntax:
    content: >-
      [NativeFunction(new string[] { "mode" })]

      public static Terminal Mode(IExpression expressions)
    parameters:
    - id: expressions
      type: CalcExpr.Expressions.IExpression
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
    content.vb: >-
      <NativeFunction(New String() { "mode" })>

      Public Shared Function Mode(expressions As IExpression) As Terminal
  overload: CalcExpr.NativeFunctions.StatisticalFunctions.Mode*
- uid: CalcExpr.NativeFunctions.StatisticalFunctions.Percentile(CalcExpr.Expressions.IExpression,System.Double)
  commentId: M:CalcExpr.NativeFunctions.StatisticalFunctions.Percentile(CalcExpr.Expressions.IExpression,System.Double)
  id: Percentile(CalcExpr.Expressions.IExpression,System.Double)
  parent: CalcExpr.NativeFunctions.StatisticalFunctions
  langs:
  - csharp
  - vb
  name: Percentile(IExpression, double)
  nameWithType: StatisticalFunctions.Percentile(IExpression, double)
  fullName: CalcExpr.NativeFunctions.StatisticalFunctions.Percentile(CalcExpr.Expressions.IExpression, double)
  type: Method
  source:
    remote:
      path: src/CalcExpr/NativeFunctions/StatisticalFunctions.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Percentile
    path: ../src/CalcExpr/NativeFunctions/StatisticalFunctions.cs
    startLine: 89
  assemblies:
  - CalcExpr
  namespace: CalcExpr.NativeFunctions
  syntax:
    content: >-
      [NativeFunction(new string[] { "percentile" })]

      public static Terminal Percentile(IExpression expressions, double p)
    parameters:
    - id: expressions
      type: CalcExpr.Expressions.IExpression
    - id: p
      type: System.Double
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
    content.vb: >-
      <NativeFunction(New String() { "percentile" })>

      Public Shared Function Percentile(expressions As IExpression, p As Double) As Terminal
  overload: CalcExpr.NativeFunctions.StatisticalFunctions.Percentile*
  nameWithType.vb: StatisticalFunctions.Percentile(IExpression, Double)
  fullName.vb: CalcExpr.NativeFunctions.StatisticalFunctions.Percentile(CalcExpr.Expressions.IExpression, Double)
  name.vb: Percentile(IExpression, Double)
- uid: CalcExpr.NativeFunctions.StatisticalFunctions.Quartile(CalcExpr.Expressions.IExpression,System.Double)
  commentId: M:CalcExpr.NativeFunctions.StatisticalFunctions.Quartile(CalcExpr.Expressions.IExpression,System.Double)
  id: Quartile(CalcExpr.Expressions.IExpression,System.Double)
  parent: CalcExpr.NativeFunctions.StatisticalFunctions
  langs:
  - csharp
  - vb
  name: Quartile(IExpression, double)
  nameWithType: StatisticalFunctions.Quartile(IExpression, double)
  fullName: CalcExpr.NativeFunctions.StatisticalFunctions.Quartile(CalcExpr.Expressions.IExpression, double)
  type: Method
  source:
    remote:
      path: src/CalcExpr/NativeFunctions/StatisticalFunctions.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Quartile
    path: ../src/CalcExpr/NativeFunctions/StatisticalFunctions.cs
    startLine: 117
  assemblies:
  - CalcExpr
  namespace: CalcExpr.NativeFunctions
  syntax:
    content: >-
      [NativeFunction(new string[] { "quartile" })]

      public static Terminal Quartile(IExpression expressions, double q)
    parameters:
    - id: expressions
      type: CalcExpr.Expressions.IExpression
    - id: q
      type: System.Double
      attributes:
      - type: CalcExpr.FunctionAttributes.ConditionalAttributes.RangeAttribute
        ctor: CalcExpr.FunctionAttributes.ConditionalAttributes.RangeAttribute.#ctor(System.Double,System.Double,System.Boolean,System.Boolean)
        arguments:
        - type: System.Double
          value: 0
        - type: System.Double
          value: 4
        - type: System.Boolean
          value: false
        - type: System.Boolean
          value: true
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
    content.vb: >-
      <NativeFunction(New String() { "quartile" })>

      Public Shared Function Quartile(expressions As IExpression, q As Double) As Terminal
  overload: CalcExpr.NativeFunctions.StatisticalFunctions.Quartile*
  nameWithType.vb: StatisticalFunctions.Quartile(IExpression, Double)
  fullName.vb: CalcExpr.NativeFunctions.StatisticalFunctions.Quartile(CalcExpr.Expressions.IExpression, Double)
  name.vb: Quartile(IExpression, Double)
- uid: CalcExpr.NativeFunctions.StatisticalFunctions.SampleStandardDeviation(CalcExpr.Expressions.IExpression)
  commentId: M:CalcExpr.NativeFunctions.StatisticalFunctions.SampleStandardDeviation(CalcExpr.Expressions.IExpression)
  id: SampleStandardDeviation(CalcExpr.Expressions.IExpression)
  parent: CalcExpr.NativeFunctions.StatisticalFunctions
  langs:
  - csharp
  - vb
  name: SampleStandardDeviation(IExpression)
  nameWithType: StatisticalFunctions.SampleStandardDeviation(IExpression)
  fullName: CalcExpr.NativeFunctions.StatisticalFunctions.SampleStandardDeviation(CalcExpr.Expressions.IExpression)
  type: Method
  source:
    remote:
      path: src/CalcExpr/NativeFunctions/StatisticalFunctions.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: SampleStandardDeviation
    path: ../src/CalcExpr/NativeFunctions/StatisticalFunctions.cs
    startLine: 123
  assemblies:
  - CalcExpr
  namespace: CalcExpr.NativeFunctions
  syntax:
    content: >-
      [NativeFunction(new string[] { "stdev", "stdevs" })]

      public static Terminal SampleStandardDeviation(IExpression expressions)
    parameters:
    - id: expressions
      type: CalcExpr.Expressions.IExpression
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
    content.vb: >-
      <NativeFunction(New String() { "stdev", "stdevs" })>

      Public Shared Function SampleStandardDeviation(expressions As IExpression) As Terminal
  overload: CalcExpr.NativeFunctions.StatisticalFunctions.SampleStandardDeviation*
- uid: CalcExpr.NativeFunctions.StatisticalFunctions.PopulationStandardDeviation(CalcExpr.Expressions.IExpression)
  commentId: M:CalcExpr.NativeFunctions.StatisticalFunctions.PopulationStandardDeviation(CalcExpr.Expressions.IExpression)
  id: PopulationStandardDeviation(CalcExpr.Expressions.IExpression)
  parent: CalcExpr.NativeFunctions.StatisticalFunctions
  langs:
  - csharp
  - vb
  name: PopulationStandardDeviation(IExpression)
  nameWithType: StatisticalFunctions.PopulationStandardDeviation(IExpression)
  fullName: CalcExpr.NativeFunctions.StatisticalFunctions.PopulationStandardDeviation(CalcExpr.Expressions.IExpression)
  type: Method
  source:
    remote:
      path: src/CalcExpr/NativeFunctions/StatisticalFunctions.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: PopulationStandardDeviation
    path: ../src/CalcExpr/NativeFunctions/StatisticalFunctions.cs
    startLine: 137
  assemblies:
  - CalcExpr
  namespace: CalcExpr.NativeFunctions
  syntax:
    content: >-
      [NativeFunction(new string[] { "stdevp" })]

      public static Terminal PopulationStandardDeviation(IExpression expressions)
    parameters:
    - id: expressions
      type: CalcExpr.Expressions.IExpression
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
    content.vb: >-
      <NativeFunction(New String() { "stdevp" })>

      Public Shared Function PopulationStandardDeviation(expressions As IExpression) As Terminal
  overload: CalcExpr.NativeFunctions.StatisticalFunctions.PopulationStandardDeviation*
- uid: CalcExpr.NativeFunctions.StatisticalFunctions.Sum(CalcExpr.Expressions.IExpression)
  commentId: M:CalcExpr.NativeFunctions.StatisticalFunctions.Sum(CalcExpr.Expressions.IExpression)
  id: Sum(CalcExpr.Expressions.IExpression)
  parent: CalcExpr.NativeFunctions.StatisticalFunctions
  langs:
  - csharp
  - vb
  name: Sum(IExpression)
  nameWithType: StatisticalFunctions.Sum(IExpression)
  fullName: CalcExpr.NativeFunctions.StatisticalFunctions.Sum(CalcExpr.Expressions.IExpression)
  type: Method
  source:
    remote:
      path: src/CalcExpr/NativeFunctions/StatisticalFunctions.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Sum
    path: ../src/CalcExpr/NativeFunctions/StatisticalFunctions.cs
    startLine: 151
  assemblies:
  - CalcExpr
  namespace: CalcExpr.NativeFunctions
  syntax:
    content: >-
      [NativeFunction(new string[] { "sum", "total" })]

      public static Terminal Sum(IExpression expressions)
    parameters:
    - id: expressions
      type: CalcExpr.Expressions.IExpression
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
    content.vb: >-
      <NativeFunction(New String() { "sum", "total" })>

      Public Shared Function Sum(expressions As IExpression) As Terminal
  overload: CalcExpr.NativeFunctions.StatisticalFunctions.Sum*
references:
- uid: CalcExpr.NativeFunctions
  commentId: N:CalcExpr.NativeFunctions
  href: CalcExpr.html
  name: CalcExpr.NativeFunctions
  nameWithType: CalcExpr.NativeFunctions
  fullName: CalcExpr.NativeFunctions
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.NativeFunctions
    name: NativeFunctions
    href: CalcExpr.NativeFunctions.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.NativeFunctions
    name: NativeFunctions
    href: CalcExpr.NativeFunctions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CalcExpr.NativeFunctions.StatisticalFunctions.Count*
  commentId: Overload:CalcExpr.NativeFunctions.StatisticalFunctions.Count
  href: CalcExpr.NativeFunctions.StatisticalFunctions.html#CalcExpr_NativeFunctions_StatisticalFunctions_Count_CalcExpr_Expressions_IExpression_
  name: Count
  nameWithType: StatisticalFunctions.Count
  fullName: CalcExpr.NativeFunctions.StatisticalFunctions.Count
- uid: CalcExpr.Expressions.IExpression
  commentId: T:CalcExpr.Expressions.IExpression
  parent: CalcExpr.Expressions
  href: CalcExpr.Expressions.IExpression.html
  name: IExpression
  nameWithType: IExpression
  fullName: CalcExpr.Expressions.IExpression
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: CalcExpr.Expressions
  commentId: N:CalcExpr.Expressions
  href: CalcExpr.html
  name: CalcExpr.Expressions
  nameWithType: CalcExpr.Expressions
  fullName: CalcExpr.Expressions
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
- uid: CalcExpr.NativeFunctions.StatisticalFunctions.Max*
  commentId: Overload:CalcExpr.NativeFunctions.StatisticalFunctions.Max
  href: CalcExpr.NativeFunctions.StatisticalFunctions.html#CalcExpr_NativeFunctions_StatisticalFunctions_Max_CalcExpr_Expressions_IExpression_
  name: Max
  nameWithType: StatisticalFunctions.Max
  fullName: CalcExpr.NativeFunctions.StatisticalFunctions.Max
- uid: CalcExpr.Expressions.Terminals.Terminal
  commentId: T:CalcExpr.Expressions.Terminals.Terminal
  parent: CalcExpr.Expressions.Terminals
  href: CalcExpr.Expressions.Terminals.Terminal.html
  name: Terminal
  nameWithType: Terminal
  fullName: CalcExpr.Expressions.Terminals.Terminal
- uid: CalcExpr.Expressions.Terminals
  commentId: N:CalcExpr.Expressions.Terminals
  href: CalcExpr.html
  name: CalcExpr.Expressions.Terminals
  nameWithType: CalcExpr.Expressions.Terminals
  fullName: CalcExpr.Expressions.Terminals
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Terminals
    name: Terminals
    href: CalcExpr.Expressions.Terminals.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Terminals
    name: Terminals
    href: CalcExpr.Expressions.Terminals.html
- uid: CalcExpr.NativeFunctions.StatisticalFunctions.Mean*
  commentId: Overload:CalcExpr.NativeFunctions.StatisticalFunctions.Mean
  href: CalcExpr.NativeFunctions.StatisticalFunctions.html#CalcExpr_NativeFunctions_StatisticalFunctions_Mean_CalcExpr_Expressions_IExpression_
  name: Mean
  nameWithType: StatisticalFunctions.Mean
  fullName: CalcExpr.NativeFunctions.StatisticalFunctions.Mean
- uid: CalcExpr.NativeFunctions.StatisticalFunctions.Median*
  commentId: Overload:CalcExpr.NativeFunctions.StatisticalFunctions.Median
  href: CalcExpr.NativeFunctions.StatisticalFunctions.html#CalcExpr_NativeFunctions_StatisticalFunctions_Median_CalcExpr_Expressions_IExpression_
  name: Median
  nameWithType: StatisticalFunctions.Median
  fullName: CalcExpr.NativeFunctions.StatisticalFunctions.Median
- uid: CalcExpr.NativeFunctions.StatisticalFunctions.Min*
  commentId: Overload:CalcExpr.NativeFunctions.StatisticalFunctions.Min
  href: CalcExpr.NativeFunctions.StatisticalFunctions.html#CalcExpr_NativeFunctions_StatisticalFunctions_Min_CalcExpr_Expressions_IExpression_
  name: Min
  nameWithType: StatisticalFunctions.Min
  fullName: CalcExpr.NativeFunctions.StatisticalFunctions.Min
- uid: CalcExpr.NativeFunctions.StatisticalFunctions.Mode*
  commentId: Overload:CalcExpr.NativeFunctions.StatisticalFunctions.Mode
  href: CalcExpr.NativeFunctions.StatisticalFunctions.html#CalcExpr_NativeFunctions_StatisticalFunctions_Mode_CalcExpr_Expressions_IExpression_
  name: Mode
  nameWithType: StatisticalFunctions.Mode
  fullName: CalcExpr.NativeFunctions.StatisticalFunctions.Mode
- uid: CalcExpr.NativeFunctions.StatisticalFunctions.Percentile*
  commentId: Overload:CalcExpr.NativeFunctions.StatisticalFunctions.Percentile
  href: CalcExpr.NativeFunctions.StatisticalFunctions.html#CalcExpr_NativeFunctions_StatisticalFunctions_Percentile_CalcExpr_Expressions_IExpression_System_Double_
  name: Percentile
  nameWithType: StatisticalFunctions.Percentile
  fullName: CalcExpr.NativeFunctions.StatisticalFunctions.Percentile
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: CalcExpr.NativeFunctions.StatisticalFunctions.Quartile*
  commentId: Overload:CalcExpr.NativeFunctions.StatisticalFunctions.Quartile
  href: CalcExpr.NativeFunctions.StatisticalFunctions.html#CalcExpr_NativeFunctions_StatisticalFunctions_Quartile_CalcExpr_Expressions_IExpression_System_Double_
  name: Quartile
  nameWithType: StatisticalFunctions.Quartile
  fullName: CalcExpr.NativeFunctions.StatisticalFunctions.Quartile
- uid: CalcExpr.NativeFunctions.StatisticalFunctions.SampleStandardDeviation*
  commentId: Overload:CalcExpr.NativeFunctions.StatisticalFunctions.SampleStandardDeviation
  href: CalcExpr.NativeFunctions.StatisticalFunctions.html#CalcExpr_NativeFunctions_StatisticalFunctions_SampleStandardDeviation_CalcExpr_Expressions_IExpression_
  name: SampleStandardDeviation
  nameWithType: StatisticalFunctions.SampleStandardDeviation
  fullName: CalcExpr.NativeFunctions.StatisticalFunctions.SampleStandardDeviation
- uid: CalcExpr.NativeFunctions.StatisticalFunctions.PopulationStandardDeviation*
  commentId: Overload:CalcExpr.NativeFunctions.StatisticalFunctions.PopulationStandardDeviation
  href: CalcExpr.NativeFunctions.StatisticalFunctions.html#CalcExpr_NativeFunctions_StatisticalFunctions_PopulationStandardDeviation_CalcExpr_Expressions_IExpression_
  name: PopulationStandardDeviation
  nameWithType: StatisticalFunctions.PopulationStandardDeviation
  fullName: CalcExpr.NativeFunctions.StatisticalFunctions.PopulationStandardDeviation
- uid: CalcExpr.NativeFunctions.StatisticalFunctions.Sum*
  commentId: Overload:CalcExpr.NativeFunctions.StatisticalFunctions.Sum
  href: CalcExpr.NativeFunctions.StatisticalFunctions.html#CalcExpr_NativeFunctions_StatisticalFunctions_Sum_CalcExpr_Expressions_IExpression_
  name: Sum
  nameWithType: StatisticalFunctions.Sum
  fullName: CalcExpr.NativeFunctions.StatisticalFunctions.Sum
