### YamlMime:ManagedReference
items:
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1
  commentId: T:CalcExpr.Expressions.Collections.TerminalCollection`1
  id: TerminalCollection`1
  parent: CalcExpr.Expressions.Collections
  children:
  - CalcExpr.Expressions.Collections.TerminalCollection`1.#ctor(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.Terminals.Terminal})
  - CalcExpr.Expressions.Collections.TerminalCollection`1.#ctor(`0)
  - CalcExpr.Expressions.Collections.TerminalCollection`1.BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  - CalcExpr.Expressions.Collections.TerminalCollection`1.BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  - CalcExpr.Expressions.Collections.TerminalCollection`1.Combine(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression},System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  - CalcExpr.Expressions.Collections.TerminalCollection`1.ConvertIEnumerable(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression})
  - CalcExpr.Expressions.Collections.TerminalCollection`1.Equals(System.Object)
  - CalcExpr.Expressions.Collections.TerminalCollection`1.GetEnumerator
  - CalcExpr.Expressions.Collections.TerminalCollection`1.GetHashCode
  - CalcExpr.Expressions.Collections.TerminalCollection`1.Map(System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  - CalcExpr.Expressions.Collections.TerminalCollection`1.PostfixOperate(System.String,CalcExpr.Context.ExpressionContext)
  - CalcExpr.Expressions.Collections.TerminalCollection`1.PrefixOperate(System.String,CalcExpr.Context.ExpressionContext)
  - CalcExpr.Expressions.Collections.TerminalCollection`1.ToString(System.String)
  - CalcExpr.Expressions.Collections.TerminalCollection`1.Values
  langs:
  - csharp
  - vb
  name: TerminalCollection<T>
  nameWithType: TerminalCollection<T>
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>
  type: Class
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/TerminalCollection.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: TerminalCollection
    path: ../src/CalcExpr/Expressions/Collections/TerminalCollection.cs
    startLine: 40
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  syntax:
    content: 'public class TerminalCollection<T> : Terminal, IEnumerableExpression, IExpression, IEnumerable<IExpression>, IEnumerable, IPrefixOperable, IPostfixOperable, IBinaryOperable where T : IEnumerableExpression'
    typeParameters:
    - id: T
    content.vb: Public Class TerminalCollection(Of T As IEnumerableExpression) Inherits Terminal Implements IEnumerableExpression, IExpression, IEnumerable(Of IExpression), IEnumerable, IPrefixOperable, IPostfixOperable, IBinaryOperable
  inheritance:
  - System.Object
  - CalcExpr.Expressions.Terminals.Terminal
  implements:
  - CalcExpr.Expressions.Collections.IEnumerableExpression
  - CalcExpr.Expressions.IExpression
  - System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression}
  - System.Collections.IEnumerable
  - CalcExpr.Expressions.Interfaces.IPrefixOperable
  - CalcExpr.Expressions.Interfaces.IPostfixOperable
  - CalcExpr.Expressions.Interfaces.IBinaryOperable
  inheritedMembers:
  - CalcExpr.Expressions.Terminals.Terminal.Evaluate
  - CalcExpr.Expressions.Terminals.Terminal.Evaluate(CalcExpr.Context.ExpressionContext)
  - CalcExpr.Expressions.Terminals.Terminal.StepEvaluate
  - CalcExpr.Expressions.Terminals.Terminal.StepEvaluate(CalcExpr.Context.ExpressionContext)
  - CalcExpr.Expressions.Terminals.Terminal.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: TerminalCollection(Of T)
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T)
  name.vb: TerminalCollection(Of T)
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.#ctor(`0)
  commentId: M:CalcExpr.Expressions.Collections.TerminalCollection`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: CalcExpr.Expressions.Collections.TerminalCollection`1
  langs:
  - csharp
  - vb
  name: TerminalCollection(T)
  nameWithType: TerminalCollection<T>.TerminalCollection(T)
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.TerminalCollection(T)
  type: Constructor
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/TerminalCollection.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: .ctor
    path: ../src/CalcExpr/Expressions/Collections/TerminalCollection.cs
    startLine: 40
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  syntax:
    content: public TerminalCollection(T values)
    parameters:
    - id: values
      type: '{T}'
    content.vb: Public Sub New(values As T)
  overload: CalcExpr.Expressions.Collections.TerminalCollection`1.#ctor*
  nameWithType.vb: TerminalCollection(Of T).New(T)
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).New(T)
  name.vb: New(T)
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.Values
  commentId: P:CalcExpr.Expressions.Collections.TerminalCollection`1.Values
  id: Values
  parent: CalcExpr.Expressions.Collections.TerminalCollection`1
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: TerminalCollection<T>.Values
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.Values
  type: Property
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/TerminalCollection.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Values
    path: ../src/CalcExpr/Expressions/Collections/TerminalCollection.cs
    startLine: 43
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  syntax:
    content: public T Values { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Property Values As T
  overload: CalcExpr.Expressions.Collections.TerminalCollection`1.Values*
  nameWithType.vb: TerminalCollection(Of T).Values
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).Values
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.#ctor(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.Terminals.Terminal})
  commentId: M:CalcExpr.Expressions.Collections.TerminalCollection`1.#ctor(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.Terminals.Terminal})
  id: '#ctor(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.Terminals.Terminal})'
  parent: CalcExpr.Expressions.Collections.TerminalCollection`1
  langs:
  - csharp
  - vb
  name: TerminalCollection(IEnumerable<Terminal>)
  nameWithType: TerminalCollection<T>.TerminalCollection(IEnumerable<Terminal>)
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.TerminalCollection(System.Collections.Generic.IEnumerable<CalcExpr.Expressions.Terminals.Terminal>)
  type: Constructor
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/TerminalCollection.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: .ctor
    path: ../src/CalcExpr/Expressions/Collections/TerminalCollection.cs
    startLine: 45
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  syntax:
    content: public TerminalCollection(IEnumerable<Terminal> elements)
    parameters:
    - id: elements
      type: System.Collections.Generic.IEnumerable{CalcExpr.Expressions.Terminals.Terminal}
    content.vb: Public Sub New(elements As IEnumerable(Of Terminal))
  overload: CalcExpr.Expressions.Collections.TerminalCollection`1.#ctor*
  nameWithType.vb: TerminalCollection(Of T).New(IEnumerable(Of Terminal))
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).New(System.Collections.Generic.IEnumerable(Of CalcExpr.Expressions.Terminals.Terminal))
  name.vb: New(IEnumerable(Of Terminal))
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.PrefixOperate(System.String,CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Collections.TerminalCollection`1.PrefixOperate(System.String,CalcExpr.Context.ExpressionContext)
  id: PrefixOperate(System.String,CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Collections.TerminalCollection`1
  langs:
  - csharp
  - vb
  name: PrefixOperate(string, ExpressionContext)
  nameWithType: TerminalCollection<T>.PrefixOperate(string, ExpressionContext)
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.PrefixOperate(string, CalcExpr.Context.ExpressionContext)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/TerminalCollection.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: PrefixOperate
    path: ../src/CalcExpr/Expressions/Collections/TerminalCollection.cs
    startLine: 47
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  example: []
  syntax:
    content: public Terminal PrefixOperate(string identifier, ExpressionContext context)
    parameters:
    - id: identifier
      type: System.String
    - id: context
      type: CalcExpr.Context.ExpressionContext
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
    content.vb: Public Function PrefixOperate(identifier As String, context As ExpressionContext) As Terminal
  overload: CalcExpr.Expressions.Collections.TerminalCollection`1.PrefixOperate*
  implements:
  - CalcExpr.Expressions.Interfaces.IPrefixOperable.PrefixOperate(System.String,CalcExpr.Context.ExpressionContext)
  nameWithType.vb: TerminalCollection(Of T).PrefixOperate(String, ExpressionContext)
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).PrefixOperate(String, CalcExpr.Context.ExpressionContext)
  name.vb: PrefixOperate(String, ExpressionContext)
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.PostfixOperate(System.String,CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Collections.TerminalCollection`1.PostfixOperate(System.String,CalcExpr.Context.ExpressionContext)
  id: PostfixOperate(System.String,CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Collections.TerminalCollection`1
  langs:
  - csharp
  - vb
  name: PostfixOperate(string, ExpressionContext)
  nameWithType: TerminalCollection<T>.PostfixOperate(string, ExpressionContext)
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.PostfixOperate(string, CalcExpr.Context.ExpressionContext)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/TerminalCollection.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: PostfixOperate
    path: ../src/CalcExpr/Expressions/Collections/TerminalCollection.cs
    startLine: 50
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  example: []
  syntax:
    content: public Terminal PostfixOperate(string identifier, ExpressionContext context)
    parameters:
    - id: identifier
      type: System.String
    - id: context
      type: CalcExpr.Context.ExpressionContext
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
    content.vb: Public Function PostfixOperate(identifier As String, context As ExpressionContext) As Terminal
  overload: CalcExpr.Expressions.Collections.TerminalCollection`1.PostfixOperate*
  implements:
  - CalcExpr.Expressions.Interfaces.IPostfixOperable.PostfixOperate(System.String,CalcExpr.Context.ExpressionContext)
  nameWithType.vb: TerminalCollection(Of T).PostfixOperate(String, ExpressionContext)
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).PostfixOperate(String, CalcExpr.Context.ExpressionContext)
  name.vb: PostfixOperate(String, ExpressionContext)
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Collections.TerminalCollection`1.BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  id: BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Collections.TerminalCollection`1
  langs:
  - csharp
  - vb
  name: BinaryLeftOperate(string, IExpression, ExpressionContext)
  nameWithType: TerminalCollection<T>.BinaryLeftOperate(string, IExpression, ExpressionContext)
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.BinaryLeftOperate(string, CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/TerminalCollection.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: BinaryLeftOperate
    path: ../src/CalcExpr/Expressions/Collections/TerminalCollection.cs
    startLine: 53
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  example: []
  syntax:
    content: public Terminal? BinaryLeftOperate(string identifier, IExpression right, ExpressionContext context)
    parameters:
    - id: identifier
      type: System.String
    - id: right
      type: CalcExpr.Expressions.IExpression
    - id: context
      type: CalcExpr.Context.ExpressionContext
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
    content.vb: Public Function BinaryLeftOperate(identifier As String, right As IExpression, context As ExpressionContext) As Terminal
  overload: CalcExpr.Expressions.Collections.TerminalCollection`1.BinaryLeftOperate*
  implements:
  - CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  nameWithType.vb: TerminalCollection(Of T).BinaryLeftOperate(String, IExpression, ExpressionContext)
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).BinaryLeftOperate(String, CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  name.vb: BinaryLeftOperate(String, IExpression, ExpressionContext)
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Collections.TerminalCollection`1.BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  id: BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Collections.TerminalCollection`1
  langs:
  - csharp
  - vb
  name: BinaryRightOperate(string, IExpression, ExpressionContext)
  nameWithType: TerminalCollection<T>.BinaryRightOperate(string, IExpression, ExpressionContext)
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.BinaryRightOperate(string, CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/TerminalCollection.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: BinaryRightOperate
    path: ../src/CalcExpr/Expressions/Collections/TerminalCollection.cs
    startLine: 56
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  example: []
  syntax:
    content: public Terminal? BinaryRightOperate(string identifier, IExpression left, ExpressionContext context)
    parameters:
    - id: identifier
      type: System.String
    - id: left
      type: CalcExpr.Expressions.IExpression
    - id: context
      type: CalcExpr.Context.ExpressionContext
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
    content.vb: Public Function BinaryRightOperate(identifier As String, left As IExpression, context As ExpressionContext) As Terminal
  overload: CalcExpr.Expressions.Collections.TerminalCollection`1.BinaryRightOperate*
  implements:
  - CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  nameWithType.vb: TerminalCollection(Of T).BinaryRightOperate(String, IExpression, ExpressionContext)
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).BinaryRightOperate(String, CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  name.vb: BinaryRightOperate(String, IExpression, ExpressionContext)
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.ConvertIEnumerable(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression})
  commentId: M:CalcExpr.Expressions.Collections.TerminalCollection`1.ConvertIEnumerable(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression})
  id: ConvertIEnumerable(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression})
  parent: CalcExpr.Expressions.Collections.TerminalCollection`1
  langs:
  - csharp
  - vb
  name: ConvertIEnumerable(IEnumerable<IExpression>)
  nameWithType: TerminalCollection<T>.ConvertIEnumerable(IEnumerable<IExpression>)
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.ConvertIEnumerable(System.Collections.Generic.IEnumerable<CalcExpr.Expressions.IExpression>)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/TerminalCollection.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: ConvertIEnumerable
    path: ../src/CalcExpr/Expressions/Collections/TerminalCollection.cs
    startLine: 59
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  summary: Converts an <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> to an <xref href="CalcExpr.Expressions.Collections.IEnumerableExpression" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static IEnumerableExpression ConvertIEnumerable(IEnumerable<IExpression> expressions)
    parameters:
    - id: expressions
      type: System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression}
      description: The <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> to convert.
    return:
      type: CalcExpr.Expressions.Collections.IEnumerableExpression
      description: The new <xref href="CalcExpr.Expressions.Collections.IEnumerableExpression" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function ConvertIEnumerable(expressions As IEnumerable(Of IExpression)) As IEnumerableExpression
  overload: CalcExpr.Expressions.Collections.TerminalCollection`1.ConvertIEnumerable*
  implements:
  - CalcExpr.Expressions.Collections.IEnumerableExpression.ConvertIEnumerable(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression})
  nameWithType.vb: TerminalCollection(Of T).ConvertIEnumerable(IEnumerable(Of IExpression))
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).ConvertIEnumerable(System.Collections.Generic.IEnumerable(Of CalcExpr.Expressions.IExpression))
  name.vb: ConvertIEnumerable(IEnumerable(Of IExpression))
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.Map(System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  commentId: M:CalcExpr.Expressions.Collections.TerminalCollection`1.Map(System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  id: Map(System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  parent: CalcExpr.Expressions.Collections.TerminalCollection`1
  langs:
  - csharp
  - vb
  name: Map(Func<IExpression, IExpression>)
  nameWithType: TerminalCollection<T>.Map(Func<IExpression, IExpression>)
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.Map(System.Func<CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression>)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/TerminalCollection.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Map
    path: ../src/CalcExpr/Expressions/Collections/TerminalCollection.cs
    startLine: 67
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  summary: >-
    Maps the <xref href="CalcExpr.Expressions.Collections.IEnumerableExpression" data-throw-if-not-resolved="false"></xref> to a new <xref href="CalcExpr.Expressions.Collections.IEnumerableExpression" data-throw-if-not-resolved="false"></xref> using the specified

    map function.
  example: []
  syntax:
    content: public IEnumerableExpression Map(Func<IExpression, IExpression> map)
    parameters:
    - id: map
      type: System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression}
      description: The function to transform each element of the <xref href="CalcExpr.Expressions.Collections.IEnumerableExpression" data-throw-if-not-resolved="false"></xref>.
    return:
      type: CalcExpr.Expressions.Collections.IEnumerableExpression
      description: A new <xref href="CalcExpr.Expressions.Collections.IEnumerableExpression" data-throw-if-not-resolved="false"></xref> with the transformed elements.
    content.vb: Public Function Map(map As Func(Of IExpression, IExpression)) As IEnumerableExpression
  overload: CalcExpr.Expressions.Collections.TerminalCollection`1.Map*
  implements:
  - CalcExpr.Expressions.Collections.IEnumerableExpression.Map(System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  nameWithType.vb: TerminalCollection(Of T).Map(Func(Of IExpression, IExpression))
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).Map(System.Func(Of CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression))
  name.vb: Map(Func(Of IExpression, IExpression))
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.Combine(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression},System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  commentId: M:CalcExpr.Expressions.Collections.TerminalCollection`1.Combine(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression},System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  id: Combine(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression},System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  parent: CalcExpr.Expressions.Collections.TerminalCollection`1
  langs:
  - csharp
  - vb
  name: Combine(IEnumerable<IExpression>, Func<IExpression, IExpression, IExpression>)
  nameWithType: TerminalCollection<T>.Combine(IEnumerable<IExpression>, Func<IExpression, IExpression, IExpression>)
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.Combine(System.Collections.Generic.IEnumerable<CalcExpr.Expressions.IExpression>, System.Func<CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression>)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/TerminalCollection.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Combine
    path: ../src/CalcExpr/Expressions/Collections/TerminalCollection.cs
    startLine: 70
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  summary: >-
    Combines the <xref href="CalcExpr.Expressions.Collections.IEnumerableExpression" data-throw-if-not-resolved="false"></xref> with another <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> using the

    specified combine function.
  example: []
  syntax:
    content: public IEnumerableExpression Combine(IEnumerable<IExpression> expressions, Func<IExpression, IExpression, IExpression> combine)
    parameters:
    - id: expressions
      type: System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression}
      description: The other <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> to combine with.
    - id: combine
      type: System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression}
      description: The function to combine the elements of the two <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref>.
    return:
      type: CalcExpr.Expressions.Collections.IEnumerableExpression
      description: <xref href="CalcExpr.Expressions.Collections.IEnumerableExpression" data-throw-if-not-resolved="false"></xref> with the combined elements.
    content.vb: Public Function Combine(expressions As IEnumerable(Of IExpression), combine As Func(Of IExpression, IExpression, IExpression)) As IEnumerableExpression
  overload: CalcExpr.Expressions.Collections.TerminalCollection`1.Combine*
  implements:
  - CalcExpr.Expressions.Collections.IEnumerableExpression.Combine(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression},System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  nameWithType.vb: TerminalCollection(Of T).Combine(IEnumerable(Of IExpression), Func(Of IExpression, IExpression, IExpression))
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).Combine(System.Collections.Generic.IEnumerable(Of CalcExpr.Expressions.IExpression), System.Func(Of CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression))
  name.vb: Combine(IEnumerable(Of IExpression), Func(Of IExpression, IExpression, IExpression))
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.Equals(System.Object)
  commentId: M:CalcExpr.Expressions.Collections.TerminalCollection`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: CalcExpr.Expressions.Collections.TerminalCollection`1
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: TerminalCollection<T>.Equals(object?)
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.Equals(object?)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/TerminalCollection.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Equals
    path: ../src/CalcExpr/Expressions/Collections/TerminalCollection.cs
    startLine: 73
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: CalcExpr.Expressions.Collections.TerminalCollection`1.Equals*
  nameWithType.vb: TerminalCollection(Of T).Equals(Object)
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).Equals(Object)
  name.vb: Equals(Object)
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.GetHashCode
  commentId: M:CalcExpr.Expressions.Collections.TerminalCollection`1.GetHashCode
  id: GetHashCode
  parent: CalcExpr.Expressions.Collections.TerminalCollection`1
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: TerminalCollection<T>.GetHashCode()
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.GetHashCode()
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/TerminalCollection.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: GetHashCode
    path: ../src/CalcExpr/Expressions/Collections/TerminalCollection.cs
    startLine: 76
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: CalcExpr.Expressions.Collections.TerminalCollection`1.GetHashCode*
  nameWithType.vb: TerminalCollection(Of T).GetHashCode()
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).GetHashCode()
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.ToString(System.String)
  commentId: M:CalcExpr.Expressions.Collections.TerminalCollection`1.ToString(System.String)
  id: ToString(System.String)
  parent: CalcExpr.Expressions.Collections.TerminalCollection`1
  langs:
  - csharp
  - vb
  name: ToString(string?)
  nameWithType: TerminalCollection<T>.ToString(string?)
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.ToString(string?)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/TerminalCollection.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: ToString
    path: ../src/CalcExpr/Expressions/Collections/TerminalCollection.cs
    startLine: 79
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  summary: >-
    Returns a <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref> using the specified 

    format <xref href="System.String" data-throw-if-not-resolved="false"></xref> for number formats.
  example: []
  syntax:
    content: public override string ToString(string? format)
    parameters:
    - id: format
      type: System.String
      description: ''
    return:
      type: System.String
      description: >-
        A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref> using the specified format 

        <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function ToString(format As String) As String
  overridden: CalcExpr.Expressions.Terminals.Terminal.ToString(System.String)
  overload: CalcExpr.Expressions.Collections.TerminalCollection`1.ToString*
  implements:
  - CalcExpr.Expressions.IExpression.ToString(System.String)
  nameWithType.vb: TerminalCollection(Of T).ToString(String)
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).ToString(String)
  name.vb: ToString(String)
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.GetEnumerator
  commentId: M:CalcExpr.Expressions.Collections.TerminalCollection`1.GetEnumerator
  id: GetEnumerator
  parent: CalcExpr.Expressions.Collections.TerminalCollection`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: TerminalCollection<T>.GetEnumerator()
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/TerminalCollection.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: GetEnumerator
    path: ../src/CalcExpr/Expressions/Collections/TerminalCollection.cs
    startLine: 82
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  summary: Returns an enumerator that iterates through the collection.
  example: []
  syntax:
    content: public IEnumerator<IExpression> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{CalcExpr.Expressions.IExpression}
      description: An enumerator that can be used to iterate through the collection.
    content.vb: Public Function GetEnumerator() As IEnumerator(Of IExpression)
  overload: CalcExpr.Expressions.Collections.TerminalCollection`1.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression}.GetEnumerator
  nameWithType.vb: TerminalCollection(Of T).GetEnumerator()
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).GetEnumerator()
references:
- uid: CalcExpr.Expressions.Collections
  commentId: N:CalcExpr.Expressions.Collections
  href: CalcExpr.html
  name: CalcExpr.Expressions.Collections
  nameWithType: CalcExpr.Expressions.Collections
  fullName: CalcExpr.Expressions.Collections
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Collections
    name: Collections
    href: CalcExpr.Expressions.Collections.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Collections
    name: Collections
    href: CalcExpr.Expressions.Collections.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: CalcExpr.Expressions.Terminals.Terminal
  commentId: T:CalcExpr.Expressions.Terminals.Terminal
  parent: CalcExpr.Expressions.Terminals
  href: CalcExpr.Expressions.Terminals.Terminal.html
  name: Terminal
  nameWithType: Terminal
  fullName: CalcExpr.Expressions.Terminals.Terminal
- uid: CalcExpr.Expressions.Collections.IEnumerableExpression
  commentId: T:CalcExpr.Expressions.Collections.IEnumerableExpression
  parent: CalcExpr.Expressions.Collections
  href: CalcExpr.Expressions.Collections.IEnumerableExpression.html
  name: IEnumerableExpression
  nameWithType: IEnumerableExpression
  fullName: CalcExpr.Expressions.Collections.IEnumerableExpression
- uid: CalcExpr.Expressions.IExpression
  commentId: T:CalcExpr.Expressions.IExpression
  parent: CalcExpr.Expressions
  href: CalcExpr.Expressions.IExpression.html
  name: IExpression
  nameWithType: IExpression
  fullName: CalcExpr.Expressions.IExpression
- uid: System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression}
  commentId: T:System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IExpression>
  nameWithType: IEnumerable<IExpression>
  fullName: System.Collections.Generic.IEnumerable<CalcExpr.Expressions.IExpression>
  nameWithType.vb: IEnumerable(Of IExpression)
  fullName.vb: System.Collections.Generic.IEnumerable(Of CalcExpr.Expressions.IExpression)
  name.vb: IEnumerable(Of IExpression)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: CalcExpr.Expressions.Interfaces.IPrefixOperable
  commentId: T:CalcExpr.Expressions.Interfaces.IPrefixOperable
  parent: CalcExpr.Expressions.Interfaces
  href: CalcExpr.Expressions.Interfaces.IPrefixOperable.html
  name: IPrefixOperable
  nameWithType: IPrefixOperable
  fullName: CalcExpr.Expressions.Interfaces.IPrefixOperable
- uid: CalcExpr.Expressions.Interfaces.IPostfixOperable
  commentId: T:CalcExpr.Expressions.Interfaces.IPostfixOperable
  parent: CalcExpr.Expressions.Interfaces
  href: CalcExpr.Expressions.Interfaces.IPostfixOperable.html
  name: IPostfixOperable
  nameWithType: IPostfixOperable
  fullName: CalcExpr.Expressions.Interfaces.IPostfixOperable
- uid: CalcExpr.Expressions.Interfaces.IBinaryOperable
  commentId: T:CalcExpr.Expressions.Interfaces.IBinaryOperable
  parent: CalcExpr.Expressions.Interfaces
  href: CalcExpr.Expressions.Interfaces.IBinaryOperable.html
  name: IBinaryOperable
  nameWithType: IBinaryOperable
  fullName: CalcExpr.Expressions.Interfaces.IBinaryOperable
- uid: CalcExpr.Expressions.Terminals.Terminal.Evaluate
  commentId: M:CalcExpr.Expressions.Terminals.Terminal.Evaluate
  parent: CalcExpr.Expressions.Terminals.Terminal
  href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_Evaluate
  name: Evaluate()
  nameWithType: Terminal.Evaluate()
  fullName: CalcExpr.Expressions.Terminals.Terminal.Evaluate()
  spec.csharp:
  - uid: CalcExpr.Expressions.Terminals.Terminal.Evaluate
    name: Evaluate
    href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_Evaluate
  - name: (
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Terminals.Terminal.Evaluate
    name: Evaluate
    href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_Evaluate
  - name: (
  - name: )
- uid: CalcExpr.Expressions.Terminals.Terminal.Evaluate(CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Terminals.Terminal.Evaluate(CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Terminals.Terminal
  href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_Evaluate_CalcExpr_Context_ExpressionContext_
  name: Evaluate(ExpressionContext)
  nameWithType: Terminal.Evaluate(ExpressionContext)
  fullName: CalcExpr.Expressions.Terminals.Terminal.Evaluate(CalcExpr.Context.ExpressionContext)
  spec.csharp:
  - uid: CalcExpr.Expressions.Terminals.Terminal.Evaluate(CalcExpr.Context.ExpressionContext)
    name: Evaluate
    href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_Evaluate_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Terminals.Terminal.Evaluate(CalcExpr.Context.ExpressionContext)
    name: Evaluate
    href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_Evaluate_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
- uid: CalcExpr.Expressions.Terminals.Terminal.StepEvaluate
  commentId: M:CalcExpr.Expressions.Terminals.Terminal.StepEvaluate
  parent: CalcExpr.Expressions.Terminals.Terminal
  href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_StepEvaluate
  name: StepEvaluate()
  nameWithType: Terminal.StepEvaluate()
  fullName: CalcExpr.Expressions.Terminals.Terminal.StepEvaluate()
  spec.csharp:
  - uid: CalcExpr.Expressions.Terminals.Terminal.StepEvaluate
    name: StepEvaluate
    href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_StepEvaluate
  - name: (
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Terminals.Terminal.StepEvaluate
    name: StepEvaluate
    href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_StepEvaluate
  - name: (
  - name: )
- uid: CalcExpr.Expressions.Terminals.Terminal.StepEvaluate(CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Terminals.Terminal.StepEvaluate(CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Terminals.Terminal
  href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_StepEvaluate_CalcExpr_Context_ExpressionContext_
  name: StepEvaluate(ExpressionContext)
  nameWithType: Terminal.StepEvaluate(ExpressionContext)
  fullName: CalcExpr.Expressions.Terminals.Terminal.StepEvaluate(CalcExpr.Context.ExpressionContext)
  spec.csharp:
  - uid: CalcExpr.Expressions.Terminals.Terminal.StepEvaluate(CalcExpr.Context.ExpressionContext)
    name: StepEvaluate
    href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_StepEvaluate_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Terminals.Terminal.StepEvaluate(CalcExpr.Context.ExpressionContext)
    name: StepEvaluate
    href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_StepEvaluate_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
- uid: CalcExpr.Expressions.Terminals.Terminal.ToString
  commentId: M:CalcExpr.Expressions.Terminals.Terminal.ToString
  parent: CalcExpr.Expressions.Terminals.Terminal
  href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_ToString
  name: ToString()
  nameWithType: Terminal.ToString()
  fullName: CalcExpr.Expressions.Terminals.Terminal.ToString()
  spec.csharp:
  - uid: CalcExpr.Expressions.Terminals.Terminal.ToString
    name: ToString
    href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Terminals.Terminal.ToString
    name: ToString
    href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_ToString
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CalcExpr.Expressions.Terminals
  commentId: N:CalcExpr.Expressions.Terminals
  href: CalcExpr.html
  name: CalcExpr.Expressions.Terminals
  nameWithType: CalcExpr.Expressions.Terminals
  fullName: CalcExpr.Expressions.Terminals
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Terminals
    name: Terminals
    href: CalcExpr.Expressions.Terminals.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Terminals
    name: Terminals
    href: CalcExpr.Expressions.Terminals.html
- uid: CalcExpr.Expressions
  commentId: N:CalcExpr.Expressions
  href: CalcExpr.html
  name: CalcExpr.Expressions
  nameWithType: CalcExpr.Expressions
  fullName: CalcExpr.Expressions
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: CalcExpr.Expressions.Interfaces
  commentId: N:CalcExpr.Expressions.Interfaces
  href: CalcExpr.html
  name: CalcExpr.Expressions.Interfaces
  nameWithType: CalcExpr.Expressions.Interfaces
  fullName: CalcExpr.Expressions.Interfaces
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Interfaces
    name: Interfaces
    href: CalcExpr.Expressions.Interfaces.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Interfaces
    name: Interfaces
    href: CalcExpr.Expressions.Interfaces.html
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.#ctor*
  commentId: Overload:CalcExpr.Expressions.Collections.TerminalCollection`1.#ctor
  href: CalcExpr.Expressions.Collections.TerminalCollection-1.html#CalcExpr_Expressions_Collections_TerminalCollection_1__ctor__0_
  name: TerminalCollection
  nameWithType: TerminalCollection<T>.TerminalCollection
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.TerminalCollection
  nameWithType.vb: TerminalCollection(Of T).New
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).New
  name.vb: New
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.Values*
  commentId: Overload:CalcExpr.Expressions.Collections.TerminalCollection`1.Values
  href: CalcExpr.Expressions.Collections.TerminalCollection-1.html#CalcExpr_Expressions_Collections_TerminalCollection_1_Values
  name: Values
  nameWithType: TerminalCollection<T>.Values
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.Values
  nameWithType.vb: TerminalCollection(Of T).Values
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).Values
- uid: System.Collections.Generic.IEnumerable{CalcExpr.Expressions.Terminals.Terminal}
  commentId: T:System.Collections.Generic.IEnumerable{CalcExpr.Expressions.Terminals.Terminal}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Terminal>
  nameWithType: IEnumerable<Terminal>
  fullName: System.Collections.Generic.IEnumerable<CalcExpr.Expressions.Terminals.Terminal>
  nameWithType.vb: IEnumerable(Of Terminal)
  fullName.vb: System.Collections.Generic.IEnumerable(Of CalcExpr.Expressions.Terminals.Terminal)
  name.vb: IEnumerable(Of Terminal)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: CalcExpr.Expressions.Terminals.Terminal
    name: Terminal
    href: CalcExpr.Expressions.Terminals.Terminal.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: CalcExpr.Expressions.Terminals.Terminal
    name: Terminal
    href: CalcExpr.Expressions.Terminals.Terminal.html
  - name: )
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.PrefixOperate*
  commentId: Overload:CalcExpr.Expressions.Collections.TerminalCollection`1.PrefixOperate
  href: CalcExpr.Expressions.Collections.TerminalCollection-1.html#CalcExpr_Expressions_Collections_TerminalCollection_1_PrefixOperate_System_String_CalcExpr_Context_ExpressionContext_
  name: PrefixOperate
  nameWithType: TerminalCollection<T>.PrefixOperate
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.PrefixOperate
  nameWithType.vb: TerminalCollection(Of T).PrefixOperate
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).PrefixOperate
- uid: CalcExpr.Expressions.Interfaces.IPrefixOperable.PrefixOperate(System.String,CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Interfaces.IPrefixOperable.PrefixOperate(System.String,CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Interfaces.IPrefixOperable
  isExternal: true
  href: CalcExpr.Expressions.Interfaces.IPrefixOperable.html#CalcExpr_Expressions_Interfaces_IPrefixOperable_PrefixOperate_System_String_CalcExpr_Context_ExpressionContext_
  name: PrefixOperate(string, ExpressionContext)
  nameWithType: IPrefixOperable.PrefixOperate(string, ExpressionContext)
  fullName: CalcExpr.Expressions.Interfaces.IPrefixOperable.PrefixOperate(string, CalcExpr.Context.ExpressionContext)
  nameWithType.vb: IPrefixOperable.PrefixOperate(String, ExpressionContext)
  fullName.vb: CalcExpr.Expressions.Interfaces.IPrefixOperable.PrefixOperate(String, CalcExpr.Context.ExpressionContext)
  name.vb: PrefixOperate(String, ExpressionContext)
  spec.csharp:
  - uid: CalcExpr.Expressions.Interfaces.IPrefixOperable.PrefixOperate(System.String,CalcExpr.Context.ExpressionContext)
    name: PrefixOperate
    href: CalcExpr.Expressions.Interfaces.IPrefixOperable.html#CalcExpr_Expressions_Interfaces_IPrefixOperable_PrefixOperate_System_String_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Interfaces.IPrefixOperable.PrefixOperate(System.String,CalcExpr.Context.ExpressionContext)
    name: PrefixOperate
    href: CalcExpr.Expressions.Interfaces.IPrefixOperable.html#CalcExpr_Expressions_Interfaces_IPrefixOperable_PrefixOperate_System_String_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: CalcExpr.Context.ExpressionContext
  commentId: T:CalcExpr.Context.ExpressionContext
  parent: CalcExpr.Context
  href: CalcExpr.Context.ExpressionContext.html
  name: ExpressionContext
  nameWithType: ExpressionContext
  fullName: CalcExpr.Context.ExpressionContext
- uid: CalcExpr.Context
  commentId: N:CalcExpr.Context
  href: CalcExpr.html
  name: CalcExpr.Context
  nameWithType: CalcExpr.Context
  fullName: CalcExpr.Context
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Context
    name: Context
    href: CalcExpr.Context.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Context
    name: Context
    href: CalcExpr.Context.html
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.PostfixOperate*
  commentId: Overload:CalcExpr.Expressions.Collections.TerminalCollection`1.PostfixOperate
  href: CalcExpr.Expressions.Collections.TerminalCollection-1.html#CalcExpr_Expressions_Collections_TerminalCollection_1_PostfixOperate_System_String_CalcExpr_Context_ExpressionContext_
  name: PostfixOperate
  nameWithType: TerminalCollection<T>.PostfixOperate
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.PostfixOperate
  nameWithType.vb: TerminalCollection(Of T).PostfixOperate
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).PostfixOperate
- uid: CalcExpr.Expressions.Interfaces.IPostfixOperable.PostfixOperate(System.String,CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Interfaces.IPostfixOperable.PostfixOperate(System.String,CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Interfaces.IPostfixOperable
  isExternal: true
  href: CalcExpr.Expressions.Interfaces.IPostfixOperable.html#CalcExpr_Expressions_Interfaces_IPostfixOperable_PostfixOperate_System_String_CalcExpr_Context_ExpressionContext_
  name: PostfixOperate(string, ExpressionContext)
  nameWithType: IPostfixOperable.PostfixOperate(string, ExpressionContext)
  fullName: CalcExpr.Expressions.Interfaces.IPostfixOperable.PostfixOperate(string, CalcExpr.Context.ExpressionContext)
  nameWithType.vb: IPostfixOperable.PostfixOperate(String, ExpressionContext)
  fullName.vb: CalcExpr.Expressions.Interfaces.IPostfixOperable.PostfixOperate(String, CalcExpr.Context.ExpressionContext)
  name.vb: PostfixOperate(String, ExpressionContext)
  spec.csharp:
  - uid: CalcExpr.Expressions.Interfaces.IPostfixOperable.PostfixOperate(System.String,CalcExpr.Context.ExpressionContext)
    name: PostfixOperate
    href: CalcExpr.Expressions.Interfaces.IPostfixOperable.html#CalcExpr_Expressions_Interfaces_IPostfixOperable_PostfixOperate_System_String_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Interfaces.IPostfixOperable.PostfixOperate(System.String,CalcExpr.Context.ExpressionContext)
    name: PostfixOperate
    href: CalcExpr.Expressions.Interfaces.IPostfixOperable.html#CalcExpr_Expressions_Interfaces_IPostfixOperable_PostfixOperate_System_String_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.BinaryLeftOperate*
  commentId: Overload:CalcExpr.Expressions.Collections.TerminalCollection`1.BinaryLeftOperate
  href: CalcExpr.Expressions.Collections.TerminalCollection-1.html#CalcExpr_Expressions_Collections_TerminalCollection_1_BinaryLeftOperate_System_String_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  name: BinaryLeftOperate
  nameWithType: TerminalCollection<T>.BinaryLeftOperate
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.BinaryLeftOperate
  nameWithType.vb: TerminalCollection(Of T).BinaryLeftOperate
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).BinaryLeftOperate
- uid: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Interfaces.IBinaryOperable
  isExternal: true
  href: CalcExpr.Expressions.Interfaces.IBinaryOperable.html#CalcExpr_Expressions_Interfaces_IBinaryOperable_BinaryLeftOperate_System_String_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  name: BinaryLeftOperate(string, IExpression, ExpressionContext)
  nameWithType: IBinaryOperable.BinaryLeftOperate(string, IExpression, ExpressionContext)
  fullName: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryLeftOperate(string, CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  nameWithType.vb: IBinaryOperable.BinaryLeftOperate(String, IExpression, ExpressionContext)
  fullName.vb: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryLeftOperate(String, CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  name.vb: BinaryLeftOperate(String, IExpression, ExpressionContext)
  spec.csharp:
  - uid: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
    name: BinaryLeftOperate
    href: CalcExpr.Expressions.Interfaces.IBinaryOperable.html#CalcExpr_Expressions_Interfaces_IBinaryOperable_BinaryLeftOperate_System_String_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
    name: BinaryLeftOperate
    href: CalcExpr.Expressions.Interfaces.IBinaryOperable.html#CalcExpr_Expressions_Interfaces_IBinaryOperable_BinaryLeftOperate_System_String_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.BinaryRightOperate*
  commentId: Overload:CalcExpr.Expressions.Collections.TerminalCollection`1.BinaryRightOperate
  href: CalcExpr.Expressions.Collections.TerminalCollection-1.html#CalcExpr_Expressions_Collections_TerminalCollection_1_BinaryRightOperate_System_String_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  name: BinaryRightOperate
  nameWithType: TerminalCollection<T>.BinaryRightOperate
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.BinaryRightOperate
  nameWithType.vb: TerminalCollection(Of T).BinaryRightOperate
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).BinaryRightOperate
- uid: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Interfaces.IBinaryOperable
  isExternal: true
  href: CalcExpr.Expressions.Interfaces.IBinaryOperable.html#CalcExpr_Expressions_Interfaces_IBinaryOperable_BinaryRightOperate_System_String_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  name: BinaryRightOperate(string, IExpression, ExpressionContext)
  nameWithType: IBinaryOperable.BinaryRightOperate(string, IExpression, ExpressionContext)
  fullName: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryRightOperate(string, CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  nameWithType.vb: IBinaryOperable.BinaryRightOperate(String, IExpression, ExpressionContext)
  fullName.vb: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryRightOperate(String, CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  name.vb: BinaryRightOperate(String, IExpression, ExpressionContext)
  spec.csharp:
  - uid: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
    name: BinaryRightOperate
    href: CalcExpr.Expressions.Interfaces.IBinaryOperable.html#CalcExpr_Expressions_Interfaces_IBinaryOperable_BinaryRightOperate_System_String_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
    name: BinaryRightOperate
    href: CalcExpr.Expressions.Interfaces.IBinaryOperable.html#CalcExpr_Expressions_Interfaces_IBinaryOperable_BinaryRightOperate_System_String_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.ConvertIEnumerable*
  commentId: Overload:CalcExpr.Expressions.Collections.TerminalCollection`1.ConvertIEnumerable
  href: CalcExpr.Expressions.Collections.TerminalCollection-1.html#CalcExpr_Expressions_Collections_TerminalCollection_1_ConvertIEnumerable_System_Collections_Generic_IEnumerable_CalcExpr_Expressions_IExpression__
  name: ConvertIEnumerable
  nameWithType: TerminalCollection<T>.ConvertIEnumerable
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.ConvertIEnumerable
  nameWithType.vb: TerminalCollection(Of T).ConvertIEnumerable
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).ConvertIEnumerable
- uid: CalcExpr.Expressions.Collections.IEnumerableExpression.ConvertIEnumerable(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression})
  commentId: M:CalcExpr.Expressions.Collections.IEnumerableExpression.ConvertIEnumerable(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression})
  parent: CalcExpr.Expressions.Collections.IEnumerableExpression
  isExternal: true
  href: CalcExpr.Expressions.Collections.IEnumerableExpression.html#CalcExpr_Expressions_Collections_IEnumerableExpression_ConvertIEnumerable_System_Collections_Generic_IEnumerable_CalcExpr_Expressions_IExpression__
  name: ConvertIEnumerable(IEnumerable<IExpression>)
  nameWithType: IEnumerableExpression.ConvertIEnumerable(IEnumerable<IExpression>)
  fullName: CalcExpr.Expressions.Collections.IEnumerableExpression.ConvertIEnumerable(System.Collections.Generic.IEnumerable<CalcExpr.Expressions.IExpression>)
  nameWithType.vb: IEnumerableExpression.ConvertIEnumerable(IEnumerable(Of IExpression))
  fullName.vb: CalcExpr.Expressions.Collections.IEnumerableExpression.ConvertIEnumerable(System.Collections.Generic.IEnumerable(Of CalcExpr.Expressions.IExpression))
  name.vb: ConvertIEnumerable(IEnumerable(Of IExpression))
  spec.csharp:
  - uid: CalcExpr.Expressions.Collections.IEnumerableExpression.ConvertIEnumerable(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression})
    name: ConvertIEnumerable
    href: CalcExpr.Expressions.Collections.IEnumerableExpression.html#CalcExpr_Expressions_Collections_IEnumerableExpression_ConvertIEnumerable_System_Collections_Generic_IEnumerable_CalcExpr_Expressions_IExpression__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Collections.IEnumerableExpression.ConvertIEnumerable(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression})
    name: ConvertIEnumerable
    href: CalcExpr.Expressions.Collections.IEnumerableExpression.html#CalcExpr_Expressions_Collections_IEnumerableExpression_ConvertIEnumerable_System_Collections_Generic_IEnumerable_CalcExpr_Expressions_IExpression__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: )
  - name: )
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.Map*
  commentId: Overload:CalcExpr.Expressions.Collections.TerminalCollection`1.Map
  href: CalcExpr.Expressions.Collections.TerminalCollection-1.html#CalcExpr_Expressions_Collections_TerminalCollection_1_Map_System_Func_CalcExpr_Expressions_IExpression_CalcExpr_Expressions_IExpression__
  name: Map
  nameWithType: TerminalCollection<T>.Map
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.Map
  nameWithType.vb: TerminalCollection(Of T).Map
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).Map
- uid: CalcExpr.Expressions.Collections.IEnumerableExpression.Map(System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  commentId: M:CalcExpr.Expressions.Collections.IEnumerableExpression.Map(System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  parent: CalcExpr.Expressions.Collections.IEnumerableExpression
  isExternal: true
  href: CalcExpr.Expressions.Collections.IEnumerableExpression.html#CalcExpr_Expressions_Collections_IEnumerableExpression_Map_System_Func_CalcExpr_Expressions_IExpression_CalcExpr_Expressions_IExpression__
  name: Map(Func<IExpression, IExpression>)
  nameWithType: IEnumerableExpression.Map(Func<IExpression, IExpression>)
  fullName: CalcExpr.Expressions.Collections.IEnumerableExpression.Map(System.Func<CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression>)
  nameWithType.vb: IEnumerableExpression.Map(Func(Of IExpression, IExpression))
  fullName.vb: CalcExpr.Expressions.Collections.IEnumerableExpression.Map(System.Func(Of CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression))
  name.vb: Map(Func(Of IExpression, IExpression))
  spec.csharp:
  - uid: CalcExpr.Expressions.Collections.IEnumerableExpression.Map(System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
    name: Map
    href: CalcExpr.Expressions.Collections.IEnumerableExpression.html#CalcExpr_Expressions_Collections_IEnumerableExpression_Map_System_Func_CalcExpr_Expressions_IExpression_CalcExpr_Expressions_IExpression__
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Collections.IEnumerableExpression.Map(System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
    name: Map
    href: CalcExpr.Expressions.Collections.IEnumerableExpression.html#CalcExpr_Expressions_Collections_IEnumerableExpression_Map_System_Func_CalcExpr_Expressions_IExpression_CalcExpr_Expressions_IExpression__
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: )
  - name: )
- uid: System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression}
  commentId: T:System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<IExpression, IExpression>
  nameWithType: Func<IExpression, IExpression>
  fullName: System.Func<CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression>
  nameWithType.vb: Func(Of IExpression, IExpression)
  fullName.vb: System.Func(Of CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression)
  name.vb: Func(Of IExpression, IExpression)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.Combine*
  commentId: Overload:CalcExpr.Expressions.Collections.TerminalCollection`1.Combine
  href: CalcExpr.Expressions.Collections.TerminalCollection-1.html#CalcExpr_Expressions_Collections_TerminalCollection_1_Combine_System_Collections_Generic_IEnumerable_CalcExpr_Expressions_IExpression__System_Func_CalcExpr_Expressions_IExpression_CalcExpr_Expressions_IExpression_CalcExpr_Expressions_IExpression__
  name: Combine
  nameWithType: TerminalCollection<T>.Combine
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.Combine
  nameWithType.vb: TerminalCollection(Of T).Combine
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).Combine
- uid: CalcExpr.Expressions.Collections.IEnumerableExpression.Combine(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression},System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  commentId: M:CalcExpr.Expressions.Collections.IEnumerableExpression.Combine(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression},System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  parent: CalcExpr.Expressions.Collections.IEnumerableExpression
  isExternal: true
  href: CalcExpr.Expressions.Collections.IEnumerableExpression.html#CalcExpr_Expressions_Collections_IEnumerableExpression_Combine_System_Collections_Generic_IEnumerable_CalcExpr_Expressions_IExpression__System_Func_CalcExpr_Expressions_IExpression_CalcExpr_Expressions_IExpression_CalcExpr_Expressions_IExpression__
  name: Combine(IEnumerable<IExpression>, Func<IExpression, IExpression, IExpression>)
  nameWithType: IEnumerableExpression.Combine(IEnumerable<IExpression>, Func<IExpression, IExpression, IExpression>)
  fullName: CalcExpr.Expressions.Collections.IEnumerableExpression.Combine(System.Collections.Generic.IEnumerable<CalcExpr.Expressions.IExpression>, System.Func<CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression>)
  nameWithType.vb: IEnumerableExpression.Combine(IEnumerable(Of IExpression), Func(Of IExpression, IExpression, IExpression))
  fullName.vb: CalcExpr.Expressions.Collections.IEnumerableExpression.Combine(System.Collections.Generic.IEnumerable(Of CalcExpr.Expressions.IExpression), System.Func(Of CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression))
  name.vb: Combine(IEnumerable(Of IExpression), Func(Of IExpression, IExpression, IExpression))
  spec.csharp:
  - uid: CalcExpr.Expressions.Collections.IEnumerableExpression.Combine(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression},System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
    name: Combine
    href: CalcExpr.Expressions.Collections.IEnumerableExpression.html#CalcExpr_Expressions_Collections_IEnumerableExpression_Combine_System_Collections_Generic_IEnumerable_CalcExpr_Expressions_IExpression__System_Func_CalcExpr_Expressions_IExpression_CalcExpr_Expressions_IExpression_CalcExpr_Expressions_IExpression__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Collections.IEnumerableExpression.Combine(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression},System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
    name: Combine
    href: CalcExpr.Expressions.Collections.IEnumerableExpression.html#CalcExpr_Expressions_Collections_IEnumerableExpression_Combine_System_Collections_Generic_IEnumerable_CalcExpr_Expressions_IExpression__System_Func_CalcExpr_Expressions_IExpression_CalcExpr_Expressions_IExpression_CalcExpr_Expressions_IExpression__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: )
  - name: )
- uid: System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression}
  commentId: T:System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<IExpression, IExpression, IExpression>
  nameWithType: Func<IExpression, IExpression, IExpression>
  fullName: System.Func<CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression>
  nameWithType.vb: Func(Of IExpression, IExpression, IExpression)
  fullName.vb: System.Func(Of CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression)
  name.vb: Func(Of IExpression, IExpression, IExpression)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.Equals*
  commentId: Overload:CalcExpr.Expressions.Collections.TerminalCollection`1.Equals
  href: CalcExpr.Expressions.Collections.TerminalCollection-1.html#CalcExpr_Expressions_Collections_TerminalCollection_1_Equals_System_Object_
  name: Equals
  nameWithType: TerminalCollection<T>.Equals
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.Equals
  nameWithType.vb: TerminalCollection(Of T).Equals
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.GetHashCode*
  commentId: Overload:CalcExpr.Expressions.Collections.TerminalCollection`1.GetHashCode
  href: CalcExpr.Expressions.Collections.TerminalCollection-1.html#CalcExpr_Expressions_Collections_TerminalCollection_1_GetHashCode
  name: GetHashCode
  nameWithType: TerminalCollection<T>.GetHashCode
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.GetHashCode
  nameWithType.vb: TerminalCollection(Of T).GetHashCode
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: CalcExpr.Expressions.Terminals.Terminal.ToString(System.String)
  commentId: M:CalcExpr.Expressions.Terminals.Terminal.ToString(System.String)
  parent: CalcExpr.Expressions.Terminals.Terminal
  isExternal: true
  href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_ToString_System_String_
  name: ToString(string)
  nameWithType: Terminal.ToString(string)
  fullName: CalcExpr.Expressions.Terminals.Terminal.ToString(string)
  nameWithType.vb: Terminal.ToString(String)
  fullName.vb: CalcExpr.Expressions.Terminals.Terminal.ToString(String)
  name.vb: ToString(String)
  spec.csharp:
  - uid: CalcExpr.Expressions.Terminals.Terminal.ToString(System.String)
    name: ToString
    href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_ToString_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Terminals.Terminal.ToString(System.String)
    name: ToString
    href: CalcExpr.Expressions.Terminals.Terminal.html#CalcExpr_Expressions_Terminals_Terminal_ToString_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.ToString*
  commentId: Overload:CalcExpr.Expressions.Collections.TerminalCollection`1.ToString
  href: CalcExpr.Expressions.Collections.TerminalCollection-1.html#CalcExpr_Expressions_Collections_TerminalCollection_1_ToString_System_String_
  name: ToString
  nameWithType: TerminalCollection<T>.ToString
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.ToString
  nameWithType.vb: TerminalCollection(Of T).ToString
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).ToString
- uid: CalcExpr.Expressions.IExpression.ToString(System.String)
  commentId: M:CalcExpr.Expressions.IExpression.ToString(System.String)
  parent: CalcExpr.Expressions.IExpression
  isExternal: true
  href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_ToString_System_String_
  name: ToString(string)
  nameWithType: IExpression.ToString(string)
  fullName: CalcExpr.Expressions.IExpression.ToString(string)
  nameWithType.vb: IExpression.ToString(String)
  fullName.vb: CalcExpr.Expressions.IExpression.ToString(String)
  name.vb: ToString(String)
  spec.csharp:
  - uid: CalcExpr.Expressions.IExpression.ToString(System.String)
    name: ToString
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_ToString_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.IExpression.ToString(System.String)
    name: ToString
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_ToString_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: CalcExpr.Expressions.Collections.TerminalCollection`1.GetEnumerator*
  commentId: Overload:CalcExpr.Expressions.Collections.TerminalCollection`1.GetEnumerator
  href: CalcExpr.Expressions.Collections.TerminalCollection-1.html#CalcExpr_Expressions_Collections_TerminalCollection_1_GetEnumerator
  name: GetEnumerator
  nameWithType: TerminalCollection<T>.GetEnumerator
  fullName: CalcExpr.Expressions.Collections.TerminalCollection<T>.GetEnumerator
  nameWithType.vb: TerminalCollection(Of T).GetEnumerator
  fullName.vb: CalcExpr.Expressions.Collections.TerminalCollection(Of T).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<IExpression>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<CalcExpr.Expressions.IExpression>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of IExpression).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of CalcExpr.Expressions.IExpression).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{CalcExpr.Expressions.IExpression}
  commentId: T:System.Collections.Generic.IEnumerator{CalcExpr.Expressions.IExpression}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<IExpression>
  nameWithType: IEnumerator<IExpression>
  fullName: System.Collections.Generic.IEnumerator<CalcExpr.Expressions.IExpression>
  nameWithType.vb: IEnumerator(Of IExpression)
  fullName.vb: System.Collections.Generic.IEnumerator(Of CalcExpr.Expressions.IExpression)
  name.vb: IEnumerator(Of IExpression)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
