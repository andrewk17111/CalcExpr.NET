### YamlMime:ManagedReference
items:
- uid: CalcExpr.Expressions.Indexer
  commentId: T:CalcExpr.Expressions.Indexer
  id: Indexer
  parent: CalcExpr.Expressions
  children:
  - CalcExpr.Expressions.Indexer.#ctor(CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression)
  - CalcExpr.Expressions.Indexer.Collection
  - CalcExpr.Expressions.Indexer.Equals(System.Object)
  - CalcExpr.Expressions.Indexer.Evaluate
  - CalcExpr.Expressions.Indexer.Evaluate(CalcExpr.Context.ExpressionContext)
  - CalcExpr.Expressions.Indexer.GetHashCode
  - CalcExpr.Expressions.Indexer.Index
  - CalcExpr.Expressions.Indexer.StepEvaluate
  - CalcExpr.Expressions.Indexer.StepEvaluate(CalcExpr.Context.ExpressionContext)
  - CalcExpr.Expressions.Indexer.ToString
  - CalcExpr.Expressions.Indexer.ToString(System.String)
  langs:
  - csharp
  - vb
  name: Indexer
  nameWithType: Indexer
  fullName: CalcExpr.Expressions.Indexer
  type: Class
  source:
    remote:
      path: src/CalcExpr/Expressions/Indexer.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Indexer
    path: ../src/CalcExpr/Expressions/Indexer.cs
    startLine: 8
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions
  syntax:
    content: 'public class Indexer : IExpression'
    content.vb: Public Class Indexer Implements IExpression
  inheritance:
  - System.Object
  implements:
  - CalcExpr.Expressions.IExpression
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: CalcExpr.Expressions.Indexer.#ctor(CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression)
  commentId: M:CalcExpr.Expressions.Indexer.#ctor(CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression)
  id: '#ctor(CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression)'
  parent: CalcExpr.Expressions.Indexer
  langs:
  - csharp
  - vb
  name: Indexer(IExpression, IExpression)
  nameWithType: Indexer.Indexer(IExpression, IExpression)
  fullName: CalcExpr.Expressions.Indexer.Indexer(CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression)
  type: Constructor
  source:
    remote:
      path: src/CalcExpr/Expressions/Indexer.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: .ctor
    path: ../src/CalcExpr/Expressions/Indexer.cs
    startLine: 8
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions
  syntax:
    content: public Indexer(IExpression collection, IExpression index)
    parameters:
    - id: collection
      type: CalcExpr.Expressions.IExpression
    - id: index
      type: CalcExpr.Expressions.IExpression
    content.vb: Public Sub New(collection As IExpression, index As IExpression)
  overload: CalcExpr.Expressions.Indexer.#ctor*
  nameWithType.vb: Indexer.New(IExpression, IExpression)
  fullName.vb: CalcExpr.Expressions.Indexer.New(CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression)
  name.vb: New(IExpression, IExpression)
- uid: CalcExpr.Expressions.Indexer.Collection
  commentId: P:CalcExpr.Expressions.Indexer.Collection
  id: Collection
  parent: CalcExpr.Expressions.Indexer
  langs:
  - csharp
  - vb
  name: Collection
  nameWithType: Indexer.Collection
  fullName: CalcExpr.Expressions.Indexer.Collection
  type: Property
  source:
    remote:
      path: src/CalcExpr/Expressions/Indexer.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Collection
    path: ../src/CalcExpr/Expressions/Indexer.cs
    startLine: 10
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions
  syntax:
    content: public IExpression Collection { get; }
    parameters: []
    return:
      type: CalcExpr.Expressions.IExpression
    content.vb: Public ReadOnly Property Collection As IExpression
  overload: CalcExpr.Expressions.Indexer.Collection*
- uid: CalcExpr.Expressions.Indexer.Index
  commentId: P:CalcExpr.Expressions.Indexer.Index
  id: Index
  parent: CalcExpr.Expressions.Indexer
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: Indexer.Index
  fullName: CalcExpr.Expressions.Indexer.Index
  type: Property
  source:
    remote:
      path: src/CalcExpr/Expressions/Indexer.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Index
    path: ../src/CalcExpr/Expressions/Indexer.cs
    startLine: 12
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions
  syntax:
    content: public IExpression Index { get; }
    parameters: []
    return:
      type: CalcExpr.Expressions.IExpression
    content.vb: Public ReadOnly Property Index As IExpression
  overload: CalcExpr.Expressions.Indexer.Index*
- uid: CalcExpr.Expressions.Indexer.Evaluate
  commentId: M:CalcExpr.Expressions.Indexer.Evaluate
  id: Evaluate
  parent: CalcExpr.Expressions.Indexer
  langs:
  - csharp
  - vb
  name: Evaluate()
  nameWithType: Indexer.Evaluate()
  fullName: CalcExpr.Expressions.Indexer.Evaluate()
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Indexer.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Evaluate
    path: ../src/CalcExpr/Expressions/Indexer.cs
    startLine: 14
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions
  summary: Evaluates and calculates the value of the <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Terminal Evaluate()
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
      description: A new <xref href="CalcExpr.Expressions.Terminals.Terminal" data-throw-if-not-resolved="false"></xref> containing the value of the current <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Evaluate() As Terminal
  overload: CalcExpr.Expressions.Indexer.Evaluate*
  implements:
  - CalcExpr.Expressions.IExpression.Evaluate
- uid: CalcExpr.Expressions.Indexer.Evaluate(CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Indexer.Evaluate(CalcExpr.Context.ExpressionContext)
  id: Evaluate(CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Indexer
  langs:
  - csharp
  - vb
  name: Evaluate(ExpressionContext)
  nameWithType: Indexer.Evaluate(ExpressionContext)
  fullName: CalcExpr.Expressions.Indexer.Evaluate(CalcExpr.Context.ExpressionContext)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Indexer.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Evaluate
    path: ../src/CalcExpr/Expressions/Indexer.cs
    startLine: 17
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions
  summary: Evaluates and calculates the value of the <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Terminal Evaluate(ExpressionContext context)
    parameters:
    - id: context
      type: CalcExpr.Context.ExpressionContext
      description: The values for each variable that could appear in the <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
      description: A new <xref href="CalcExpr.Expressions.Terminals.Terminal" data-throw-if-not-resolved="false"></xref> containing the value of the current <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Evaluate(context As ExpressionContext) As Terminal
  overload: CalcExpr.Expressions.Indexer.Evaluate*
  implements:
  - CalcExpr.Expressions.IExpression.Evaluate(CalcExpr.Context.ExpressionContext)
- uid: CalcExpr.Expressions.Indexer.StepEvaluate
  commentId: M:CalcExpr.Expressions.Indexer.StepEvaluate
  id: StepEvaluate
  parent: CalcExpr.Expressions.Indexer
  langs:
  - csharp
  - vb
  name: StepEvaluate()
  nameWithType: Indexer.StepEvaluate()
  fullName: CalcExpr.Expressions.Indexer.StepEvaluate()
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Indexer.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: StepEvaluate
    path: ../src/CalcExpr/Expressions/Indexer.cs
    startLine: 33
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions
  summary: Evaluates and calculates one step towards the value of the <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public IExpression StepEvaluate()
    return:
      type: CalcExpr.Expressions.IExpression
      description: >-
        A new <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref> containing the partially evaluated value of the current 

        <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function StepEvaluate() As IExpression
  overload: CalcExpr.Expressions.Indexer.StepEvaluate*
  implements:
  - CalcExpr.Expressions.IExpression.StepEvaluate
- uid: CalcExpr.Expressions.Indexer.StepEvaluate(CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Indexer.StepEvaluate(CalcExpr.Context.ExpressionContext)
  id: StepEvaluate(CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Indexer
  langs:
  - csharp
  - vb
  name: StepEvaluate(ExpressionContext)
  nameWithType: Indexer.StepEvaluate(ExpressionContext)
  fullName: CalcExpr.Expressions.Indexer.StepEvaluate(CalcExpr.Context.ExpressionContext)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Indexer.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: StepEvaluate
    path: ../src/CalcExpr/Expressions/Indexer.cs
    startLine: 36
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions
  summary: Evaluates and calculates one step towards the value of the <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public IExpression StepEvaluate(ExpressionContext context)
    parameters:
    - id: context
      type: CalcExpr.Context.ExpressionContext
      description: The values for each variable that could appear in the <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
    return:
      type: CalcExpr.Expressions.IExpression
      description: >-
        A new <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref> containing the partially evaluated value of the current 

        <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function StepEvaluate(context As ExpressionContext) As IExpression
  overload: CalcExpr.Expressions.Indexer.StepEvaluate*
  implements:
  - CalcExpr.Expressions.IExpression.StepEvaluate(CalcExpr.Context.ExpressionContext)
- uid: CalcExpr.Expressions.Indexer.Equals(System.Object)
  commentId: M:CalcExpr.Expressions.Indexer.Equals(System.Object)
  id: Equals(System.Object)
  parent: CalcExpr.Expressions.Indexer
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: Indexer.Equals(object?)
  fullName: CalcExpr.Expressions.Indexer.Equals(object?)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Indexer.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Equals
    path: ../src/CalcExpr/Expressions/Indexer.cs
    startLine: 54
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: CalcExpr.Expressions.Indexer.Equals*
  nameWithType.vb: Indexer.Equals(Object)
  fullName.vb: CalcExpr.Expressions.Indexer.Equals(Object)
  name.vb: Equals(Object)
- uid: CalcExpr.Expressions.Indexer.GetHashCode
  commentId: M:CalcExpr.Expressions.Indexer.GetHashCode
  id: GetHashCode
  parent: CalcExpr.Expressions.Indexer
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Indexer.GetHashCode()
  fullName: CalcExpr.Expressions.Indexer.GetHashCode()
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Indexer.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: GetHashCode
    path: ../src/CalcExpr/Expressions/Indexer.cs
    startLine: 57
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: CalcExpr.Expressions.Indexer.GetHashCode*
- uid: CalcExpr.Expressions.Indexer.ToString
  commentId: M:CalcExpr.Expressions.Indexer.ToString
  id: ToString
  parent: CalcExpr.Expressions.Indexer
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Indexer.ToString()
  fullName: CalcExpr.Expressions.Indexer.ToString()
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Indexer.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: ToString
    path: ../src/CalcExpr/Expressions/Indexer.cs
    startLine: 60
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: CalcExpr.Expressions.Indexer.ToString*
  implements:
  - CalcExpr.Expressions.IExpression.ToString
- uid: CalcExpr.Expressions.Indexer.ToString(System.String)
  commentId: M:CalcExpr.Expressions.Indexer.ToString(System.String)
  id: ToString(System.String)
  parent: CalcExpr.Expressions.Indexer
  langs:
  - csharp
  - vb
  name: ToString(string?)
  nameWithType: Indexer.ToString(string?)
  fullName: CalcExpr.Expressions.Indexer.ToString(string?)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Indexer.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: ToString
    path: ../src/CalcExpr/Expressions/Indexer.cs
    startLine: 63
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions
  summary: >-
    Returns a <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref> using the specified 

    format <xref href="System.String" data-throw-if-not-resolved="false"></xref> for number formats.
  example: []
  syntax:
    content: public string ToString(string? format)
    parameters:
    - id: format
      type: System.String
      description: ''
    return:
      type: System.String
      description: >-
        A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref> using the specified format 

        <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function ToString(format As String) As String
  overload: CalcExpr.Expressions.Indexer.ToString*
  implements:
  - CalcExpr.Expressions.IExpression.ToString(System.String)
  nameWithType.vb: Indexer.ToString(String)
  fullName.vb: CalcExpr.Expressions.Indexer.ToString(String)
  name.vb: ToString(String)
references:
- uid: CalcExpr.Expressions
  commentId: N:CalcExpr.Expressions
  href: CalcExpr.html
  name: CalcExpr.Expressions
  nameWithType: CalcExpr.Expressions
  fullName: CalcExpr.Expressions
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: CalcExpr.Expressions.IExpression
  commentId: T:CalcExpr.Expressions.IExpression
  parent: CalcExpr.Expressions
  href: CalcExpr.Expressions.IExpression.html
  name: IExpression
  nameWithType: IExpression
  fullName: CalcExpr.Expressions.IExpression
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CalcExpr.Expressions.Indexer.#ctor*
  commentId: Overload:CalcExpr.Expressions.Indexer.#ctor
  href: CalcExpr.Expressions.Indexer.html#CalcExpr_Expressions_Indexer__ctor_CalcExpr_Expressions_IExpression_CalcExpr_Expressions_IExpression_
  name: Indexer
  nameWithType: Indexer.Indexer
  fullName: CalcExpr.Expressions.Indexer.Indexer
  nameWithType.vb: Indexer.New
  fullName.vb: CalcExpr.Expressions.Indexer.New
  name.vb: New
- uid: CalcExpr.Expressions.Indexer.Collection*
  commentId: Overload:CalcExpr.Expressions.Indexer.Collection
  href: CalcExpr.Expressions.Indexer.html#CalcExpr_Expressions_Indexer_Collection
  name: Collection
  nameWithType: Indexer.Collection
  fullName: CalcExpr.Expressions.Indexer.Collection
- uid: CalcExpr.Expressions.Indexer.Index*
  commentId: Overload:CalcExpr.Expressions.Indexer.Index
  href: CalcExpr.Expressions.Indexer.html#CalcExpr_Expressions_Indexer_Index
  name: Index
  nameWithType: Indexer.Index
  fullName: CalcExpr.Expressions.Indexer.Index
- uid: CalcExpr.Expressions.Terminals.Terminal
  commentId: T:CalcExpr.Expressions.Terminals.Terminal
  parent: CalcExpr.Expressions.Terminals
  href: CalcExpr.Expressions.Terminals.Terminal.html
  name: Terminal
  nameWithType: Terminal
  fullName: CalcExpr.Expressions.Terminals.Terminal
- uid: CalcExpr.Expressions.Indexer.Evaluate*
  commentId: Overload:CalcExpr.Expressions.Indexer.Evaluate
  href: CalcExpr.Expressions.Indexer.html#CalcExpr_Expressions_Indexer_Evaluate
  name: Evaluate
  nameWithType: Indexer.Evaluate
  fullName: CalcExpr.Expressions.Indexer.Evaluate
- uid: CalcExpr.Expressions.IExpression.Evaluate
  commentId: M:CalcExpr.Expressions.IExpression.Evaluate
  parent: CalcExpr.Expressions.IExpression
  href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_Evaluate
  name: Evaluate()
  nameWithType: IExpression.Evaluate()
  fullName: CalcExpr.Expressions.IExpression.Evaluate()
  spec.csharp:
  - uid: CalcExpr.Expressions.IExpression.Evaluate
    name: Evaluate
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_Evaluate
  - name: (
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.IExpression.Evaluate
    name: Evaluate
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_Evaluate
  - name: (
  - name: )
- uid: CalcExpr.Expressions.Terminals
  commentId: N:CalcExpr.Expressions.Terminals
  href: CalcExpr.html
  name: CalcExpr.Expressions.Terminals
  nameWithType: CalcExpr.Expressions.Terminals
  fullName: CalcExpr.Expressions.Terminals
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Terminals
    name: Terminals
    href: CalcExpr.Expressions.Terminals.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Terminals
    name: Terminals
    href: CalcExpr.Expressions.Terminals.html
- uid: CalcExpr.Expressions.IExpression.Evaluate(CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.IExpression.Evaluate(CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.IExpression
  href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_Evaluate_CalcExpr_Context_ExpressionContext_
  name: Evaluate(ExpressionContext)
  nameWithType: IExpression.Evaluate(ExpressionContext)
  fullName: CalcExpr.Expressions.IExpression.Evaluate(CalcExpr.Context.ExpressionContext)
  spec.csharp:
  - uid: CalcExpr.Expressions.IExpression.Evaluate(CalcExpr.Context.ExpressionContext)
    name: Evaluate
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_Evaluate_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.IExpression.Evaluate(CalcExpr.Context.ExpressionContext)
    name: Evaluate
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_Evaluate_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
- uid: CalcExpr.Context.ExpressionContext
  commentId: T:CalcExpr.Context.ExpressionContext
  parent: CalcExpr.Context
  href: CalcExpr.Context.ExpressionContext.html
  name: ExpressionContext
  nameWithType: ExpressionContext
  fullName: CalcExpr.Context.ExpressionContext
- uid: CalcExpr.Context
  commentId: N:CalcExpr.Context
  href: CalcExpr.html
  name: CalcExpr.Context
  nameWithType: CalcExpr.Context
  fullName: CalcExpr.Context
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Context
    name: Context
    href: CalcExpr.Context.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Context
    name: Context
    href: CalcExpr.Context.html
- uid: CalcExpr.Expressions.Indexer.StepEvaluate*
  commentId: Overload:CalcExpr.Expressions.Indexer.StepEvaluate
  href: CalcExpr.Expressions.Indexer.html#CalcExpr_Expressions_Indexer_StepEvaluate
  name: StepEvaluate
  nameWithType: Indexer.StepEvaluate
  fullName: CalcExpr.Expressions.Indexer.StepEvaluate
- uid: CalcExpr.Expressions.IExpression.StepEvaluate
  commentId: M:CalcExpr.Expressions.IExpression.StepEvaluate
  parent: CalcExpr.Expressions.IExpression
  href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_StepEvaluate
  name: StepEvaluate()
  nameWithType: IExpression.StepEvaluate()
  fullName: CalcExpr.Expressions.IExpression.StepEvaluate()
  spec.csharp:
  - uid: CalcExpr.Expressions.IExpression.StepEvaluate
    name: StepEvaluate
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_StepEvaluate
  - name: (
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.IExpression.StepEvaluate
    name: StepEvaluate
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_StepEvaluate
  - name: (
  - name: )
- uid: CalcExpr.Expressions.IExpression.StepEvaluate(CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.IExpression.StepEvaluate(CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.IExpression
  href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_StepEvaluate_CalcExpr_Context_ExpressionContext_
  name: StepEvaluate(ExpressionContext)
  nameWithType: IExpression.StepEvaluate(ExpressionContext)
  fullName: CalcExpr.Expressions.IExpression.StepEvaluate(CalcExpr.Context.ExpressionContext)
  spec.csharp:
  - uid: CalcExpr.Expressions.IExpression.StepEvaluate(CalcExpr.Context.ExpressionContext)
    name: StepEvaluate
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_StepEvaluate_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.IExpression.StepEvaluate(CalcExpr.Context.ExpressionContext)
    name: StepEvaluate
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_StepEvaluate_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: CalcExpr.Expressions.Indexer.Equals*
  commentId: Overload:CalcExpr.Expressions.Indexer.Equals
  href: CalcExpr.Expressions.Indexer.html#CalcExpr_Expressions_Indexer_Equals_System_Object_
  name: Equals
  nameWithType: Indexer.Equals
  fullName: CalcExpr.Expressions.Indexer.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: CalcExpr.Expressions.Indexer.GetHashCode*
  commentId: Overload:CalcExpr.Expressions.Indexer.GetHashCode
  href: CalcExpr.Expressions.Indexer.html#CalcExpr_Expressions_Indexer_GetHashCode
  name: GetHashCode
  nameWithType: Indexer.GetHashCode
  fullName: CalcExpr.Expressions.Indexer.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: CalcExpr.Expressions.Indexer.ToString*
  commentId: Overload:CalcExpr.Expressions.Indexer.ToString
  href: CalcExpr.Expressions.Indexer.html#CalcExpr_Expressions_Indexer_ToString
  name: ToString
  nameWithType: Indexer.ToString
  fullName: CalcExpr.Expressions.Indexer.ToString
- uid: CalcExpr.Expressions.IExpression.ToString
  commentId: M:CalcExpr.Expressions.IExpression.ToString
  parent: CalcExpr.Expressions.IExpression
  href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_ToString
  name: ToString()
  nameWithType: IExpression.ToString()
  fullName: CalcExpr.Expressions.IExpression.ToString()
  spec.csharp:
  - uid: CalcExpr.Expressions.IExpression.ToString
    name: ToString
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.IExpression.ToString
    name: ToString
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_ToString
  - name: (
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: CalcExpr.Expressions.IExpression.ToString(System.String)
  commentId: M:CalcExpr.Expressions.IExpression.ToString(System.String)
  parent: CalcExpr.Expressions.IExpression
  isExternal: true
  href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_ToString_System_String_
  name: ToString(string)
  nameWithType: IExpression.ToString(string)
  fullName: CalcExpr.Expressions.IExpression.ToString(string)
  nameWithType.vb: IExpression.ToString(String)
  fullName.vb: CalcExpr.Expressions.IExpression.ToString(String)
  name.vb: ToString(String)
  spec.csharp:
  - uid: CalcExpr.Expressions.IExpression.ToString(System.String)
    name: ToString
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_ToString_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.IExpression.ToString(System.String)
    name: ToString
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_ToString_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
