### YamlMime:ManagedReference
items:
- uid: CalcExpr.Expressions.Collections.Set
  commentId: T:CalcExpr.Expressions.Collections.Set
  id: Set
  parent: CalcExpr.Expressions.Collections
  children:
  - CalcExpr.Expressions.Collections.Set.#ctor
  - CalcExpr.Expressions.Collections.Set.#ctor(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression})
  - CalcExpr.Expressions.Collections.Set.BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  - CalcExpr.Expressions.Collections.Set.BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  - CalcExpr.Expressions.Collections.Set.Combine(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression},System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  - CalcExpr.Expressions.Collections.Set.ConvertIEnumerable(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression})
  - CalcExpr.Expressions.Collections.Set.Count
  - CalcExpr.Expressions.Collections.Set.Equals(System.Object)
  - CalcExpr.Expressions.Collections.Set.Evaluate
  - CalcExpr.Expressions.Collections.Set.Evaluate(CalcExpr.Context.ExpressionContext)
  - CalcExpr.Expressions.Collections.Set.GetEnumerator
  - CalcExpr.Expressions.Collections.Set.GetHashCode
  - CalcExpr.Expressions.Collections.Set.Map(System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  - CalcExpr.Expressions.Collections.Set.StepEvaluate
  - CalcExpr.Expressions.Collections.Set.StepEvaluate(CalcExpr.Context.ExpressionContext)
  - CalcExpr.Expressions.Collections.Set.ToString
  - CalcExpr.Expressions.Collections.Set.ToString(System.String)
  langs:
  - csharp
  - vb
  name: Set
  nameWithType: Set
  fullName: CalcExpr.Expressions.Collections.Set
  type: Class
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/Set.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Set
    path: ../src/CalcExpr/Expressions/Collections/Set.cs
    startLine: 8
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  syntax:
    content: 'public class Set : IEnumerableExpression, IExpression, IEnumerable<IExpression>, IEnumerable, IBinaryOperable'
    content.vb: Public Class [Set] Implements IEnumerableExpression, IExpression, IEnumerable(Of IExpression), IEnumerable, IBinaryOperable
  inheritance:
  - System.Object
  implements:
  - CalcExpr.Expressions.Collections.IEnumerableExpression
  - CalcExpr.Expressions.IExpression
  - System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression}
  - System.Collections.IEnumerable
  - CalcExpr.Expressions.Interfaces.IBinaryOperable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: CalcExpr.Expressions.Collections.Set.#ctor(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression})
  commentId: M:CalcExpr.Expressions.Collections.Set.#ctor(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression})
  id: '#ctor(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression})'
  parent: CalcExpr.Expressions.Collections.Set
  langs:
  - csharp
  - vb
  name: Set(IEnumerable<IExpression>)
  nameWithType: Set.Set(IEnumerable<IExpression>)
  fullName: CalcExpr.Expressions.Collections.Set.Set(System.Collections.Generic.IEnumerable<CalcExpr.Expressions.IExpression>)
  type: Constructor
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/Set.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: .ctor
    path: ../src/CalcExpr/Expressions/Collections/Set.cs
    startLine: 8
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  syntax:
    content: public Set(IEnumerable<IExpression> elements)
    parameters:
    - id: elements
      type: System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression}
    content.vb: Public Sub New(elements As IEnumerable(Of IExpression))
  overload: CalcExpr.Expressions.Collections.Set.#ctor*
  nameWithType.vb: Set.New(IEnumerable(Of IExpression))
  fullName.vb: CalcExpr.Expressions.Collections.Set.New(System.Collections.Generic.IEnumerable(Of CalcExpr.Expressions.IExpression))
  name.vb: New(IEnumerable(Of IExpression))
- uid: CalcExpr.Expressions.Collections.Set.Count
  commentId: P:CalcExpr.Expressions.Collections.Set.Count
  id: Count
  parent: CalcExpr.Expressions.Collections.Set
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: Set.Count
  fullName: CalcExpr.Expressions.Collections.Set.Count
  type: Property
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/Set.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Count
    path: ../src/CalcExpr/Expressions/Collections/Set.cs
    startLine: 27
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: CalcExpr.Expressions.Collections.Set.Count*
- uid: CalcExpr.Expressions.Collections.Set.#ctor
  commentId: M:CalcExpr.Expressions.Collections.Set.#ctor
  id: '#ctor'
  parent: CalcExpr.Expressions.Collections.Set
  langs:
  - csharp
  - vb
  name: Set()
  nameWithType: Set.Set()
  fullName: CalcExpr.Expressions.Collections.Set.Set()
  type: Constructor
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/Set.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: .ctor
    path: ../src/CalcExpr/Expressions/Collections/Set.cs
    startLine: 30
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  syntax:
    content: public Set()
    content.vb: Public Sub New()
  overload: CalcExpr.Expressions.Collections.Set.#ctor*
  nameWithType.vb: Set.New()
  fullName.vb: CalcExpr.Expressions.Collections.Set.New()
  name.vb: New()
- uid: CalcExpr.Expressions.Collections.Set.Evaluate
  commentId: M:CalcExpr.Expressions.Collections.Set.Evaluate
  id: Evaluate
  parent: CalcExpr.Expressions.Collections.Set
  langs:
  - csharp
  - vb
  name: Evaluate()
  nameWithType: Set.Evaluate()
  fullName: CalcExpr.Expressions.Collections.Set.Evaluate()
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/Set.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Evaluate
    path: ../src/CalcExpr/Expressions/Collections/Set.cs
    startLine: 33
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  summary: Evaluates and calculates the value of the <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Terminal Evaluate()
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
      description: A new <xref href="CalcExpr.Expressions.Terminals.Terminal" data-throw-if-not-resolved="false"></xref> containing the value of the current <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Evaluate() As Terminal
  overload: CalcExpr.Expressions.Collections.Set.Evaluate*
  implements:
  - CalcExpr.Expressions.IExpression.Evaluate
- uid: CalcExpr.Expressions.Collections.Set.Evaluate(CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Collections.Set.Evaluate(CalcExpr.Context.ExpressionContext)
  id: Evaluate(CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Collections.Set
  langs:
  - csharp
  - vb
  name: Evaluate(ExpressionContext)
  nameWithType: Set.Evaluate(ExpressionContext)
  fullName: CalcExpr.Expressions.Collections.Set.Evaluate(CalcExpr.Context.ExpressionContext)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/Set.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Evaluate
    path: ../src/CalcExpr/Expressions/Collections/Set.cs
    startLine: 36
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  summary: Evaluates and calculates the value of the <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Terminal Evaluate(ExpressionContext context)
    parameters:
    - id: context
      type: CalcExpr.Context.ExpressionContext
      description: The values for each variable that could appear in the <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
      description: A new <xref href="CalcExpr.Expressions.Terminals.Terminal" data-throw-if-not-resolved="false"></xref> containing the value of the current <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Evaluate(context As ExpressionContext) As Terminal
  overload: CalcExpr.Expressions.Collections.Set.Evaluate*
  implements:
  - CalcExpr.Expressions.IExpression.Evaluate(CalcExpr.Context.ExpressionContext)
- uid: CalcExpr.Expressions.Collections.Set.StepEvaluate
  commentId: M:CalcExpr.Expressions.Collections.Set.StepEvaluate
  id: StepEvaluate
  parent: CalcExpr.Expressions.Collections.Set
  langs:
  - csharp
  - vb
  name: StepEvaluate()
  nameWithType: Set.StepEvaluate()
  fullName: CalcExpr.Expressions.Collections.Set.StepEvaluate()
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/Set.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: StepEvaluate
    path: ../src/CalcExpr/Expressions/Collections/Set.cs
    startLine: 39
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  summary: Evaluates and calculates one step towards the value of the <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public IExpression StepEvaluate()
    return:
      type: CalcExpr.Expressions.IExpression
      description: >-
        A new <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref> containing the partially evaluated value of the current 

        <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function StepEvaluate() As IExpression
  overload: CalcExpr.Expressions.Collections.Set.StepEvaluate*
  implements:
  - CalcExpr.Expressions.IExpression.StepEvaluate
- uid: CalcExpr.Expressions.Collections.Set.StepEvaluate(CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Collections.Set.StepEvaluate(CalcExpr.Context.ExpressionContext)
  id: StepEvaluate(CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Collections.Set
  langs:
  - csharp
  - vb
  name: StepEvaluate(ExpressionContext)
  nameWithType: Set.StepEvaluate(ExpressionContext)
  fullName: CalcExpr.Expressions.Collections.Set.StepEvaluate(CalcExpr.Context.ExpressionContext)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/Set.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: StepEvaluate
    path: ../src/CalcExpr/Expressions/Collections/Set.cs
    startLine: 42
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  summary: Evaluates and calculates one step towards the value of the <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public IExpression StepEvaluate(ExpressionContext context)
    parameters:
    - id: context
      type: CalcExpr.Context.ExpressionContext
      description: The values for each variable that could appear in the <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
    return:
      type: CalcExpr.Expressions.IExpression
      description: >-
        A new <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref> containing the partially evaluated value of the current 

        <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function StepEvaluate(context As ExpressionContext) As IExpression
  overload: CalcExpr.Expressions.Collections.Set.StepEvaluate*
  implements:
  - CalcExpr.Expressions.IExpression.StepEvaluate(CalcExpr.Context.ExpressionContext)
- uid: CalcExpr.Expressions.Collections.Set.BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Collections.Set.BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  id: BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Collections.Set
  langs:
  - csharp
  - vb
  name: BinaryLeftOperate(string, IExpression, ExpressionContext)
  nameWithType: Set.BinaryLeftOperate(string, IExpression, ExpressionContext)
  fullName: CalcExpr.Expressions.Collections.Set.BinaryLeftOperate(string, CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/Set.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: BinaryLeftOperate
    path: ../src/CalcExpr/Expressions/Collections/Set.cs
    startLine: 61
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  example: []
  syntax:
    content: public Terminal? BinaryLeftOperate(string identifier, IExpression right, ExpressionContext _)
    parameters:
    - id: identifier
      type: System.String
    - id: right
      type: CalcExpr.Expressions.IExpression
    - id: _
      type: CalcExpr.Context.ExpressionContext
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
    content.vb: Public Function BinaryLeftOperate(identifier As String, right As IExpression, _ As ExpressionContext) As Terminal
  overload: CalcExpr.Expressions.Collections.Set.BinaryLeftOperate*
  implements:
  - CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  nameWithType.vb: Set.BinaryLeftOperate(String, IExpression, ExpressionContext)
  fullName.vb: CalcExpr.Expressions.Collections.Set.BinaryLeftOperate(String, CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  name.vb: BinaryLeftOperate(String, IExpression, ExpressionContext)
- uid: CalcExpr.Expressions.Collections.Set.BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Collections.Set.BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  id: BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Collections.Set
  langs:
  - csharp
  - vb
  name: BinaryRightOperate(string, IExpression, ExpressionContext)
  nameWithType: Set.BinaryRightOperate(string, IExpression, ExpressionContext)
  fullName: CalcExpr.Expressions.Collections.Set.BinaryRightOperate(string, CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/Set.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: BinaryRightOperate
    path: ../src/CalcExpr/Expressions/Collections/Set.cs
    startLine: 75
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  example: []
  syntax:
    content: public Terminal? BinaryRightOperate(string identifier, IExpression left, ExpressionContext _)
    parameters:
    - id: identifier
      type: System.String
    - id: left
      type: CalcExpr.Expressions.IExpression
    - id: _
      type: CalcExpr.Context.ExpressionContext
    return:
      type: CalcExpr.Expressions.Terminals.Terminal
    content.vb: Public Function BinaryRightOperate(identifier As String, left As IExpression, _ As ExpressionContext) As Terminal
  overload: CalcExpr.Expressions.Collections.Set.BinaryRightOperate*
  implements:
  - CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  nameWithType.vb: Set.BinaryRightOperate(String, IExpression, ExpressionContext)
  fullName.vb: CalcExpr.Expressions.Collections.Set.BinaryRightOperate(String, CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  name.vb: BinaryRightOperate(String, IExpression, ExpressionContext)
- uid: CalcExpr.Expressions.Collections.Set.Map(System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  commentId: M:CalcExpr.Expressions.Collections.Set.Map(System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  id: Map(System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  parent: CalcExpr.Expressions.Collections.Set
  langs:
  - csharp
  - vb
  name: Map(Func<IExpression, IExpression>)
  nameWithType: Set.Map(Func<IExpression, IExpression>)
  fullName: CalcExpr.Expressions.Collections.Set.Map(System.Func<CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression>)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/Set.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Map
    path: ../src/CalcExpr/Expressions/Collections/Set.cs
    startLine: 89
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  summary: >-
    Maps the <xref href="CalcExpr.Expressions.Collections.IEnumerableExpression" data-throw-if-not-resolved="false"></xref> to a new <xref href="CalcExpr.Expressions.Collections.IEnumerableExpression" data-throw-if-not-resolved="false"></xref> using the specified

    map function.
  example: []
  syntax:
    content: public IEnumerableExpression Map(Func<IExpression, IExpression> map)
    parameters:
    - id: map
      type: System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression}
      description: The function to transform each element of the <xref href="CalcExpr.Expressions.Collections.IEnumerableExpression" data-throw-if-not-resolved="false"></xref>.
    return:
      type: CalcExpr.Expressions.Collections.IEnumerableExpression
      description: A new <xref href="CalcExpr.Expressions.Collections.IEnumerableExpression" data-throw-if-not-resolved="false"></xref> with the transformed elements.
    content.vb: Public Function Map(map As Func(Of IExpression, IExpression)) As IEnumerableExpression
  overload: CalcExpr.Expressions.Collections.Set.Map*
  implements:
  - CalcExpr.Expressions.Collections.IEnumerableExpression.Map(System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  nameWithType.vb: Set.Map(Func(Of IExpression, IExpression))
  fullName.vb: CalcExpr.Expressions.Collections.Set.Map(System.Func(Of CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression))
  name.vb: Map(Func(Of IExpression, IExpression))
- uid: CalcExpr.Expressions.Collections.Set.Combine(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression},System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  commentId: M:CalcExpr.Expressions.Collections.Set.Combine(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression},System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  id: Combine(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression},System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  parent: CalcExpr.Expressions.Collections.Set
  langs:
  - csharp
  - vb
  name: Combine(IEnumerable<IExpression>, Func<IExpression, IExpression, IExpression>)
  nameWithType: Set.Combine(IEnumerable<IExpression>, Func<IExpression, IExpression, IExpression>)
  fullName: CalcExpr.Expressions.Collections.Set.Combine(System.Collections.Generic.IEnumerable<CalcExpr.Expressions.IExpression>, System.Func<CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression>)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/Set.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Combine
    path: ../src/CalcExpr/Expressions/Collections/Set.cs
    startLine: 92
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  summary: >-
    Combines the <xref href="CalcExpr.Expressions.Collections.IEnumerableExpression" data-throw-if-not-resolved="false"></xref> with another <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> using the

    specified combine function.
  example: []
  syntax:
    content: public IEnumerableExpression Combine(IEnumerable<IExpression> expressions, Func<IExpression, IExpression, IExpression> combine)
    parameters:
    - id: expressions
      type: System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression}
      description: The other <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> to combine with.
    - id: combine
      type: System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression}
      description: The function to combine the elements of the two <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref>.
    return:
      type: CalcExpr.Expressions.Collections.IEnumerableExpression
      description: <xref href="CalcExpr.Expressions.Collections.IEnumerableExpression" data-throw-if-not-resolved="false"></xref> with the combined elements.
    content.vb: Public Function Combine(expressions As IEnumerable(Of IExpression), combine As Func(Of IExpression, IExpression, IExpression)) As IEnumerableExpression
  overload: CalcExpr.Expressions.Collections.Set.Combine*
  implements:
  - CalcExpr.Expressions.Collections.IEnumerableExpression.Combine(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression},System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  nameWithType.vb: Set.Combine(IEnumerable(Of IExpression), Func(Of IExpression, IExpression, IExpression))
  fullName.vb: CalcExpr.Expressions.Collections.Set.Combine(System.Collections.Generic.IEnumerable(Of CalcExpr.Expressions.IExpression), System.Func(Of CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression))
  name.vb: Combine(IEnumerable(Of IExpression), Func(Of IExpression, IExpression, IExpression))
- uid: CalcExpr.Expressions.Collections.Set.ConvertIEnumerable(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression})
  commentId: M:CalcExpr.Expressions.Collections.Set.ConvertIEnumerable(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression})
  id: ConvertIEnumerable(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression})
  parent: CalcExpr.Expressions.Collections.Set
  langs:
  - csharp
  - vb
  name: ConvertIEnumerable(IEnumerable<IExpression>)
  nameWithType: Set.ConvertIEnumerable(IEnumerable<IExpression>)
  fullName: CalcExpr.Expressions.Collections.Set.ConvertIEnumerable(System.Collections.Generic.IEnumerable<CalcExpr.Expressions.IExpression>)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/Set.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: ConvertIEnumerable
    path: ../src/CalcExpr/Expressions/Collections/Set.cs
    startLine: 104
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  summary: Converts an <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref> to an <xref href="CalcExpr.Expressions.Collections.IEnumerableExpression" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static IEnumerableExpression ConvertIEnumerable(IEnumerable<IExpression> elements)
    parameters:
    - id: elements
      type: System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression}
    return:
      type: CalcExpr.Expressions.Collections.IEnumerableExpression
      description: The new <xref href="CalcExpr.Expressions.Collections.IEnumerableExpression" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function ConvertIEnumerable(elements As IEnumerable(Of IExpression)) As IEnumerableExpression
  overload: CalcExpr.Expressions.Collections.Set.ConvertIEnumerable*
  implements:
  - CalcExpr.Expressions.Collections.IEnumerableExpression.ConvertIEnumerable(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression})
  nameWithType.vb: Set.ConvertIEnumerable(IEnumerable(Of IExpression))
  fullName.vb: CalcExpr.Expressions.Collections.Set.ConvertIEnumerable(System.Collections.Generic.IEnumerable(Of CalcExpr.Expressions.IExpression))
  name.vb: ConvertIEnumerable(IEnumerable(Of IExpression))
- uid: CalcExpr.Expressions.Collections.Set.Equals(System.Object)
  commentId: M:CalcExpr.Expressions.Collections.Set.Equals(System.Object)
  id: Equals(System.Object)
  parent: CalcExpr.Expressions.Collections.Set
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: Set.Equals(object?)
  fullName: CalcExpr.Expressions.Collections.Set.Equals(object?)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/Set.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Equals
    path: ../src/CalcExpr/Expressions/Collections/Set.cs
    startLine: 107
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: CalcExpr.Expressions.Collections.Set.Equals*
  nameWithType.vb: Set.Equals(Object)
  fullName.vb: CalcExpr.Expressions.Collections.Set.Equals(Object)
  name.vb: Equals(Object)
- uid: CalcExpr.Expressions.Collections.Set.GetHashCode
  commentId: M:CalcExpr.Expressions.Collections.Set.GetHashCode
  id: GetHashCode
  parent: CalcExpr.Expressions.Collections.Set
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Set.GetHashCode()
  fullName: CalcExpr.Expressions.Collections.Set.GetHashCode()
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/Set.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: GetHashCode
    path: ../src/CalcExpr/Expressions/Collections/Set.cs
    startLine: 119
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: CalcExpr.Expressions.Collections.Set.GetHashCode*
- uid: CalcExpr.Expressions.Collections.Set.ToString
  commentId: M:CalcExpr.Expressions.Collections.Set.ToString
  id: ToString
  parent: CalcExpr.Expressions.Collections.Set
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Set.ToString()
  fullName: CalcExpr.Expressions.Collections.Set.ToString()
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/Set.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: ToString
    path: ../src/CalcExpr/Expressions/Collections/Set.cs
    startLine: 122
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: CalcExpr.Expressions.Collections.Set.ToString*
  implements:
  - CalcExpr.Expressions.IExpression.ToString
- uid: CalcExpr.Expressions.Collections.Set.ToString(System.String)
  commentId: M:CalcExpr.Expressions.Collections.Set.ToString(System.String)
  id: ToString(System.String)
  parent: CalcExpr.Expressions.Collections.Set
  langs:
  - csharp
  - vb
  name: ToString(string?)
  nameWithType: Set.ToString(string?)
  fullName: CalcExpr.Expressions.Collections.Set.ToString(string?)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/Set.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: ToString
    path: ../src/CalcExpr/Expressions/Collections/Set.cs
    startLine: 125
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  summary: >-
    Returns a <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref> using the specified 

    format <xref href="System.String" data-throw-if-not-resolved="false"></xref> for number formats.
  example: []
  syntax:
    content: public string ToString(string? format)
    parameters:
    - id: format
      type: System.String
      description: ''
    return:
      type: System.String
      description: >-
        A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents the current <xref href="CalcExpr.Expressions.IExpression" data-throw-if-not-resolved="false"></xref> using the specified format 

        <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function ToString(format As String) As String
  overload: CalcExpr.Expressions.Collections.Set.ToString*
  implements:
  - CalcExpr.Expressions.IExpression.ToString(System.String)
  nameWithType.vb: Set.ToString(String)
  fullName.vb: CalcExpr.Expressions.Collections.Set.ToString(String)
  name.vb: ToString(String)
- uid: CalcExpr.Expressions.Collections.Set.GetEnumerator
  commentId: M:CalcExpr.Expressions.Collections.Set.GetEnumerator
  id: GetEnumerator
  parent: CalcExpr.Expressions.Collections.Set
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: Set.GetEnumerator()
  fullName: CalcExpr.Expressions.Collections.Set.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Collections/Set.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: GetEnumerator
    path: ../src/CalcExpr/Expressions/Collections/Set.cs
    startLine: 128
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Collections
  summary: Returns an enumerator that iterates through the collection.
  example: []
  syntax:
    content: public IEnumerator<IExpression> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{CalcExpr.Expressions.IExpression}
      description: An enumerator that can be used to iterate through the collection.
    content.vb: Public Function GetEnumerator() As IEnumerator(Of IExpression)
  overload: CalcExpr.Expressions.Collections.Set.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression}.GetEnumerator
references:
- uid: CalcExpr.Expressions.Collections
  commentId: N:CalcExpr.Expressions.Collections
  href: CalcExpr.html
  name: CalcExpr.Expressions.Collections
  nameWithType: CalcExpr.Expressions.Collections
  fullName: CalcExpr.Expressions.Collections
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Collections
    name: Collections
    href: CalcExpr.Expressions.Collections.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Collections
    name: Collections
    href: CalcExpr.Expressions.Collections.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: CalcExpr.Expressions.Collections.IEnumerableExpression
  commentId: T:CalcExpr.Expressions.Collections.IEnumerableExpression
  parent: CalcExpr.Expressions.Collections
  href: CalcExpr.Expressions.Collections.IEnumerableExpression.html
  name: IEnumerableExpression
  nameWithType: IEnumerableExpression
  fullName: CalcExpr.Expressions.Collections.IEnumerableExpression
- uid: CalcExpr.Expressions.IExpression
  commentId: T:CalcExpr.Expressions.IExpression
  parent: CalcExpr.Expressions
  href: CalcExpr.Expressions.IExpression.html
  name: IExpression
  nameWithType: IExpression
  fullName: CalcExpr.Expressions.IExpression
- uid: System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression}
  commentId: T:System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IExpression>
  nameWithType: IEnumerable<IExpression>
  fullName: System.Collections.Generic.IEnumerable<CalcExpr.Expressions.IExpression>
  nameWithType.vb: IEnumerable(Of IExpression)
  fullName.vb: System.Collections.Generic.IEnumerable(Of CalcExpr.Expressions.IExpression)
  name.vb: IEnumerable(Of IExpression)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: CalcExpr.Expressions.Interfaces.IBinaryOperable
  commentId: T:CalcExpr.Expressions.Interfaces.IBinaryOperable
  parent: CalcExpr.Expressions.Interfaces
  href: CalcExpr.Expressions.Interfaces.IBinaryOperable.html
  name: IBinaryOperable
  nameWithType: IBinaryOperable
  fullName: CalcExpr.Expressions.Interfaces.IBinaryOperable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CalcExpr.Expressions
  commentId: N:CalcExpr.Expressions
  href: CalcExpr.html
  name: CalcExpr.Expressions
  nameWithType: CalcExpr.Expressions
  fullName: CalcExpr.Expressions
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: CalcExpr.Expressions.Interfaces
  commentId: N:CalcExpr.Expressions.Interfaces
  href: CalcExpr.html
  name: CalcExpr.Expressions.Interfaces
  nameWithType: CalcExpr.Expressions.Interfaces
  fullName: CalcExpr.Expressions.Interfaces
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Interfaces
    name: Interfaces
    href: CalcExpr.Expressions.Interfaces.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Interfaces
    name: Interfaces
    href: CalcExpr.Expressions.Interfaces.html
- uid: CalcExpr.Expressions.Collections.Set.#ctor*
  commentId: Overload:CalcExpr.Expressions.Collections.Set.#ctor
  href: CalcExpr.Expressions.Collections.Set.html#CalcExpr_Expressions_Collections_Set__ctor_System_Collections_Generic_IEnumerable_CalcExpr_Expressions_IExpression__
  name: Set
  nameWithType: Set.Set
  fullName: CalcExpr.Expressions.Collections.Set.Set
  nameWithType.vb: Set.New
  fullName.vb: CalcExpr.Expressions.Collections.Set.New
  name.vb: New
- uid: CalcExpr.Expressions.Collections.Set.Count*
  commentId: Overload:CalcExpr.Expressions.Collections.Set.Count
  href: CalcExpr.Expressions.Collections.Set.html#CalcExpr_Expressions_Collections_Set_Count
  name: Count
  nameWithType: Set.Count
  fullName: CalcExpr.Expressions.Collections.Set.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: CalcExpr.Expressions.Terminals.Terminal
  commentId: T:CalcExpr.Expressions.Terminals.Terminal
  parent: CalcExpr.Expressions.Terminals
  href: CalcExpr.Expressions.Terminals.Terminal.html
  name: Terminal
  nameWithType: Terminal
  fullName: CalcExpr.Expressions.Terminals.Terminal
- uid: CalcExpr.Expressions.Collections.Set.Evaluate*
  commentId: Overload:CalcExpr.Expressions.Collections.Set.Evaluate
  href: CalcExpr.Expressions.Collections.Set.html#CalcExpr_Expressions_Collections_Set_Evaluate
  name: Evaluate
  nameWithType: Set.Evaluate
  fullName: CalcExpr.Expressions.Collections.Set.Evaluate
- uid: CalcExpr.Expressions.IExpression.Evaluate
  commentId: M:CalcExpr.Expressions.IExpression.Evaluate
  parent: CalcExpr.Expressions.IExpression
  href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_Evaluate
  name: Evaluate()
  nameWithType: IExpression.Evaluate()
  fullName: CalcExpr.Expressions.IExpression.Evaluate()
  spec.csharp:
  - uid: CalcExpr.Expressions.IExpression.Evaluate
    name: Evaluate
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_Evaluate
  - name: (
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.IExpression.Evaluate
    name: Evaluate
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_Evaluate
  - name: (
  - name: )
- uid: CalcExpr.Expressions.Terminals
  commentId: N:CalcExpr.Expressions.Terminals
  href: CalcExpr.html
  name: CalcExpr.Expressions.Terminals
  nameWithType: CalcExpr.Expressions.Terminals
  fullName: CalcExpr.Expressions.Terminals
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Terminals
    name: Terminals
    href: CalcExpr.Expressions.Terminals.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Terminals
    name: Terminals
    href: CalcExpr.Expressions.Terminals.html
- uid: CalcExpr.Expressions.IExpression.Evaluate(CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.IExpression.Evaluate(CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.IExpression
  href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_Evaluate_CalcExpr_Context_ExpressionContext_
  name: Evaluate(ExpressionContext)
  nameWithType: IExpression.Evaluate(ExpressionContext)
  fullName: CalcExpr.Expressions.IExpression.Evaluate(CalcExpr.Context.ExpressionContext)
  spec.csharp:
  - uid: CalcExpr.Expressions.IExpression.Evaluate(CalcExpr.Context.ExpressionContext)
    name: Evaluate
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_Evaluate_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.IExpression.Evaluate(CalcExpr.Context.ExpressionContext)
    name: Evaluate
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_Evaluate_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
- uid: CalcExpr.Context.ExpressionContext
  commentId: T:CalcExpr.Context.ExpressionContext
  parent: CalcExpr.Context
  href: CalcExpr.Context.ExpressionContext.html
  name: ExpressionContext
  nameWithType: ExpressionContext
  fullName: CalcExpr.Context.ExpressionContext
- uid: CalcExpr.Context
  commentId: N:CalcExpr.Context
  href: CalcExpr.html
  name: CalcExpr.Context
  nameWithType: CalcExpr.Context
  fullName: CalcExpr.Context
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Context
    name: Context
    href: CalcExpr.Context.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Context
    name: Context
    href: CalcExpr.Context.html
- uid: CalcExpr.Expressions.Collections.Set.StepEvaluate*
  commentId: Overload:CalcExpr.Expressions.Collections.Set.StepEvaluate
  href: CalcExpr.Expressions.Collections.Set.html#CalcExpr_Expressions_Collections_Set_StepEvaluate
  name: StepEvaluate
  nameWithType: Set.StepEvaluate
  fullName: CalcExpr.Expressions.Collections.Set.StepEvaluate
- uid: CalcExpr.Expressions.IExpression.StepEvaluate
  commentId: M:CalcExpr.Expressions.IExpression.StepEvaluate
  parent: CalcExpr.Expressions.IExpression
  href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_StepEvaluate
  name: StepEvaluate()
  nameWithType: IExpression.StepEvaluate()
  fullName: CalcExpr.Expressions.IExpression.StepEvaluate()
  spec.csharp:
  - uid: CalcExpr.Expressions.IExpression.StepEvaluate
    name: StepEvaluate
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_StepEvaluate
  - name: (
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.IExpression.StepEvaluate
    name: StepEvaluate
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_StepEvaluate
  - name: (
  - name: )
- uid: CalcExpr.Expressions.IExpression.StepEvaluate(CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.IExpression.StepEvaluate(CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.IExpression
  href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_StepEvaluate_CalcExpr_Context_ExpressionContext_
  name: StepEvaluate(ExpressionContext)
  nameWithType: IExpression.StepEvaluate(ExpressionContext)
  fullName: CalcExpr.Expressions.IExpression.StepEvaluate(CalcExpr.Context.ExpressionContext)
  spec.csharp:
  - uid: CalcExpr.Expressions.IExpression.StepEvaluate(CalcExpr.Context.ExpressionContext)
    name: StepEvaluate
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_StepEvaluate_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.IExpression.StepEvaluate(CalcExpr.Context.ExpressionContext)
    name: StepEvaluate
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_StepEvaluate_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
- uid: CalcExpr.Expressions.Collections.Set.BinaryLeftOperate*
  commentId: Overload:CalcExpr.Expressions.Collections.Set.BinaryLeftOperate
  href: CalcExpr.Expressions.Collections.Set.html#CalcExpr_Expressions_Collections_Set_BinaryLeftOperate_System_String_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  name: BinaryLeftOperate
  nameWithType: Set.BinaryLeftOperate
  fullName: CalcExpr.Expressions.Collections.Set.BinaryLeftOperate
- uid: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Interfaces.IBinaryOperable
  isExternal: true
  href: CalcExpr.Expressions.Interfaces.IBinaryOperable.html#CalcExpr_Expressions_Interfaces_IBinaryOperable_BinaryLeftOperate_System_String_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  name: BinaryLeftOperate(string, IExpression, ExpressionContext)
  nameWithType: IBinaryOperable.BinaryLeftOperate(string, IExpression, ExpressionContext)
  fullName: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryLeftOperate(string, CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  nameWithType.vb: IBinaryOperable.BinaryLeftOperate(String, IExpression, ExpressionContext)
  fullName.vb: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryLeftOperate(String, CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  name.vb: BinaryLeftOperate(String, IExpression, ExpressionContext)
  spec.csharp:
  - uid: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
    name: BinaryLeftOperate
    href: CalcExpr.Expressions.Interfaces.IBinaryOperable.html#CalcExpr_Expressions_Interfaces_IBinaryOperable_BinaryLeftOperate_System_String_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryLeftOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
    name: BinaryLeftOperate
    href: CalcExpr.Expressions.Interfaces.IBinaryOperable.html#CalcExpr_Expressions_Interfaces_IBinaryOperable_BinaryLeftOperate_System_String_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: CalcExpr.Expressions.Collections.Set.BinaryRightOperate*
  commentId: Overload:CalcExpr.Expressions.Collections.Set.BinaryRightOperate
  href: CalcExpr.Expressions.Collections.Set.html#CalcExpr_Expressions_Collections_Set_BinaryRightOperate_System_String_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  name: BinaryRightOperate
  nameWithType: Set.BinaryRightOperate
  fullName: CalcExpr.Expressions.Collections.Set.BinaryRightOperate
- uid: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Interfaces.IBinaryOperable
  isExternal: true
  href: CalcExpr.Expressions.Interfaces.IBinaryOperable.html#CalcExpr_Expressions_Interfaces_IBinaryOperable_BinaryRightOperate_System_String_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  name: BinaryRightOperate(string, IExpression, ExpressionContext)
  nameWithType: IBinaryOperable.BinaryRightOperate(string, IExpression, ExpressionContext)
  fullName: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryRightOperate(string, CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  nameWithType.vb: IBinaryOperable.BinaryRightOperate(String, IExpression, ExpressionContext)
  fullName.vb: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryRightOperate(String, CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  name.vb: BinaryRightOperate(String, IExpression, ExpressionContext)
  spec.csharp:
  - uid: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
    name: BinaryRightOperate
    href: CalcExpr.Expressions.Interfaces.IBinaryOperable.html#CalcExpr_Expressions_Interfaces_IBinaryOperable_BinaryRightOperate_System_String_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Interfaces.IBinaryOperable.BinaryRightOperate(System.String,CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
    name: BinaryRightOperate
    href: CalcExpr.Expressions.Interfaces.IBinaryOperable.html#CalcExpr_Expressions_Interfaces_IBinaryOperable_BinaryRightOperate_System_String_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
- uid: CalcExpr.Expressions.Collections.Set.Map*
  commentId: Overload:CalcExpr.Expressions.Collections.Set.Map
  href: CalcExpr.Expressions.Collections.Set.html#CalcExpr_Expressions_Collections_Set_Map_System_Func_CalcExpr_Expressions_IExpression_CalcExpr_Expressions_IExpression__
  name: Map
  nameWithType: Set.Map
  fullName: CalcExpr.Expressions.Collections.Set.Map
- uid: CalcExpr.Expressions.Collections.IEnumerableExpression.Map(System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  commentId: M:CalcExpr.Expressions.Collections.IEnumerableExpression.Map(System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  parent: CalcExpr.Expressions.Collections.IEnumerableExpression
  isExternal: true
  href: CalcExpr.Expressions.Collections.IEnumerableExpression.html#CalcExpr_Expressions_Collections_IEnumerableExpression_Map_System_Func_CalcExpr_Expressions_IExpression_CalcExpr_Expressions_IExpression__
  name: Map(Func<IExpression, IExpression>)
  nameWithType: IEnumerableExpression.Map(Func<IExpression, IExpression>)
  fullName: CalcExpr.Expressions.Collections.IEnumerableExpression.Map(System.Func<CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression>)
  nameWithType.vb: IEnumerableExpression.Map(Func(Of IExpression, IExpression))
  fullName.vb: CalcExpr.Expressions.Collections.IEnumerableExpression.Map(System.Func(Of CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression))
  name.vb: Map(Func(Of IExpression, IExpression))
  spec.csharp:
  - uid: CalcExpr.Expressions.Collections.IEnumerableExpression.Map(System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
    name: Map
    href: CalcExpr.Expressions.Collections.IEnumerableExpression.html#CalcExpr_Expressions_Collections_IEnumerableExpression_Map_System_Func_CalcExpr_Expressions_IExpression_CalcExpr_Expressions_IExpression__
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Collections.IEnumerableExpression.Map(System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
    name: Map
    href: CalcExpr.Expressions.Collections.IEnumerableExpression.html#CalcExpr_Expressions_Collections_IEnumerableExpression_Map_System_Func_CalcExpr_Expressions_IExpression_CalcExpr_Expressions_IExpression__
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: )
  - name: )
- uid: System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression}
  commentId: T:System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<IExpression, IExpression>
  nameWithType: Func<IExpression, IExpression>
  fullName: System.Func<CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression>
  nameWithType.vb: Func(Of IExpression, IExpression)
  fullName.vb: System.Func(Of CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression)
  name.vb: Func(Of IExpression, IExpression)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: CalcExpr.Expressions.Collections.Set.Combine*
  commentId: Overload:CalcExpr.Expressions.Collections.Set.Combine
  href: CalcExpr.Expressions.Collections.Set.html#CalcExpr_Expressions_Collections_Set_Combine_System_Collections_Generic_IEnumerable_CalcExpr_Expressions_IExpression__System_Func_CalcExpr_Expressions_IExpression_CalcExpr_Expressions_IExpression_CalcExpr_Expressions_IExpression__
  name: Combine
  nameWithType: Set.Combine
  fullName: CalcExpr.Expressions.Collections.Set.Combine
- uid: CalcExpr.Expressions.Collections.IEnumerableExpression.Combine(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression},System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  commentId: M:CalcExpr.Expressions.Collections.IEnumerableExpression.Combine(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression},System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
  parent: CalcExpr.Expressions.Collections.IEnumerableExpression
  isExternal: true
  href: CalcExpr.Expressions.Collections.IEnumerableExpression.html#CalcExpr_Expressions_Collections_IEnumerableExpression_Combine_System_Collections_Generic_IEnumerable_CalcExpr_Expressions_IExpression__System_Func_CalcExpr_Expressions_IExpression_CalcExpr_Expressions_IExpression_CalcExpr_Expressions_IExpression__
  name: Combine(IEnumerable<IExpression>, Func<IExpression, IExpression, IExpression>)
  nameWithType: IEnumerableExpression.Combine(IEnumerable<IExpression>, Func<IExpression, IExpression, IExpression>)
  fullName: CalcExpr.Expressions.Collections.IEnumerableExpression.Combine(System.Collections.Generic.IEnumerable<CalcExpr.Expressions.IExpression>, System.Func<CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression>)
  nameWithType.vb: IEnumerableExpression.Combine(IEnumerable(Of IExpression), Func(Of IExpression, IExpression, IExpression))
  fullName.vb: CalcExpr.Expressions.Collections.IEnumerableExpression.Combine(System.Collections.Generic.IEnumerable(Of CalcExpr.Expressions.IExpression), System.Func(Of CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression))
  name.vb: Combine(IEnumerable(Of IExpression), Func(Of IExpression, IExpression, IExpression))
  spec.csharp:
  - uid: CalcExpr.Expressions.Collections.IEnumerableExpression.Combine(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression},System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
    name: Combine
    href: CalcExpr.Expressions.Collections.IEnumerableExpression.html#CalcExpr_Expressions_Collections_IEnumerableExpression_Combine_System_Collections_Generic_IEnumerable_CalcExpr_Expressions_IExpression__System_Func_CalcExpr_Expressions_IExpression_CalcExpr_Expressions_IExpression_CalcExpr_Expressions_IExpression__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Collections.IEnumerableExpression.Combine(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression},System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression})
    name: Combine
    href: CalcExpr.Expressions.Collections.IEnumerableExpression.html#CalcExpr_Expressions_Collections_IEnumerableExpression_Combine_System_Collections_Generic_IEnumerable_CalcExpr_Expressions_IExpression__System_Func_CalcExpr_Expressions_IExpression_CalcExpr_Expressions_IExpression_CalcExpr_Expressions_IExpression__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: )
  - name: )
- uid: System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression}
  commentId: T:System.Func{CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression,CalcExpr.Expressions.IExpression}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<IExpression, IExpression, IExpression>
  nameWithType: Func<IExpression, IExpression, IExpression>
  fullName: System.Func<CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression>
  nameWithType.vb: Func(Of IExpression, IExpression, IExpression)
  fullName.vb: System.Func(Of CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression, CalcExpr.Expressions.IExpression)
  name.vb: Func(Of IExpression, IExpression, IExpression)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: CalcExpr.Expressions.Collections.Set.ConvertIEnumerable*
  commentId: Overload:CalcExpr.Expressions.Collections.Set.ConvertIEnumerable
  href: CalcExpr.Expressions.Collections.Set.html#CalcExpr_Expressions_Collections_Set_ConvertIEnumerable_System_Collections_Generic_IEnumerable_CalcExpr_Expressions_IExpression__
  name: ConvertIEnumerable
  nameWithType: Set.ConvertIEnumerable
  fullName: CalcExpr.Expressions.Collections.Set.ConvertIEnumerable
- uid: CalcExpr.Expressions.Collections.IEnumerableExpression.ConvertIEnumerable(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression})
  commentId: M:CalcExpr.Expressions.Collections.IEnumerableExpression.ConvertIEnumerable(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression})
  parent: CalcExpr.Expressions.Collections.IEnumerableExpression
  isExternal: true
  href: CalcExpr.Expressions.Collections.IEnumerableExpression.html#CalcExpr_Expressions_Collections_IEnumerableExpression_ConvertIEnumerable_System_Collections_Generic_IEnumerable_CalcExpr_Expressions_IExpression__
  name: ConvertIEnumerable(IEnumerable<IExpression>)
  nameWithType: IEnumerableExpression.ConvertIEnumerable(IEnumerable<IExpression>)
  fullName: CalcExpr.Expressions.Collections.IEnumerableExpression.ConvertIEnumerable(System.Collections.Generic.IEnumerable<CalcExpr.Expressions.IExpression>)
  nameWithType.vb: IEnumerableExpression.ConvertIEnumerable(IEnumerable(Of IExpression))
  fullName.vb: CalcExpr.Expressions.Collections.IEnumerableExpression.ConvertIEnumerable(System.Collections.Generic.IEnumerable(Of CalcExpr.Expressions.IExpression))
  name.vb: ConvertIEnumerable(IEnumerable(Of IExpression))
  spec.csharp:
  - uid: CalcExpr.Expressions.Collections.IEnumerableExpression.ConvertIEnumerable(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression})
    name: ConvertIEnumerable
    href: CalcExpr.Expressions.Collections.IEnumerableExpression.html#CalcExpr_Expressions_Collections_IEnumerableExpression_ConvertIEnumerable_System_Collections_Generic_IEnumerable_CalcExpr_Expressions_IExpression__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Collections.IEnumerableExpression.ConvertIEnumerable(System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression})
    name: ConvertIEnumerable
    href: CalcExpr.Expressions.Collections.IEnumerableExpression.html#CalcExpr_Expressions_Collections_IEnumerableExpression_ConvertIEnumerable_System_Collections_Generic_IEnumerable_CalcExpr_Expressions_IExpression__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: CalcExpr.Expressions.Collections.Set.Equals*
  commentId: Overload:CalcExpr.Expressions.Collections.Set.Equals
  href: CalcExpr.Expressions.Collections.Set.html#CalcExpr_Expressions_Collections_Set_Equals_System_Object_
  name: Equals
  nameWithType: Set.Equals
  fullName: CalcExpr.Expressions.Collections.Set.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: CalcExpr.Expressions.Collections.Set.GetHashCode*
  commentId: Overload:CalcExpr.Expressions.Collections.Set.GetHashCode
  href: CalcExpr.Expressions.Collections.Set.html#CalcExpr_Expressions_Collections_Set_GetHashCode
  name: GetHashCode
  nameWithType: Set.GetHashCode
  fullName: CalcExpr.Expressions.Collections.Set.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: CalcExpr.Expressions.Collections.Set.ToString*
  commentId: Overload:CalcExpr.Expressions.Collections.Set.ToString
  href: CalcExpr.Expressions.Collections.Set.html#CalcExpr_Expressions_Collections_Set_ToString
  name: ToString
  nameWithType: Set.ToString
  fullName: CalcExpr.Expressions.Collections.Set.ToString
- uid: CalcExpr.Expressions.IExpression.ToString
  commentId: M:CalcExpr.Expressions.IExpression.ToString
  parent: CalcExpr.Expressions.IExpression
  href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_ToString
  name: ToString()
  nameWithType: IExpression.ToString()
  fullName: CalcExpr.Expressions.IExpression.ToString()
  spec.csharp:
  - uid: CalcExpr.Expressions.IExpression.ToString
    name: ToString
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.IExpression.ToString
    name: ToString
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_ToString
  - name: (
  - name: )
- uid: CalcExpr.Expressions.IExpression.ToString(System.String)
  commentId: M:CalcExpr.Expressions.IExpression.ToString(System.String)
  parent: CalcExpr.Expressions.IExpression
  isExternal: true
  href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_ToString_System_String_
  name: ToString(string)
  nameWithType: IExpression.ToString(string)
  fullName: CalcExpr.Expressions.IExpression.ToString(string)
  nameWithType.vb: IExpression.ToString(String)
  fullName.vb: CalcExpr.Expressions.IExpression.ToString(String)
  name.vb: ToString(String)
  spec.csharp:
  - uid: CalcExpr.Expressions.IExpression.ToString(System.String)
    name: ToString
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_ToString_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.IExpression.ToString(System.String)
    name: ToString
    href: CalcExpr.Expressions.IExpression.html#CalcExpr_Expressions_IExpression_ToString_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: CalcExpr.Expressions.Collections.Set.GetEnumerator*
  commentId: Overload:CalcExpr.Expressions.Collections.Set.GetEnumerator
  href: CalcExpr.Expressions.Collections.Set.html#CalcExpr_Expressions_Collections_Set_GetEnumerator
  name: GetEnumerator
  nameWithType: Set.GetEnumerator
  fullName: CalcExpr.Expressions.Collections.Set.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<IExpression>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<CalcExpr.Expressions.IExpression>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of IExpression).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of CalcExpr.Expressions.IExpression).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{CalcExpr.Expressions.IExpression}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{CalcExpr.Expressions.IExpression}
  commentId: T:System.Collections.Generic.IEnumerator{CalcExpr.Expressions.IExpression}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<IExpression>
  nameWithType: IEnumerator<IExpression>
  fullName: System.Collections.Generic.IEnumerator<CalcExpr.Expressions.IExpression>
  nameWithType.vb: IEnumerator(Of IExpression)
  fullName.vb: System.Collections.Generic.IEnumerator(Of CalcExpr.Expressions.IExpression)
  name.vb: IEnumerator(Of IExpression)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
