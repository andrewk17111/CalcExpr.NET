### YamlMime:ManagedReference
items:
- uid: CalcExpr.Expressions.Components.TypeParameter`1
  commentId: T:CalcExpr.Expressions.Components.TypeParameter`1
  id: TypeParameter`1
  parent: CalcExpr.Expressions.Components
  children:
  - CalcExpr.Expressions.Components.TypeParameter`1.#ctor(System.Collections.Generic.IEnumerable{CalcExpr.FunctionAttributes.FunctionAttribute},System.Boolean)
  - CalcExpr.Expressions.Components.TypeParameter`1.AllowNull
  - CalcExpr.Expressions.Components.TypeParameter`1.Attributes
  - CalcExpr.Expressions.Components.TypeParameter`1.Equals(System.Object)
  - CalcExpr.Expressions.Components.TypeParameter`1.GetHashCode
  - CalcExpr.Expressions.Components.TypeParameter`1.ParameterType
  - CalcExpr.Expressions.Components.TypeParameter`1.ProcessArgument(CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  langs:
  - csharp
  - vb
  name: TypeParameter<T>
  nameWithType: TypeParameter<T>
  fullName: CalcExpr.Expressions.Components.TypeParameter<T>
  type: Struct
  source:
    remote:
      path: src/CalcExpr/Expressions/Components/TypeParameter.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: TypeParameter
    path: ../src/CalcExpr/Expressions/Components/TypeParameter.cs
    startLine: 7
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Components
  syntax:
    content: 'public readonly struct TypeParameter<T> : IParameter'
    typeParameters:
    - id: T
    content.vb: Public Structure TypeParameter(Of T) Implements IParameter
  implements:
  - CalcExpr.Expressions.Components.IParameter
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: TypeParameter(Of T)
  fullName.vb: CalcExpr.Expressions.Components.TypeParameter(Of T)
  name.vb: TypeParameter(Of T)
- uid: CalcExpr.Expressions.Components.TypeParameter`1.#ctor(System.Collections.Generic.IEnumerable{CalcExpr.FunctionAttributes.FunctionAttribute},System.Boolean)
  commentId: M:CalcExpr.Expressions.Components.TypeParameter`1.#ctor(System.Collections.Generic.IEnumerable{CalcExpr.FunctionAttributes.FunctionAttribute},System.Boolean)
  id: '#ctor(System.Collections.Generic.IEnumerable{CalcExpr.FunctionAttributes.FunctionAttribute},System.Boolean)'
  parent: CalcExpr.Expressions.Components.TypeParameter`1
  langs:
  - csharp
  - vb
  name: TypeParameter(IEnumerable<FunctionAttribute>, bool)
  nameWithType: TypeParameter<T>.TypeParameter(IEnumerable<FunctionAttribute>, bool)
  fullName: CalcExpr.Expressions.Components.TypeParameter<T>.TypeParameter(System.Collections.Generic.IEnumerable<CalcExpr.FunctionAttributes.FunctionAttribute>, bool)
  type: Constructor
  source:
    remote:
      path: src/CalcExpr/Expressions/Components/TypeParameter.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: .ctor
    path: ../src/CalcExpr/Expressions/Components/TypeParameter.cs
    startLine: 7
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Components
  syntax:
    content: public TypeParameter(IEnumerable<FunctionAttribute> attributes, bool allow_null)
    parameters:
    - id: attributes
      type: System.Collections.Generic.IEnumerable{CalcExpr.FunctionAttributes.FunctionAttribute}
    - id: allow_null
      type: System.Boolean
    content.vb: Public Sub New(attributes As IEnumerable(Of FunctionAttribute), allow_null As Boolean)
  overload: CalcExpr.Expressions.Components.TypeParameter`1.#ctor*
  nameWithType.vb: TypeParameter(Of T).New(IEnumerable(Of FunctionAttribute), Boolean)
  fullName.vb: CalcExpr.Expressions.Components.TypeParameter(Of T).New(System.Collections.Generic.IEnumerable(Of CalcExpr.FunctionAttributes.FunctionAttribute), Boolean)
  name.vb: New(IEnumerable(Of FunctionAttribute), Boolean)
- uid: CalcExpr.Expressions.Components.TypeParameter`1.ParameterType
  commentId: F:CalcExpr.Expressions.Components.TypeParameter`1.ParameterType
  id: ParameterType
  parent: CalcExpr.Expressions.Components.TypeParameter`1
  langs:
  - csharp
  - vb
  name: ParameterType
  nameWithType: TypeParameter<T>.ParameterType
  fullName: CalcExpr.Expressions.Components.TypeParameter<T>.ParameterType
  type: Field
  source:
    remote:
      path: src/CalcExpr/Expressions/Components/TypeParameter.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: ParameterType
    path: ../src/CalcExpr/Expressions/Components/TypeParameter.cs
    startLine: 9
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Components
  syntax:
    content: public readonly Type ParameterType
    return:
      type: System.Type
    content.vb: Public ReadOnly ParameterType As Type
  nameWithType.vb: TypeParameter(Of T).ParameterType
  fullName.vb: CalcExpr.Expressions.Components.TypeParameter(Of T).ParameterType
- uid: CalcExpr.Expressions.Components.TypeParameter`1.Attributes
  commentId: P:CalcExpr.Expressions.Components.TypeParameter`1.Attributes
  id: Attributes
  parent: CalcExpr.Expressions.Components.TypeParameter`1
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: TypeParameter<T>.Attributes
  fullName: CalcExpr.Expressions.Components.TypeParameter<T>.Attributes
  type: Property
  source:
    remote:
      path: src/CalcExpr/Expressions/Components/TypeParameter.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Attributes
    path: ../src/CalcExpr/Expressions/Components/TypeParameter.cs
    startLine: 11
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Components
  example: []
  syntax:
    content: public FunctionAttribute[] Attributes { get; }
    parameters: []
    return:
      type: CalcExpr.FunctionAttributes.FunctionAttribute[]
    content.vb: Public ReadOnly Property Attributes As FunctionAttribute()
  overload: CalcExpr.Expressions.Components.TypeParameter`1.Attributes*
  implements:
  - CalcExpr.Expressions.Components.IParameter.Attributes
  nameWithType.vb: TypeParameter(Of T).Attributes
  fullName.vb: CalcExpr.Expressions.Components.TypeParameter(Of T).Attributes
- uid: CalcExpr.Expressions.Components.TypeParameter`1.AllowNull
  commentId: P:CalcExpr.Expressions.Components.TypeParameter`1.AllowNull
  id: AllowNull
  parent: CalcExpr.Expressions.Components.TypeParameter`1
  langs:
  - csharp
  - vb
  name: AllowNull
  nameWithType: TypeParameter<T>.AllowNull
  fullName: CalcExpr.Expressions.Components.TypeParameter<T>.AllowNull
  type: Property
  source:
    remote:
      path: src/CalcExpr/Expressions/Components/TypeParameter.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: AllowNull
    path: ../src/CalcExpr/Expressions/Components/TypeParameter.cs
    startLine: 13
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Components
  example: []
  syntax:
    content: public bool AllowNull { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AllowNull As Boolean
  overload: CalcExpr.Expressions.Components.TypeParameter`1.AllowNull*
  implements:
  - CalcExpr.Expressions.Components.IParameter.AllowNull
  nameWithType.vb: TypeParameter(Of T).AllowNull
  fullName.vb: CalcExpr.Expressions.Components.TypeParameter(Of T).AllowNull
- uid: CalcExpr.Expressions.Components.TypeParameter`1.ProcessArgument(CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Components.TypeParameter`1.ProcessArgument(CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  id: ProcessArgument(CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Components.TypeParameter`1
  langs:
  - csharp
  - vb
  name: ProcessArgument(IExpression, ExpressionContext)
  nameWithType: TypeParameter<T>.ProcessArgument(IExpression, ExpressionContext)
  fullName: CalcExpr.Expressions.Components.TypeParameter<T>.ProcessArgument(CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Components/TypeParameter.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: ProcessArgument
    path: ../src/CalcExpr/Expressions/Components/TypeParameter.cs
    startLine: 15
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Components
  example: []
  syntax:
    content: public object? ProcessArgument(IExpression argument, ExpressionContext context)
    parameters:
    - id: argument
      type: CalcExpr.Expressions.IExpression
    - id: context
      type: CalcExpr.Context.ExpressionContext
    return:
      type: System.Object
    content.vb: Public Function ProcessArgument(argument As IExpression, context As ExpressionContext) As Object
  overload: CalcExpr.Expressions.Components.TypeParameter`1.ProcessArgument*
  implements:
  - CalcExpr.Expressions.Components.IParameter.ProcessArgument(CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  nameWithType.vb: TypeParameter(Of T).ProcessArgument(IExpression, ExpressionContext)
  fullName.vb: CalcExpr.Expressions.Components.TypeParameter(Of T).ProcessArgument(CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
- uid: CalcExpr.Expressions.Components.TypeParameter`1.GetHashCode
  commentId: M:CalcExpr.Expressions.Components.TypeParameter`1.GetHashCode
  id: GetHashCode
  parent: CalcExpr.Expressions.Components.TypeParameter`1
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: TypeParameter<T>.GetHashCode()
  fullName: CalcExpr.Expressions.Components.TypeParameter<T>.GetHashCode()
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Components/TypeParameter.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: GetHashCode
    path: ../src/CalcExpr/Expressions/Components/TypeParameter.cs
    startLine: 25
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Components
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: CalcExpr.Expressions.Components.TypeParameter`1.GetHashCode*
  nameWithType.vb: TypeParameter(Of T).GetHashCode()
  fullName.vb: CalcExpr.Expressions.Components.TypeParameter(Of T).GetHashCode()
- uid: CalcExpr.Expressions.Components.TypeParameter`1.Equals(System.Object)
  commentId: M:CalcExpr.Expressions.Components.TypeParameter`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: CalcExpr.Expressions.Components.TypeParameter`1
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: TypeParameter<T>.Equals(object?)
  fullName: CalcExpr.Expressions.Components.TypeParameter<T>.Equals(object?)
  type: Method
  source:
    remote:
      path: src/CalcExpr/Expressions/Components/TypeParameter.cs
      branch: dev
      repo: https://github.com/andrewk17111/CalcExpr.NET.git
    id: Equals
    path: ../src/CalcExpr/Expressions/Components/TypeParameter.cs
    startLine: 28
  assemblies:
  - CalcExpr
  namespace: CalcExpr.Expressions.Components
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: CalcExpr.Expressions.Components.TypeParameter`1.Equals*
  nameWithType.vb: TypeParameter(Of T).Equals(Object)
  fullName.vb: CalcExpr.Expressions.Components.TypeParameter(Of T).Equals(Object)
  name.vb: Equals(Object)
references:
- uid: CalcExpr.Expressions.Components
  commentId: N:CalcExpr.Expressions.Components
  href: CalcExpr.html
  name: CalcExpr.Expressions.Components
  nameWithType: CalcExpr.Expressions.Components
  fullName: CalcExpr.Expressions.Components
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Components
    name: Components
    href: CalcExpr.Expressions.Components.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  - name: .
  - uid: CalcExpr.Expressions.Components
    name: Components
    href: CalcExpr.Expressions.Components.html
- uid: CalcExpr.Expressions.Components.IParameter
  commentId: T:CalcExpr.Expressions.Components.IParameter
  parent: CalcExpr.Expressions.Components
  href: CalcExpr.Expressions.Components.IParameter.html
  name: IParameter
  nameWithType: IParameter
  fullName: CalcExpr.Expressions.Components.IParameter
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CalcExpr.Expressions.Components.TypeParameter`1.#ctor*
  commentId: Overload:CalcExpr.Expressions.Components.TypeParameter`1.#ctor
  href: CalcExpr.Expressions.Components.TypeParameter-1.html#CalcExpr_Expressions_Components_TypeParameter_1__ctor_System_Collections_Generic_IEnumerable_CalcExpr_FunctionAttributes_FunctionAttribute__System_Boolean_
  name: TypeParameter
  nameWithType: TypeParameter<T>.TypeParameter
  fullName: CalcExpr.Expressions.Components.TypeParameter<T>.TypeParameter
  nameWithType.vb: TypeParameter(Of T).New
  fullName.vb: CalcExpr.Expressions.Components.TypeParameter(Of T).New
  name.vb: New
- uid: System.Collections.Generic.IEnumerable{CalcExpr.FunctionAttributes.FunctionAttribute}
  commentId: T:System.Collections.Generic.IEnumerable{CalcExpr.FunctionAttributes.FunctionAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<FunctionAttribute>
  nameWithType: IEnumerable<FunctionAttribute>
  fullName: System.Collections.Generic.IEnumerable<CalcExpr.FunctionAttributes.FunctionAttribute>
  nameWithType.vb: IEnumerable(Of FunctionAttribute)
  fullName.vb: System.Collections.Generic.IEnumerable(Of CalcExpr.FunctionAttributes.FunctionAttribute)
  name.vb: IEnumerable(Of FunctionAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: CalcExpr.FunctionAttributes.FunctionAttribute
    name: FunctionAttribute
    href: CalcExpr.FunctionAttributes.FunctionAttribute.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: CalcExpr.FunctionAttributes.FunctionAttribute
    name: FunctionAttribute
    href: CalcExpr.FunctionAttributes.FunctionAttribute.html
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: CalcExpr.Expressions.Components.TypeParameter`1.Attributes*
  commentId: Overload:CalcExpr.Expressions.Components.TypeParameter`1.Attributes
  href: CalcExpr.Expressions.Components.TypeParameter-1.html#CalcExpr_Expressions_Components_TypeParameter_1_Attributes
  name: Attributes
  nameWithType: TypeParameter<T>.Attributes
  fullName: CalcExpr.Expressions.Components.TypeParameter<T>.Attributes
  nameWithType.vb: TypeParameter(Of T).Attributes
  fullName.vb: CalcExpr.Expressions.Components.TypeParameter(Of T).Attributes
- uid: CalcExpr.Expressions.Components.IParameter.Attributes
  commentId: P:CalcExpr.Expressions.Components.IParameter.Attributes
  parent: CalcExpr.Expressions.Components.IParameter
  href: CalcExpr.Expressions.Components.IParameter.html#CalcExpr_Expressions_Components_IParameter_Attributes
  name: Attributes
  nameWithType: IParameter.Attributes
  fullName: CalcExpr.Expressions.Components.IParameter.Attributes
- uid: CalcExpr.FunctionAttributes.FunctionAttribute[]
  isExternal: true
  href: CalcExpr.FunctionAttributes.FunctionAttribute.html
  name: FunctionAttribute[]
  nameWithType: FunctionAttribute[]
  fullName: CalcExpr.FunctionAttributes.FunctionAttribute[]
  nameWithType.vb: FunctionAttribute()
  fullName.vb: CalcExpr.FunctionAttributes.FunctionAttribute()
  name.vb: FunctionAttribute()
  spec.csharp:
  - uid: CalcExpr.FunctionAttributes.FunctionAttribute
    name: FunctionAttribute
    href: CalcExpr.FunctionAttributes.FunctionAttribute.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: CalcExpr.FunctionAttributes.FunctionAttribute
    name: FunctionAttribute
    href: CalcExpr.FunctionAttributes.FunctionAttribute.html
  - name: (
  - name: )
- uid: CalcExpr.Expressions.Components.TypeParameter`1.AllowNull*
  commentId: Overload:CalcExpr.Expressions.Components.TypeParameter`1.AllowNull
  href: CalcExpr.Expressions.Components.TypeParameter-1.html#CalcExpr_Expressions_Components_TypeParameter_1_AllowNull
  name: AllowNull
  nameWithType: TypeParameter<T>.AllowNull
  fullName: CalcExpr.Expressions.Components.TypeParameter<T>.AllowNull
  nameWithType.vb: TypeParameter(Of T).AllowNull
  fullName.vb: CalcExpr.Expressions.Components.TypeParameter(Of T).AllowNull
- uid: CalcExpr.Expressions.Components.IParameter.AllowNull
  commentId: P:CalcExpr.Expressions.Components.IParameter.AllowNull
  parent: CalcExpr.Expressions.Components.IParameter
  href: CalcExpr.Expressions.Components.IParameter.html#CalcExpr_Expressions_Components_IParameter_AllowNull
  name: AllowNull
  nameWithType: IParameter.AllowNull
  fullName: CalcExpr.Expressions.Components.IParameter.AllowNull
- uid: CalcExpr.Expressions.Components.TypeParameter`1.ProcessArgument*
  commentId: Overload:CalcExpr.Expressions.Components.TypeParameter`1.ProcessArgument
  href: CalcExpr.Expressions.Components.TypeParameter-1.html#CalcExpr_Expressions_Components_TypeParameter_1_ProcessArgument_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  name: ProcessArgument
  nameWithType: TypeParameter<T>.ProcessArgument
  fullName: CalcExpr.Expressions.Components.TypeParameter<T>.ProcessArgument
  nameWithType.vb: TypeParameter(Of T).ProcessArgument
  fullName.vb: CalcExpr.Expressions.Components.TypeParameter(Of T).ProcessArgument
- uid: CalcExpr.Expressions.Components.IParameter.ProcessArgument(CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  commentId: M:CalcExpr.Expressions.Components.IParameter.ProcessArgument(CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
  parent: CalcExpr.Expressions.Components.IParameter
  href: CalcExpr.Expressions.Components.IParameter.html#CalcExpr_Expressions_Components_IParameter_ProcessArgument_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  name: ProcessArgument(IExpression, ExpressionContext)
  nameWithType: IParameter.ProcessArgument(IExpression, ExpressionContext)
  fullName: CalcExpr.Expressions.Components.IParameter.ProcessArgument(CalcExpr.Expressions.IExpression, CalcExpr.Context.ExpressionContext)
  spec.csharp:
  - uid: CalcExpr.Expressions.Components.IParameter.ProcessArgument(CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
    name: ProcessArgument
    href: CalcExpr.Expressions.Components.IParameter.html#CalcExpr_Expressions_Components_IParameter_ProcessArgument_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
  spec.vb:
  - uid: CalcExpr.Expressions.Components.IParameter.ProcessArgument(CalcExpr.Expressions.IExpression,CalcExpr.Context.ExpressionContext)
    name: ProcessArgument
    href: CalcExpr.Expressions.Components.IParameter.html#CalcExpr_Expressions_Components_IParameter_ProcessArgument_CalcExpr_Expressions_IExpression_CalcExpr_Context_ExpressionContext_
  - name: (
  - uid: CalcExpr.Expressions.IExpression
    name: IExpression
    href: CalcExpr.Expressions.IExpression.html
  - name: ','
  - name: " "
  - uid: CalcExpr.Context.ExpressionContext
    name: ExpressionContext
    href: CalcExpr.Context.ExpressionContext.html
  - name: )
- uid: CalcExpr.Expressions.IExpression
  commentId: T:CalcExpr.Expressions.IExpression
  parent: CalcExpr.Expressions
  href: CalcExpr.Expressions.IExpression.html
  name: IExpression
  nameWithType: IExpression
  fullName: CalcExpr.Expressions.IExpression
- uid: CalcExpr.Context.ExpressionContext
  commentId: T:CalcExpr.Context.ExpressionContext
  parent: CalcExpr.Context
  href: CalcExpr.Context.ExpressionContext.html
  name: ExpressionContext
  nameWithType: ExpressionContext
  fullName: CalcExpr.Context.ExpressionContext
- uid: CalcExpr.Expressions
  commentId: N:CalcExpr.Expressions
  href: CalcExpr.html
  name: CalcExpr.Expressions
  nameWithType: CalcExpr.Expressions
  fullName: CalcExpr.Expressions
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Expressions
    name: Expressions
    href: CalcExpr.Expressions.html
- uid: CalcExpr.Context
  commentId: N:CalcExpr.Context
  href: CalcExpr.html
  name: CalcExpr.Context
  nameWithType: CalcExpr.Context
  fullName: CalcExpr.Context
  spec.csharp:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Context
    name: Context
    href: CalcExpr.Context.html
  spec.vb:
  - uid: CalcExpr
    name: CalcExpr
    href: CalcExpr.html
  - name: .
  - uid: CalcExpr.Context
    name: Context
    href: CalcExpr.Context.html
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: CalcExpr.Expressions.Components.TypeParameter`1.GetHashCode*
  commentId: Overload:CalcExpr.Expressions.Components.TypeParameter`1.GetHashCode
  href: CalcExpr.Expressions.Components.TypeParameter-1.html#CalcExpr_Expressions_Components_TypeParameter_1_GetHashCode
  name: GetHashCode
  nameWithType: TypeParameter<T>.GetHashCode
  fullName: CalcExpr.Expressions.Components.TypeParameter<T>.GetHashCode
  nameWithType.vb: TypeParameter(Of T).GetHashCode
  fullName.vb: CalcExpr.Expressions.Components.TypeParameter(Of T).GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: CalcExpr.Expressions.Components.TypeParameter`1.Equals*
  commentId: Overload:CalcExpr.Expressions.Components.TypeParameter`1.Equals
  href: CalcExpr.Expressions.Components.TypeParameter-1.html#CalcExpr_Expressions_Components_TypeParameter_1_Equals_System_Object_
  name: Equals
  nameWithType: TypeParameter<T>.Equals
  fullName: CalcExpr.Expressions.Components.TypeParameter<T>.Equals
  nameWithType.vb: TypeParameter(Of T).Equals
  fullName.vb: CalcExpr.Expressions.Components.TypeParameter(Of T).Equals
